/**
 * Low-Level interface to act as recipient for error messages generated by a
 * parser/compiler.
 */

export abstract class IMessageHandler {

    /**
     *
     * When a location is undefined, the value of its offset is 0.
     *
     * @param errorCode
     * @param msgLocation
     * @param errorLocation
     * @param filename
     * @param errorInfo
     */
    abstract handleMessage(errorCode: number, msgLocation: Int32Array, errorLocation: Int32Array, filename: string, errorInfo: string[]): void;
}
export namespace IMessageHandler {


    /**
     * The following constants can be used as indexes to dereference
     * values in the msgLocation and errorLocation arrays.
     *
     * Locations are constructed by the method getLocation in LexStream which
     * takes two arguments: a start and an end location and returns an array
     * of 6 integers.
     */
    export const OFFSET_INDEX: number = 0;
    export const LENGTH_INDEX: number = 1;
    export const START_LINE_INDEX: number = 2;
    export const START_COLUMN_INDEX: number = 3;
    export const END_LINE_INDEX: number = 4;
    export const END_COLUMN_INDEX: number = 5;

}

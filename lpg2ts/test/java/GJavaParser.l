
Options in effect for e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:

    ACTION-BLOCK=("E:\LPG-typescript-runtime\lpg2ts\test\java/JavaParser.ts","/.","./")

    AST-DIRECTORY=""  AST-TYPE="Ast"  NOATTRIBUTES  AUTOMATIC-AST=NESTED  
    NOBACKTRACK  BYTE  CONFLICTS  
    DAT-DIRECTORY="e:\LPG2-grammars-example\java-ts-version\"  
    DAT-FILE="e:\LPG2-grammars-example\java-ts-version\JavaParserdcl.data"  
    DCL-FILE="E:\LPG-typescript-runtime\lpg2ts\test\java/JavaParserdcl.ts"  
    NODEBUG  
    DEF-FILE="E:\LPG-typescript-runtime\lpg2ts\test\java/JavaParserdef.ts"  
    DIRECTORY-PREFIX=""  NOEDIT  ERROR-MAPS  ESCAPE='%'  
    EXPORT-TERMINALS=("E:\LPG-typescript-runtime\lpg2ts\test\java/JavaParserexp.ts","","")
    EXTENDS-PARSETABLE  FACTORY="new "  FILE-PREFIX="JavaParser"  FIRST  FOLLOW
    NOGLR  NOGOTO-DEFAULT  
    GRM-FILE="e:/LPG2-grammars-example/java-ts-version/GJavaParser.g"  
    IMP-FILE="E:\LPG-typescript-runtime\lpg2ts\test\java/JavaParserimp.ts"  
    IMPORT-TERMINALS="GJavaLexer.gi"  
    INCLUDE-DIRECTORY="E:/LPG2/lpg-generator-templates-2.1.00/include/typescript;E:/LPG2/lpg-generator-templates-2.1.00/templates/typescript"
    LALR=1  LEGACY  LIST  MARGIN=4  MAX-CASES=1024  NAMES=OPTIMIZED  NONT-CHECK
    OR_MARKER='|'  OUT-DIRECTORY="E:\LPG-typescript-runtime\lpg2ts\test\java"  
    PACKAGE="LpgJava"  PARENT-SAVED  PARSETABLE-INTERFACES="ParseTable"  
    PREFIX="TK_"  PRIORITY  PROGRAMMING_LANGUAGE=TYPESCRIPT  
    PRS-FILE="E:\LPG-typescript-runtime\lpg2ts\test\java/JavaParserprs.ts"  
    NOQUIET  READ-REDUCE  REMAP-TERMINALS  RULE_CLASSNAMES=SEQUENTIAL  SCOPES  
    NOSERIALIZE  NOSHIFT-DEFAULT  NOSINGLE-PRODUCTIONS  NOSOFT-KEYWORDS  STATES
    SUFFIX=""  
    SYM-FILE="E:\LPG-typescript-runtime\lpg2ts\test\java/JavaParsersym.ts"  
    TAB-FILE="GJavaParser.t"  TABLE  TEMPLATE="dtParserTemplateF.gi"  
    TRACE=CONFLICTS  VARIABLES  VERBOSE  VISITOR=DEFAULT  VISITOR-TYPE="Visitor"
    WARNINGS  XREF  


Predefined Macros:

    $rule_number
    $rule_text
    $rule_size
    $input_file
    $current_line
    $next_line
    $#identifier
    $symbol_declarations
    $num_rules
    $num_terminals
    $num_nonterminals
    $num_non_terminals
    $num_symbols
    $template
    $file_prefix
    $package
    $ast_package
    $ast_type
    $exp_type
    $prs_type
    $sym_type
    $action_type
    $visitor_type
    $prefix
    $suffix
    $entry_name
    $entry_marker



Defined Symbols:



    $Header
    /.    
                    //    
                    // Rule %rule_number:  %rule_text    
                    //    
                    ./


    $BeginAction
    /.%Header%case %rule_number: {    
                        //#line %next_line "%input_file%"./


    $EndAction
    /.            break;    
                    }./


    $BeginJava
    /.%Header%case %rule_number: {    
                        %symbol_declarations    
                        //#line %next_line "%input_file%"./


    $EndJava
    /.%EndAction./


    $NoAction
    /.%Header%case %rule_number:    
                        break;./


    $BadAction
    /.%Header%case %rule_number:    
                        throw Error("No action specified for rule " + %rule_number);./


    $NullAction
    /.%Header%case %rule_number:    
                        this.setResult(null);    
                        break;./


    $BeginActions
    /.    
            public  ruleAction(ruleNumber : number ) : void    
            {    
                switch (ruleNumber)    
                {    
                    //#line %next_line "%input_file%"./


    $SplitActions
    /.    
    	            default:    
    	                this.ruleAction%rule_number(ruleNumber);    
    	                break;    
    	        }    
    	        return;    
    	    }    
    	    
    	    public  ruleAction%rule_number(ruleNumber : number ) : void    
    	    {    
    	        switch (ruleNumber)    
    	        {./


    $EndActions
    /.    
                    default:    
                        break;    
                }    
                return;    
            }./


    $entry_declarations
    /.    
               
            public  resetParse%entry_name() : void    
            {    
                this.dtParser.resetParserEntry(%sym_type.%entry_marker);    
            }    
                
            public  parse%entry_name(monitor? : Monitor | null, error_repair_count: number = 0) : %ast_class | null    
            {    
                if(monitor)    
                    this.dtParser.setMonitor(monitor);    
                    
                try    
                {    
                    return <%ast_class> this.dtParser.parseEntry(%sym_type.%entry_marker);    
                }    
                catch (ex)    
                {    
                    if( ex instanceof BadParseException ){    
                      let e = <BadParseException>(ex);    
                      this.prsStream.reset(e.error_token); // point to error token    
        
                      let diagnoseParser = new DiagnoseParser(this.prsStream, %action_type.prsTable);    
                      diagnoseParser.diagnoseEntry(%sym_type.%entry_marker, e.error_token);    
                    }    
                    else{    
                        throw ex;    
                    }    
                }    
        
                return null;    
            }    
        ./


    $additional_interfaces
    /../


    $ast_class
    /.%ast_type./


    $super_class
    /.Object./


    $unimplemented_symbols_warning
    /.false./


    $setSym1
    /. // macro setSym1 is deprecated. Use function setResult    
                    this.getParser().setSym1./


    $setResult
    /. // macro setResult is deprecated. Use function setResult    
                     this.dtParsergetParser().setSym1./


    $getSym
    /. // macro getSym is deprecated. Use function getRhsSym    
                  this.dtParsergetParser().getSym./


    $getToken
    /. // macro getToken is deprecated. Use function getRhsTokenIndex    
                    this.dtParsergetParser().getToken./


    $getIToken
    /. // macro getIToken is deprecated. Use function getRhsIToken    
                     this.prsStream.getIToken./


    $getLeftSpan
    /. // macro getLeftSpan is deprecated. Use function getLeftSpan    
                       this.dtParsergetParser().getFirstToken./


    $getRightSpan
    /. // macro getRightSpan is deprecated. Use function getRightSpan    
                       this.dtParsergetParser().getLastToken./


Aliases:

    ,opt ::= Commaopt
    ...opt ::= Ellipsisopt
    '--' ::= MINUS_MINUS
    '|' ::= OR
    - ::= MINUS
    -= ::= MINUS_EQUAL
    ! ::= NOT
    != ::= NOT_EQUAL
    '%' ::= REMAINDER
    '%=' ::= REMAINDER_EQUAL
    & ::= AND
    && ::= AND_AND
    &= ::= AND_EQUAL
    ( ::= LPAREN
    ) ::= RPAREN
    * ::= MULTIPLY
    *= ::= MULTIPLY_EQUAL
    , ::= COMMA
    . ::= DOT
    / ::= DIVIDE
    /= ::= DIVIDE_EQUAL
    : ::= COLON
    ; ::= SEMICOLON
    ? ::= QUESTION
    @ ::= AT
    [ ::= LBRACKET
    ] ::= RBRACKET
    ^ ::= XOR
    ^= ::= XOR_EQUAL
    { ::= LBRACE
    || ::= OR_OR
    |= ::= OR_EQUAL
    } ::= RBRACE
    ~ ::= TWIDDLE
    + ::= PLUS
    ++ ::= PLUS_PLUS
    += ::= PLUS_EQUAL
    < ::= LESS
    << ::= LEFT_SHIFT
    <<= ::= LEFT_SHIFT_EQUAL
    <= ::= LESS_EQUAL
    = ::= EQUAL
    == ::= EQUAL_EQUAL
    > ::= GREATER
    >= ::= GREATER_EQUAL
    >> ::= RIGHT_SHIFT
    >>= ::= RIGHT_SHIFT_EQUAL
    >>> ::= UNSIGNED_RIGHT_SHIFT
    >>>= ::= UNSIGNED_RIGHT_SHIFT_EQUAL
    ... ::= ELLIPSIS
    '%BeginAction' ::= BeginAction
    '%EndAction' ::= EndAction
    '$BeginJava' ::= BeginJava
    '$EndJava' ::= EndJava
    '$NoAction' ::= NoAction
    '$NullAction' ::= NullAction
    '$BadAction' ::= BadAction


Start:

    CompilationUnit    ClassBodyDeclarationsopt    LPGUserAction

Identifier:

    IDENTIFIER

Eof:

    EOF_TOKEN

Error:

    ERROR_TOKEN

Terminals:

    ClassBodyDeclarationsoptMarker
    LPGUserActionMarker
    IntegerLiteral
    LongLiteral
    FloatingPointLiteral
    DoubleLiteral
    CharacterLiteral
    StringLiteral
    MINUS_MINUS
    OR
    MINUS
    MINUS_EQUAL
    NOT
    NOT_EQUAL
    REMAINDER
    REMAINDER_EQUAL
    AND
    AND_AND
    AND_EQUAL
    LPAREN
    RPAREN
    MULTIPLY
    MULTIPLY_EQUAL
    COMMA
    DOT
    DIVIDE
    DIVIDE_EQUAL
    COLON
    SEMICOLON
    QUESTION
    AT
    LBRACKET
    RBRACKET
    XOR
    XOR_EQUAL
    LBRACE
    OR_OR
    OR_EQUAL
    RBRACE
    TWIDDLE
    PLUS
    PLUS_PLUS
    PLUS_EQUAL
    LESS
    LEFT_SHIFT
    LEFT_SHIFT_EQUAL
    LESS_EQUAL
    EQUAL
    EQUAL_EQUAL
    GREATER
    GREATER_EQUAL
    RIGHT_SHIFT
    RIGHT_SHIFT_EQUAL
    UNSIGNED_RIGHT_SHIFT
    UNSIGNED_RIGHT_SHIFT_EQUAL
    ELLIPSIS
    BeginAction
    EndAction
    BeginJava
    EndJava
    NoAction
    NullAction
    BadAction
    const
    goto
    EOF_TOKEN
    IDENTIFIER
    ERROR_TOKEN


Soft Keywords:

    abstract
    assert
    boolean
    break
    byte
    case
    catch
    char
    class
    continue
    default
    do
    double
    enum
    else
    extends
    false
    final
    finally
    float
    for
    if
    implements
    import
    instanceof
    int
    interface
    long
    native
    new
    null
    package
    private
    protected
    public
    return
    short
    static
    strictfp
    super
    switch
    synchronized
    this
    throw
    throws
    transient
    true
    try
    void
    volatile
    while


Rules:

0      '%accept' ::= CompilationUnit
1      CompilationUnit ::= ClassBodyDeclarationsoptMarker ClassBodyDeclarationsopt
2                        | LPGUserActionMarker LPGUserAction

3      identifier ::= IDENTIFIER
4      LPGUserAction ::= BlockStatementsopt
5                      | '%BeginAction' BlockStatementsopt '%EndAction'
6                      | '$BeginJava' BlockStatementsopt '$EndJava'
7                      | '$NoAction'
8                      | '$NullAction'
9                      | '$BadAction'
10     Type ::= PrimitiveType
11            | ReferenceType
12     PrimitiveType ::= NumericType
13                     | boolean
14     NumericType ::= IntegralType
15                   | FloatingPointType
16     IntegralType ::= byte
17                    | short
18                    | int
19                    | long
20                    | char
21     FloatingPointType ::= float
22                         | double
23     ReferenceType ::= ClassOrInterfaceType
24                     | TypeVariable
25                     | ArrayType
26     ClassOrInterfaceType ::= ClassType
27     ClassType ::= TypeName TypeArgumentsopt
28     InterfaceType ::= TypeName TypeArgumentsopt
29     TypeName ::= identifier
30                | TypeName . identifier
31     ClassName ::= TypeName
32     TypeVariable ::= identifier
33     ArrayType ::= Type [ ]
34     TypeParameter ::= TypeVariable TypeBoundopt
35     TypeBound ::= extends ClassOrInterfaceType AdditionalBoundListopt
36     AdditionalBoundList ::= AdditionalBound
37                           | AdditionalBoundList AdditionalBound
38     AdditionalBound ::= & InterfaceType
39     TypeArguments ::= < ActualTypeArgumentList >
40     ActualTypeArgumentList ::= ActualTypeArgument
41                              | ActualTypeArgumentList , ActualTypeArgument
42     ActualTypeArgument ::= ReferenceType
43                          | Wildcard
44     Wildcard ::= ? WildcardBoundsOpt
45     WildcardBounds ::= extends ReferenceType
46                      | super ReferenceType
47     PackageName ::= identifier
48                   | PackageName . identifier
49     ExpressionName ::= identifier
50                      | AmbiguousName . identifier
51     MethodName ::= identifier
52                  | AmbiguousName . identifier
53     PackageOrTypeName ::= identifier
54                         | PackageOrTypeName . identifier
55     AmbiguousName ::= identifier
56                     | AmbiguousName . identifier
57     CompilationUnit ::= PackageDeclarationopt ImportDeclarationsopt TypeDeclarationsopt
58     ImportDeclarations ::= ImportDeclaration
59                          | ImportDeclarations ImportDeclaration
60     TypeDeclarations ::= TypeDeclaration
61                        | TypeDeclarations TypeDeclaration
62     PackageDeclaration ::= Annotationsopt package PackageName ;
63     ImportDeclaration ::= SingleTypeImportDeclaration
64                         | TypeImportOnDemandDeclaration
65                         | SingleStaticImportDeclaration
66                         | StaticImportOnDemandDeclaration
67     SingleTypeImportDeclaration ::= import TypeName ;
68     TypeImportOnDemandDeclaration ::= import PackageOrTypeName . * ;
69     SingleStaticImportDeclaration ::= import static TypeName . identifier ;
70     StaticImportOnDemandDeclaration ::= import static TypeName . * ;
71     TypeDeclaration ::= ClassDeclaration
72                       | InterfaceDeclaration
73                       | ;
74     ClassDeclaration ::= NormalClassDeclaration
75                        | EnumDeclaration
76     NormalClassDeclaration ::= ClassModifiersopt class identifier TypeParametersopt Superopt Interfacesopt ClassBody
77     ClassModifiers ::= ClassModifier
78                      | ClassModifiers ClassModifier
79     ClassModifier ::= Annotation
80                     | public
81                     | protected
82                     | private
83                     | abstract
84                     | static
85                     | final
86                     | strictfp
87     TypeParameters ::= < TypeParameterList >
88     TypeParameterList ::= TypeParameter
89                         | TypeParameterList , TypeParameter
90     Super ::= extends ClassType
91     Interfaces ::= implements InterfaceTypeList
92     InterfaceTypeList ::= InterfaceType
93                         | InterfaceTypeList , InterfaceType
94     ClassBody ::= { ClassBodyDeclarationsopt }
95     ClassBodyDeclarations ::= ClassBodyDeclaration
96                             | ClassBodyDeclarations ClassBodyDeclaration
97     ClassBodyDeclaration ::= ClassMemberDeclaration
98                            | InstanceInitializer
99                            | StaticInitializer
100                           | ConstructorDeclaration
101    ClassMemberDeclaration ::= FieldDeclaration
102                             | MethodDeclaration
103                             | ClassDeclaration
104                             | InterfaceDeclaration
105                             | ;
106    FieldDeclaration ::= FieldModifiersopt Type VariableDeclarators ;
107    VariableDeclarators ::= VariableDeclarator
108                          | VariableDeclarators , VariableDeclarator
109    VariableDeclarator ::= VariableDeclaratorId
110                         | VariableDeclaratorId = VariableInitializer
111    VariableDeclaratorId ::= identifier
112                           | VariableDeclaratorId [ ]
113    VariableInitializer ::= Expression
114                          | ArrayInitializer
115    FieldModifiers ::= FieldModifier
116                     | FieldModifiers FieldModifier
117    FieldModifier ::= Annotation
118                    | public
119                    | protected
120                    | private
121                    | static
122                    | final
123                    | transient
124                    | volatile
125    MethodDeclaration ::= MethodHeader MethodBody
126    MethodHeader ::= MethodModifiersopt TypeParametersopt ResultType MethodDeclarator Throwsopt
127    ResultType ::= Type
128                 | void
129    MethodDeclarator ::= identifier ( FormalParameterListopt )
130    MethodDeclarator ::= MethodDeclarator [ ]
131    FormalParameterList ::= LastFormalParameter
132                          | FormalParameters , LastFormalParameter
133    FormalParameters ::= FormalParameter
134                       | FormalParameters , FormalParameter
135    FormalParameter ::= VariableModifiersopt Type VariableDeclaratorId
136    VariableModifiers ::= VariableModifier
137                        | VariableModifiers VariableModifier
138    VariableModifier ::= final
139                       | Annotations
140    LastFormalParameter ::= VariableModifiersopt Type ...opt VariableDeclaratorId
141    MethodModifiers ::= MethodModifier
142                      | MethodModifiers MethodModifier
143    MethodModifier ::= Annotations
144                     | public
145                     | protected
146                     | private
147                     | abstract
148                     | static
149                     | final
150                     | synchronized
151                     | native
152                     | strictfp
153    Throws ::= throws ExceptionTypeList
154    ExceptionTypeList ::= ExceptionType
155                        | ExceptionTypeList , ExceptionType
156    ExceptionType ::= ClassType
157                    | TypeVariable
158    MethodBody ::= Block
159                 | ;
160    InstanceInitializer ::= Block
161    StaticInitializer ::= static Block
162    ConstructorDeclaration ::= ConstructorModifiersopt ConstructorDeclarator Throwsopt ConstructorBody
163    ConstructorDeclarator ::= TypeParametersopt SimpleTypeName ( FormalParameterListopt )
164    SimpleTypeName ::= identifier
165    ConstructorModifiers ::= ConstructorModifier
166                           | ConstructorModifiers ConstructorModifier
167    ConstructorModifier ::= Annotations
168                          | public
169                          | protected
170                          | private
171    ConstructorBody ::= { ExplicitConstructorInvocationopt BlockStatementsopt }
172    ExplicitConstructorInvocation ::= TypeArgumentsopt this ( ArgumentListopt ) ;
173                                    | TypeArgumentsopt super ( ArgumentListopt ) ;
174                                    | Primary . TypeArgumentsopt super ( ArgumentListopt ) ;
175    EnumDeclaration ::= ClassModifiersopt enum identifier Interfacesopt EnumBody
176    EnumBody ::= { EnumConstantsopt ,opt EnumBodyDeclarationsopt }
177    EnumConstants ::= EnumConstant
178                    | EnumConstants , EnumConstant
179    EnumConstant ::= Annotationsopt identifier Argumentsopt ClassBodyopt
180    Arguments ::= ( ArgumentListopt )
181    EnumBodyDeclarations ::= ; ClassBodyDeclarationsopt
182    InterfaceDeclaration ::= NormalInterfaceDeclaration
183                           | AnnotationTypeDeclaration
184    NormalInterfaceDeclaration ::= InterfaceModifiersopt interface identifier TypeParametersopt ExtendsInterfacesopt InterfaceBody
185    InterfaceModifiers ::= InterfaceModifier
186                         | InterfaceModifiers InterfaceModifier
187    InterfaceModifier ::= Annotation
188                        | public
189                        | protected
190                        | private
191                        | abstract
192                        | static
193                        | strictfp
194    ExtendsInterfaces ::= extends InterfaceType
195                        | ExtendsInterfaces , InterfaceType
196    InterfaceBody ::= { InterfaceMemberDeclarationsopt }
197    InterfaceMemberDeclarations ::= InterfaceMemberDeclaration
198                                  | InterfaceMemberDeclarations InterfaceMemberDeclaration
199    InterfaceMemberDeclaration ::= ConstantDeclaration
200                                 | AbstractMethodDeclaration
201                                 | ClassDeclaration
202                                 | InterfaceDeclaration
203                                 | ;
204    ConstantDeclaration ::= ConstantModifiersopt Type VariableDeclarators
205    ConstantModifiers ::= ConstantModifier
206                        | ConstantModifiers ConstantModifier
207    ConstantModifier ::= Annotation
208                       | public
209                       | static
210                       | final
211    AbstractMethodDeclaration ::= AbstractMethodModifiersopt TypeParametersopt ResultType MethodDeclarator Throwsopt ;
212    AbstractMethodModifiers ::= AbstractMethodModifier
213                              | AbstractMethodModifiers AbstractMethodModifier
214    AbstractMethodModifier ::= Annotations
215                             | public
216                             | abstract
217    AnnotationTypeDeclaration ::= InterfaceModifiersopt @ interface identifier AnnotationTypeBody
218    AnnotationTypeBody ::= { AnnotationTypeElementDeclarationsopt }
219    AnnotationTypeElementDeclarations ::= AnnotationTypeElementDeclaration
220                                        | AnnotationTypeElementDeclarations AnnotationTypeElementDeclaration
221    AnnotationTypeElementDeclaration ::= AbstractMethodModifiersopt Type identifier ( ) DefaultValueopt ;
222                                       | ConstantDeclaration
223                                       | ClassDeclaration
224                                       | InterfaceDeclaration
225                                       | EnumDeclaration
226                                       | AnnotationTypeDeclaration
227                                       | ;
228    DefaultValue ::= default ElementValue
229    Annotations ::= Annotation
230                  | Annotations Annotation
231    Annotation ::= NormalAnnotation
232                 | MarkerAnnotation
233                 | SingleElementAnnotation
234    NormalAnnotation ::= @ TypeName ( ElementValuePairsopt )
235    ElementValuePairs ::= ElementValuePair
236                        | ElementValuePairs , ElementValuePair
237    ElementValuePair ::= SimpleName = ElementValue
238    SimpleName ::= identifier
239    ElementValue ::= ConditionalExpression
240                   | Annotation
241                   | ElementValueArrayInitializer
242    ElementValueArrayInitializer ::= { ElementValuesopt ,opt }
243    ElementValues ::= ElementValue
244                    | ElementValues , ElementValue
245    MarkerAnnotation ::= @ TypeName
246    SingleElementAnnotation ::= @ TypeName ( ElementValue )
247    ArrayInitializer ::= { VariableInitializersopt ,opt }
248    VariableInitializers ::= VariableInitializer
249                           | VariableInitializers , VariableInitializer
250    Block ::= { BlockStatementsopt }
251    BlockStatements ::= BlockStatement
252                      | BlockStatements BlockStatement
253    BlockStatement ::= LocalVariableDeclarationStatement
254                     | ClassDeclaration
255                     | Statement
256    LocalVariableDeclarationStatement ::= LocalVariableDeclaration ;
257    LocalVariableDeclaration ::= VariableModifiersopt Type VariableDeclarators
258    Statement ::= StatementWithoutTrailingSubstatement
259                | LabeledStatement
260                | IfThenStatement
261                | IfThenElseStatement
262                | WhileStatement
263                | ForStatement
264    StatementWithoutTrailingSubstatement ::= Block
265                                           | EmptyStatement
266                                           | ExpressionStatement
267                                           | AssertStatement
268                                           | SwitchStatement
269                                           | DoStatement
270                                           | BreakStatement
271                                           | ContinueStatement
272                                           | ReturnStatement
273                                           | SynchronizedStatement
274                                           | ThrowStatement
275                                           | TryStatement
276    StatementNoShortIf ::= StatementWithoutTrailingSubstatement
277                         | LabeledStatementNoShortIf
278                         | IfThenElseStatementNoShortIf
279                         | WhileStatementNoShortIf
280                         | ForStatementNoShortIf
281    IfThenStatement ::= if ( Expression ) Statement
282    IfThenElseStatement ::= if ( Expression ) StatementNoShortIf else Statement
283    IfThenElseStatementNoShortIf ::= if ( Expression ) StatementNoShortIf else StatementNoShortIf
284    EmptyStatement ::= ;
285    LabeledStatement ::= identifier : Statement
286    LabeledStatementNoShortIf ::= identifier : StatementNoShortIf
287    ExpressionStatement ::= StatementExpression ;
288    StatementExpression ::= Assignment
289                          | PreIncrementExpression
290                          | PreDecrementExpression
291                          | PostIncrementExpression
292                          | PostDecrementExpression
293                          | MethodInvocation
294                          | ClassInstanceCreationExpression
295    AssertStatement ::= assert Expression ;
296                      | assert Expression : Expression ;
297    SwitchStatement ::= switch ( Expression ) SwitchBlock
298    SwitchBlock ::= { SwitchBlockStatementGroupsopt SwitchLabelsopt }
299    SwitchBlockStatementGroups ::= SwitchBlockStatementGroup
300                                 | SwitchBlockStatementGroups SwitchBlockStatementGroup
301    SwitchBlockStatementGroup ::= SwitchLabels BlockStatements
302    SwitchLabels ::= SwitchLabel
303                   | SwitchLabels SwitchLabel
304    SwitchLabel ::= case ConstantExpression :
305                  | case EnumConstant :
306                  | default :
307    EnumConstant ::= identifier
308    WhileStatement ::= while ( Expression ) Statement
309    WhileStatementNoShortIf ::= while ( Expression ) StatementNoShortIf
310    DoStatement ::= do Statement while ( Expression ) ;
311    ForStatement ::= BasicForStatement
312                   | EnhancedForStatement
313    BasicForStatement ::= for ( ForInitopt ; Expressionopt ; ForUpdateopt ) Statement
314    ForStatementNoShortIf ::= for ( ForInitopt ; Expressionopt ; ForUpdateopt ) StatementNoShortIf
315    ForInit ::= StatementExpressionList
316              | LocalVariableDeclaration
317    ForUpdate ::= StatementExpressionList
318    StatementExpressionList ::= StatementExpression
319                              | StatementExpressionList , StatementExpression
320    EnhancedForStatement ::= for ( FormalParameter : Expression ) Statement
321    BreakStatement ::= break identifieropt ;
322    ContinueStatement ::= continue identifieropt ;
323    ReturnStatement ::= return Expressionopt ;
324    ThrowStatement ::= throw Expression ;
325    SynchronizedStatement ::= synchronized ( Expression ) Block
326    TryStatement ::= try Block Catches
327                   | try Block Catchesopt Finally
328    Catches ::= CatchClause
329              | Catches CatchClause
330    CatchClause ::= catch ( FormalParameter ) Block
331    Finally ::= finally Block
332    Primary ::= PrimaryNoNewArray
333              | ArrayCreationExpression
334    PrimaryNoNewArray ::= Literal
335                        | Type . class
336                        | void . class
337                        | this
338                        | ClassName . this
339                        | ( Expression )
340                        | ClassInstanceCreationExpression
341                        | FieldAccess
342                        | MethodInvocation
343                        | ArrayAccess
344    Literal ::= IntegerLiteral
345              | LongLiteral
346              | FloatingPointLiteral
347              | DoubleLiteral
348              | BooleanLiteral
349              | CharacterLiteral
350              | StringLiteral
351              | null
352    BooleanLiteral ::= true
353                     | false
354    ClassInstanceCreationExpression ::= new TypeArgumentsopt ClassOrInterfaceType TypeArgumentsopt ( ArgumentListopt ) ClassBodyopt
355                                      | Primary . new TypeArgumentsopt identifier TypeArgumentsopt ( ArgumentListopt ) ClassBodyopt
356    ArgumentList ::= Expression
357                   | ArgumentList , Expression
358    ArrayCreationExpression ::= new PrimitiveType DimExprs Dimsopt
359                              | new ClassOrInterfaceType DimExprs Dimsopt
360                              | new PrimitiveType Dims ArrayInitializer
361                              | new ClassOrInterfaceType Dims ArrayInitializer
362    DimExprs ::= DimExpr
363               | DimExprs DimExpr
364    DimExpr ::= [ Expression ]
365    Dims ::= [ ]
366           | Dims [ ]
367    FieldAccess ::= Primary . identifier
368                  | super . identifier
369                  | ClassName . super . identifier
370    MethodInvocation ::= MethodName ( ArgumentListopt )
371                       | Primary . TypeArgumentsopt identifier ( ArgumentListopt )
372                       | super . TypeArgumentsopt identifier ( ArgumentListopt )
373                       | ClassName . super . TypeArgumentsopt identifier ( ArgumentListopt )
374                       | TypeName . TypeArguments identifier ( ArgumentListopt )
375    ArrayAccess ::= ExpressionName [ Expression ]
376                  | PrimaryNoNewArray [ Expression ]
377    PostfixExpression ::= Primary
378                        | ExpressionName
379                        | PostIncrementExpression
380                        | PostDecrementExpression
381    PostIncrementExpression ::= PostfixExpression ++
382    PostDecrementExpression ::= PostfixExpression '--'
383    UnaryExpression ::= PreIncrementExpression
384                      | PreDecrementExpression
385                      | + UnaryExpression
386                      | - UnaryExpression
387                      | UnaryExpressionNotPlusMinus
388    PreIncrementExpression ::= ++ UnaryExpression
389    PreDecrementExpression ::= '--' UnaryExpression
390    UnaryExpressionNotPlusMinus ::= PostfixExpression
391                                  | ~ UnaryExpression
392                                  | ! UnaryExpression
393                                  | CastExpression
394    CastExpression ::= ( PrimitiveType Dimsopt ) UnaryExpression
395                     | ( ReferenceType ) UnaryExpressionNotPlusMinus
396    MultiplicativeExpression ::= UnaryExpression
397                               | MultiplicativeExpression * UnaryExpression
398                               | MultiplicativeExpression / UnaryExpression
399                               | MultiplicativeExpression '%' UnaryExpression
400    AdditiveExpression ::= MultiplicativeExpression
401                         | AdditiveExpression + MultiplicativeExpression
402                         | AdditiveExpression - MultiplicativeExpression
403    ShiftExpression ::= AdditiveExpression
404                      | ShiftExpression << AdditiveExpression
405                      | ShiftExpression > > AdditiveExpression
406                      | ShiftExpression > > > AdditiveExpression
407    RelationalExpression ::= ShiftExpression
408                           | RelationalExpression < ShiftExpression
409                           | RelationalExpression > ShiftExpression
410                           | RelationalExpression <= ShiftExpression
411                           | RelationalExpression > = ShiftExpression
412                           | RelationalExpression instanceof ReferenceType
413    EqualityExpression ::= RelationalExpression
414                         | EqualityExpression == RelationalExpression
415                         | EqualityExpression != RelationalExpression
416    AndExpression ::= EqualityExpression
417                    | AndExpression & EqualityExpression
418    ExclusiveOrExpression ::= AndExpression
419                            | ExclusiveOrExpression ^ AndExpression
420    InclusiveOrExpression ::= ExclusiveOrExpression
421                            | InclusiveOrExpression '|' ExclusiveOrExpression
422    ConditionalAndExpression ::= InclusiveOrExpression
423                               | ConditionalAndExpression && InclusiveOrExpression
424    ConditionalOrExpression ::= ConditionalAndExpression
425                              | ConditionalOrExpression || ConditionalAndExpression
426    ConditionalExpression ::= ConditionalOrExpression
427                            | ConditionalOrExpression ? Expression : ConditionalExpression
428    AssignmentExpression ::= ConditionalExpression
429                           | Assignment
430    Assignment ::= LeftHandSide AssignmentOperator AssignmentExpression
431    LeftHandSide ::= ExpressionName
432                   | FieldAccess
433                   | ArrayAccess
434    AssignmentOperator ::= =
435                         | *=
436                         | /=
437                         | '%='
438                         | +=
439                         | -=
440                         | <<=
441                         | > > =
442                         | > > > =
443                         | &=
444                         | ^=
445                         | |=
446    Expression ::= AssignmentExpression
447    ConstantExpression ::= Expression
448    Dimsopt ::= %Empty
449              | Dims
450    Catchesopt ::= %Empty
451                 | Catches
452    identifieropt ::= %Empty
453                    | identifier
454    ForUpdateopt ::= %Empty
455                   | ForUpdate
456    Expressionopt ::= %Empty
457                    | Expression
458    ForInitopt ::= %Empty
459                 | ForInit
460    SwitchLabelsopt ::= %Empty
461                      | SwitchLabels
462    SwitchBlockStatementGroupsopt ::= %Empty
463                                    | SwitchBlockStatementGroups
464    VariableModifiersopt ::= %Empty
465                           | VariableModifiers
466    VariableInitializersopt ::= %Empty
467                              | VariableInitializers
468    ElementValuesopt ::= %Empty
469                       | ElementValues
470    ElementValuePairsopt ::= %Empty
471                           | ElementValuePairs
472    DefaultValueopt ::= %Empty
473                      | DefaultValue
474    AnnotationTypeElementDeclarationsopt ::= %Empty
475                                           | AnnotationTypeElementDeclarations
476    AbstractMethodModifiersopt ::= %Empty
477                                 | AbstractMethodModifiers
478    ConstantModifiersopt ::= %Empty
479                           | ConstantModifiers
480    InterfaceMemberDeclarationsopt ::= %Empty
481                                     | InterfaceMemberDeclarations
482    ExtendsInterfacesopt ::= %Empty
483                           | ExtendsInterfaces
484    InterfaceModifiersopt ::= %Empty
485                            | InterfaceModifiers
486    ClassBodyopt ::= %Empty
487                   | ClassBody
488    Argumentsopt ::= %Empty
489                   | Arguments
490    EnumBodyDeclarationsopt ::= %Empty
491                              | EnumBodyDeclarations
492    ,opt ::= %Empty
493           | ,
494    EnumConstantsopt ::= %Empty
495                       | EnumConstants
496    ArgumentListopt ::= %Empty
497                      | ArgumentList
498    BlockStatementsopt ::= %Empty
499                         | BlockStatements
500    ExplicitConstructorInvocationopt ::= %Empty
501                                       | ExplicitConstructorInvocation
502    ConstructorModifiersopt ::= %Empty
503                              | ConstructorModifiers
504    ...opt ::= %Empty
505             | ...
506    FormalParameterListopt ::= %Empty
507                             | FormalParameterList
508    Throwsopt ::= %Empty
509                | Throws
510    MethodModifiersopt ::= %Empty
511                         | MethodModifiers
512    FieldModifiersopt ::= %Empty
513                        | FieldModifiers
514    ClassBodyDeclarationsopt ::= %Empty
515                               | ClassBodyDeclarations
516    Interfacesopt ::= %Empty
517                    | Interfaces
518    Superopt ::= %Empty
519               | Super
520    TypeParametersopt ::= %Empty
521                        | TypeParameters
522    ClassModifiersopt ::= %Empty
523                        | ClassModifiers
524    Annotationsopt ::= %Empty
525                     | Annotations
526    TypeDeclarationsopt ::= %Empty
527                          | TypeDeclarations
528    ImportDeclarationsopt ::= %Empty
529                            | ImportDeclarations
530    PackageDeclarationopt ::= %Empty
531                            | PackageDeclaration
532    WildcardBoundsOpt ::= %Empty
533                        | WildcardBounds
534    AdditionalBoundListopt ::= %Empty
535                             | AdditionalBoundList
536    TypeBoundopt ::= %Empty
537                   | TypeBound
538    TypeArgumentsopt ::= %Empty
539                       | TypeArguments
e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:146:5:146:17:3671:3683: Informative: The terminal GREATER_EQUAL is useless.
e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:147:5:147:15:3709:3719: Informative: The terminal RIGHT_SHIFT is useless.
e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:148:5:148:21:3747:3763: Informative: The terminal RIGHT_SHIFT_EQUAL is useless.
e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:149:5:149:24:3787:3806: Informative: The terminal UNSIGNED_RIGHT_SHIFT is useless.
e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:150:5:150:30:3826:3851: Informative: The terminal UNSIGNED_RIGHT_SHIFT_EQUAL is useless.
e:/LPG2-grammars-example/java-ts-version/GJavaKWLexer.gi:22:5:22:9:267:271: Informative: The terminal const is useless.
e:/LPG2-grammars-example/java-ts-version/GJavaKWLexer.gi:35:5:35:8:400:403: Informative: The terminal goto is useless.


 The LALR Parser Generator              2.1.01 (Aug 13 2021)



Cross-reference table:


AND  ==>> 38 417 

AND_AND  ==>> 423 

AND_EQUAL  ==>> 443 

AT  ==>> 217 234 245 246 

AbstractMethodDeclaration  ==>> 211 

AbstractMethodModifier  ==>> 214 215 216 

AbstractMethodModifiers  ==>> 212 213 

AbstractMethodModifiersopt  ==>> 476 477 

ActualTypeArgument  ==>> 42 43 

ActualTypeArgumentList  ==>> 40 41 

AdditionalBound  ==>> 38 

AdditionalBoundList  ==>> 36 37 

AdditionalBoundListopt  ==>> 534 535 

AdditiveExpression  ==>> 400 401 402 

AmbiguousName  ==>> 55 56 

AndExpression  ==>> 416 417 

Annotation  ==>> 231 232 233 

AnnotationTypeBody  ==>> 218 

AnnotationTypeDeclaration  ==>> 217 

AnnotationTypeElementDeclaration  ==>> 221 222 223 224 225 226 227 

AnnotationTypeElementDeclarations  ==>> 219 220 

AnnotationTypeElementDeclarationsopt  ==>> 474 475 

Annotations  ==>> 229 230 

Annotationsopt  ==>> 524 525 

ArgumentList  ==>> 356 357 

ArgumentListopt  ==>> 496 497 

Arguments  ==>> 180 

Argumentsopt  ==>> 488 489 

ArrayAccess  ==>> 375 376 

ArrayCreationExpression  ==>> 358 359 360 361 

ArrayInitializer  ==>> 247 

ArrayType  ==>> 33 

AssertStatement  ==>> 295 296 

Assignment  ==>> 430 

AssignmentExpression  ==>> 428 429 

AssignmentOperator  ==>> 434 435 436 437 438 439 440 441 442 443 444 445 

BadAction  ==>> 9 

BasicForStatement  ==>> 313 

BeginAction  ==>> 5 

BeginJava  ==>> 6 

Block  ==>> 250 

BlockStatement  ==>> 253 254 255 

BlockStatements  ==>> 251 252 

BlockStatementsopt  ==>> 498 499 

BooleanLiteral  ==>> 352 353 

BreakStatement  ==>> 321 

COLON  ==>> 285 286 296 304 305 306 320 427 

COMMA  ==>> 41 89 93 108 132 134 155 178 195 236 244 249 319 357 493 

CastExpression  ==>> 394 395 

CatchClause  ==>> 330 

Catches  ==>> 328 329 

Catchesopt  ==>> 450 451 

CharacterLiteral  ==>> 349 

ClassBody  ==>> 94 

ClassBodyDeclaration  ==>> 97 98 99 100 

ClassBodyDeclarations  ==>> 95 96 

ClassBodyDeclarationsopt  ==>> 514 515 

ClassBodyDeclarationsoptMarker  ==>> 1 

ClassBodyopt  ==>> 486 487 

ClassDeclaration  ==>> 74 75 

ClassInstanceCreationExpression  ==>> 354 355 

ClassMemberDeclaration  ==>> 101 102 103 104 105 

ClassModifier  ==>> 79 80 81 82 83 84 85 86 

ClassModifiers  ==>> 77 78 

ClassModifiersopt  ==>> 522 523 

ClassName  ==>> 31 

ClassOrInterfaceType  ==>> 26 

ClassType  ==>> 27 

Commaopt  ==>> 492 493 

CompilationUnit  ==>> 1 2 57 

ConditionalAndExpression  ==>> 422 423 

ConditionalExpression  ==>> 426 427 

ConditionalOrExpression  ==>> 424 425 

ConstantDeclaration  ==>> 204 

ConstantExpression  ==>> 447 

ConstantModifier  ==>> 207 208 209 210 

ConstantModifiers  ==>> 205 206 

ConstantModifiersopt  ==>> 478 479 

ConstructorBody  ==>> 171 

ConstructorDeclaration  ==>> 162 

ConstructorDeclarator  ==>> 163 

ConstructorModifier  ==>> 167 168 169 170 

ConstructorModifiers  ==>> 165 166 

ConstructorModifiersopt  ==>> 502 503 

ContinueStatement  ==>> 322 

DIVIDE  ==>> 398 

DIVIDE_EQUAL  ==>> 436 

DOT  ==>> 30 48 50 52 54 56 68 69 70 174 335 336 338 355 367 368 369 369 371 372 
          373 373 374 

DefaultValue  ==>> 228 

DefaultValueopt  ==>> 472 473 

DimExpr  ==>> 364 

DimExprs  ==>> 362 363 

Dims  ==>> 365 366 

Dimsopt  ==>> 448 449 

DoStatement  ==>> 310 

DoubleLiteral  ==>> 347 

ELLIPSIS  ==>> 505 

EQUAL  ==>> 110 237 411 434 441 442 

EQUAL_EQUAL  ==>> 414 

ERROR_TOKEN  ==>> 

ElementValue  ==>> 239 240 241 

ElementValueArrayInitializer  ==>> 242 

ElementValuePair  ==>> 237 

ElementValuePairs  ==>> 235 236 

ElementValuePairsopt  ==>> 470 471 

ElementValues  ==>> 243 244 

ElementValuesopt  ==>> 468 469 

Ellipsisopt  ==>> 504 505 

EmptyStatement  ==>> 284 

EndAction  ==>> 5 

EndJava  ==>> 6 

EnhancedForStatement  ==>> 320 

EnumBody  ==>> 176 

EnumBodyDeclarations  ==>> 181 

EnumBodyDeclarationsopt  ==>> 490 491 

EnumConstant  ==>> 179 307 

EnumConstants  ==>> 177 178 

EnumConstantsopt  ==>> 494 495 

EnumDeclaration  ==>> 175 

EqualityExpression  ==>> 413 414 415 

ExceptionType  ==>> 156 157 

ExceptionTypeList  ==>> 154 155 

ExclusiveOrExpression  ==>> 418 419 

ExplicitConstructorInvocation  ==>> 172 173 174 

ExplicitConstructorInvocationopt  ==>> 500 501 

Expression  ==>> 446 

ExpressionName  ==>> 49 50 

ExpressionStatement  ==>> 287 

Expressionopt  ==>> 456 457 

ExtendsInterfaces  ==>> 194 195 

ExtendsInterfacesopt  ==>> 482 483 

FieldAccess  ==>> 367 368 369 

FieldDeclaration  ==>> 106 

FieldModifier  ==>> 117 118 119 120 121 122 123 124 

FieldModifiers  ==>> 115 116 

FieldModifiersopt  ==>> 512 513 

Finally  ==>> 331 

FloatingPointLiteral  ==>> 346 

FloatingPointType  ==>> 21 22 

ForInit  ==>> 315 316 

ForInitopt  ==>> 458 459 

ForStatement  ==>> 311 312 

ForStatementNoShortIf  ==>> 314 

ForUpdate  ==>> 317 

ForUpdateopt  ==>> 454 455 

FormalParameter  ==>> 135 

FormalParameterList  ==>> 131 132 

FormalParameterListopt  ==>> 506 507 

FormalParameters  ==>> 133 134 

GREATER  ==>> 39 87 405 405 406 406 406 409 411 441 441 442 442 442 

GREATER_EQUAL  ==>> 

IDENTIFIER  ==>> 3 

IfThenElseStatement  ==>> 282 

IfThenElseStatementNoShortIf  ==>> 283 

IfThenStatement  ==>> 281 

ImportDeclaration  ==>> 63 64 65 66 

ImportDeclarations  ==>> 58 59 

ImportDeclarationsopt  ==>> 528 529 

InclusiveOrExpression  ==>> 420 421 

InstanceInitializer  ==>> 160 

IntegerLiteral  ==>> 344 

IntegralType  ==>> 16 17 18 19 20 

InterfaceBody  ==>> 196 

InterfaceDeclaration  ==>> 182 183 

InterfaceMemberDeclaration  ==>> 199 200 201 202 203 

InterfaceMemberDeclarations  ==>> 197 198 

InterfaceMemberDeclarationsopt  ==>> 480 481 

InterfaceModifier  ==>> 187 188 189 190 191 192 193 

InterfaceModifiers  ==>> 185 186 

InterfaceModifiersopt  ==>> 484 485 

InterfaceType  ==>> 28 

InterfaceTypeList  ==>> 92 93 

Interfaces  ==>> 91 

Interfacesopt  ==>> 516 517 

LBRACE  ==>> 94 171 176 196 218 242 247 250 298 

LBRACKET  ==>> 33 112 130 364 365 366 375 376 

LEFT_SHIFT  ==>> 404 

LEFT_SHIFT_EQUAL  ==>> 440 

LESS  ==>> 39 87 408 

LESS_EQUAL  ==>> 410 

LPAREN  ==>> 129 163 172 173 174 180 221 234 246 281 282 283 297 308 309 310 313 
             314 320 325 330 339 354 355 370 371 372 373 374 394 395 

LPGUserAction  ==>> 4 5 6 7 8 9 

LPGUserActionMarker  ==>> 2 

LabeledStatement  ==>> 285 

LabeledStatementNoShortIf  ==>> 286 

LastFormalParameter  ==>> 140 

LeftHandSide  ==>> 431 432 433 

Literal  ==>> 344 345 346 347 348 349 350 351 

LocalVariableDeclaration  ==>> 257 

LocalVariableDeclarationStatement  ==>> 256 

LongLiteral  ==>> 345 

MINUS  ==>> 386 402 

MINUS_EQUAL  ==>> 439 

MINUS_MINUS  ==>> 382 389 

MULTIPLY  ==>> 68 70 397 

MULTIPLY_EQUAL  ==>> 435 

MarkerAnnotation  ==>> 245 

MethodBody  ==>> 158 159 

MethodDeclaration  ==>> 125 

MethodDeclarator  ==>> 129 130 

MethodHeader  ==>> 126 

MethodInvocation  ==>> 370 371 372 373 374 

MethodModifier  ==>> 143 144 145 146 147 148 149 150 151 152 

MethodModifiers  ==>> 141 142 

MethodModifiersopt  ==>> 510 511 

MethodName  ==>> 51 52 

MultiplicativeExpression  ==>> 396 397 398 399 

NOT  ==>> 392 

NOT_EQUAL  ==>> 415 

NoAction  ==>> 7 

NormalAnnotation  ==>> 234 

NormalClassDeclaration  ==>> 76 

NormalInterfaceDeclaration  ==>> 184 

NullAction  ==>> 8 

NumericType  ==>> 14 15 

OR  ==>> 421 

OR_EQUAL  ==>> 445 

OR_OR  ==>> 425 

PLUS  ==>> 385 401 

PLUS_EQUAL  ==>> 438 

PLUS_PLUS  ==>> 381 388 

PackageDeclaration  ==>> 62 

PackageDeclarationopt  ==>> 530 531 

PackageName  ==>> 47 48 

PackageOrTypeName  ==>> 53 54 

PostDecrementExpression  ==>> 382 

PostIncrementExpression  ==>> 381 

PostfixExpression  ==>> 377 378 379 380 

PreDecrementExpression  ==>> 389 

PreIncrementExpression  ==>> 388 

Primary  ==>> 332 333 

PrimaryNoNewArray  ==>> 334 335 336 337 338 339 340 341 342 343 

PrimitiveType  ==>> 12 13 

QUESTION  ==>> 44 427 

RBRACE  ==>> 94 171 176 196 218 242 247 250 298 

RBRACKET  ==>> 33 112 130 364 365 366 375 376 

REMAINDER  ==>> 399 

REMAINDER_EQUAL  ==>> 437 

RIGHT_SHIFT  ==>> 

RIGHT_SHIFT_EQUAL  ==>> 

RPAREN  ==>> 129 163 172 173 174 180 221 234 246 281 282 283 297 308 309 310 313 
             314 320 325 330 339 354 355 370 371 372 373 374 394 395 

ReferenceType  ==>> 23 24 25 

RelationalExpression  ==>> 407 408 409 410 411 412 

ResultType  ==>> 127 128 

ReturnStatement  ==>> 323 

SEMICOLON  ==>> 62 67 68 69 70 73 105 106 159 172 173 174 181 203 211 221 227 
                256 284 287 295 296 310 313 313 314 314 321 322 323 324 

ShiftExpression  ==>> 403 404 405 406 

SimpleName  ==>> 238 

SimpleTypeName  ==>> 164 

SingleElementAnnotation  ==>> 246 

SingleStaticImportDeclaration  ==>> 69 

SingleTypeImportDeclaration  ==>> 67 

Statement  ==>> 258 259 260 261 262 263 

StatementExpression  ==>> 288 289 290 291 292 293 294 

StatementExpressionList  ==>> 318 319 

StatementNoShortIf  ==>> 276 277 278 279 280 

StatementWithoutTrailingSubstatement  ==>> 264 265 266 267 268 269 270 271 272 
                                           273 274 275 

StaticImportOnDemandDeclaration  ==>> 70 

StaticInitializer  ==>> 161 

StringLiteral  ==>> 350 

Super  ==>> 90 

Superopt  ==>> 518 519 

SwitchBlock  ==>> 298 

SwitchBlockStatementGroup  ==>> 301 

SwitchBlockStatementGroups  ==>> 299 300 

SwitchBlockStatementGroupsopt  ==>> 462 463 

SwitchLabel  ==>> 304 305 306 

SwitchLabels  ==>> 302 303 

SwitchLabelsopt  ==>> 460 461 

SwitchStatement  ==>> 297 

SynchronizedStatement  ==>> 325 

TWIDDLE  ==>> 391 

ThrowStatement  ==>> 324 

Throws  ==>> 153 

Throwsopt  ==>> 508 509 

TryStatement  ==>> 326 327 

Type  ==>> 10 11 

TypeArguments  ==>> 39 

TypeArgumentsopt  ==>> 538 539 

TypeBound  ==>> 35 

TypeBoundopt  ==>> 536 537 

TypeDeclaration  ==>> 71 72 73 

TypeDeclarations  ==>> 60 61 

TypeDeclarationsopt  ==>> 526 527 

TypeImportOnDemandDeclaration  ==>> 68 

TypeName  ==>> 29 30 

TypeParameter  ==>> 34 

TypeParameterList  ==>> 88 89 

TypeParameters  ==>> 87 

TypeParametersopt  ==>> 520 521 

TypeVariable  ==>> 32 

UNSIGNED_RIGHT_SHIFT  ==>> 

UNSIGNED_RIGHT_SHIFT_EQUAL  ==>> 

UnaryExpression  ==>> 383 384 385 386 387 

UnaryExpressionNotPlusMinus  ==>> 390 391 392 393 

VariableDeclarator  ==>> 109 110 

VariableDeclaratorId  ==>> 111 112 

VariableDeclarators  ==>> 107 108 

VariableInitializer  ==>> 113 114 

VariableInitializers  ==>> 248 249 

VariableInitializersopt  ==>> 466 467 

VariableModifier  ==>> 138 139 

VariableModifiers  ==>> 136 137 

VariableModifiersopt  ==>> 464 465 

WhileStatement  ==>> 308 

WhileStatementNoShortIf  ==>> 309 

Wildcard  ==>> 44 

WildcardBounds  ==>> 45 46 

WildcardBoundsOpt  ==>> 532 533 

XOR  ==>> 419 

XOR_EQUAL  ==>> 444 

abstract  ==>> 83 147 191 216 

assert  ==>> 295 296 

boolean  ==>> 13 

break  ==>> 321 

byte  ==>> 16 

case  ==>> 304 305 

catch  ==>> 330 

char  ==>> 20 

class  ==>> 76 335 336 

const  ==>> 

continue  ==>> 322 

default  ==>> 228 306 

do  ==>> 310 

double  ==>> 22 

else  ==>> 282 283 

enum  ==>> 175 

extends  ==>> 35 45 90 194 

false  ==>> 353 

final  ==>> 85 122 138 149 210 

finally  ==>> 331 

float  ==>> 21 

for  ==>> 313 314 320 

goto  ==>> 

identifier  ==>> 3 

identifieropt  ==>> 452 453 

if  ==>> 281 282 283 

implements  ==>> 91 

import  ==>> 67 68 69 70 

instanceof  ==>> 412 

int  ==>> 18 

interface  ==>> 184 217 

long  ==>> 19 

native  ==>> 151 

new  ==>> 354 355 358 359 360 361 

null  ==>> 351 

package  ==>> 62 

private  ==>> 82 120 146 170 190 

protected  ==>> 81 119 145 169 189 

public  ==>> 80 118 144 168 188 208 215 

return  ==>> 323 

short  ==>> 17 

static  ==>> 69 70 84 121 148 161 192 209 

strictfp  ==>> 86 152 193 

super  ==>> 46 173 174 368 369 372 373 

switch  ==>> 297 

synchronized  ==>> 150 325 

this  ==>> 172 337 338 

throw  ==>> 324 

throws  ==>> 153 

transient  ==>> 123 

true  ==>> 352 

try  ==>> 326 327 

void  ==>> 128 336 

volatile  ==>> 124 

while  ==>> 308 309 310 



 The LALR Parser Generator              2.1.01 (Aug 13 2021)


First map for non-terminals:


'%accept'  ==>> ClassBodyDeclarationsoptMarker LPGUserActionMarker SEMICOLON AT 
    abstract class enum final import interface package private protected public 
    static strictfp EOF_TOKEN 

Commaopt  ==>> '%empty' COMMA 

Ellipsisopt  ==>> '%empty' ELLIPSIS 

CompilationUnit  ==>> '%empty' ClassBodyDeclarationsoptMarker 
    LPGUserActionMarker SEMICOLON AT abstract class enum final import interface 
    package private protected public static strictfp 

ClassBodyDeclarationsopt  ==>> '%empty' SEMICOLON AT LBRACE LESS abstract 
    boolean byte char class double enum final float int interface long native 
    private protected public short static strictfp synchronized transient void 
    volatile IDENTIFIER 

LPGUserAction  ==>> '%empty' IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE PLUS_PLUS BeginAction BeginJava NoAction NullAction BadAction 
    abstract assert boolean break byte char class continue do double enum false 
    final float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    IDENTIFIER 

identifier  ==>> IDENTIFIER 

BlockStatementsopt  ==>> '%empty' IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral 
    MINUS_MINUS LPAREN SEMICOLON AT LBRACE PLUS_PLUS abstract assert boolean 
    break byte char class continue do double enum false final float for if int 
    long new null private protected public return short static strictfp super 
    switch synchronized this throw true try void while IDENTIFIER 

Type  ==>> boolean byte char double float int long short IDENTIFIER 

PrimitiveType  ==>> boolean byte char double float int long short 

ReferenceType  ==>> boolean byte char double float int long short IDENTIFIER 

NumericType  ==>> byte char double float int long short 

IntegralType  ==>> byte char int long short 

FloatingPointType  ==>> double float 

ClassOrInterfaceType  ==>> IDENTIFIER 

TypeVariable  ==>> IDENTIFIER 

ArrayType  ==>> boolean byte char double float int long short IDENTIFIER 

ClassType  ==>> IDENTIFIER 

TypeName  ==>> IDENTIFIER 

TypeArgumentsopt  ==>> '%empty' LESS 

InterfaceType  ==>> IDENTIFIER 

ClassName  ==>> IDENTIFIER 

TypeParameter  ==>> IDENTIFIER 

TypeBoundopt  ==>> '%empty' extends 

TypeBound  ==>> extends 

AdditionalBoundListopt  ==>> '%empty' AND 

AdditionalBoundList  ==>> AND 

AdditionalBound  ==>> AND 

TypeArguments  ==>> LESS 

ActualTypeArgumentList  ==>> QUESTION boolean byte char double float int long 
    short IDENTIFIER 

ActualTypeArgument  ==>> QUESTION boolean byte char double float int long short 
    IDENTIFIER 

Wildcard  ==>> QUESTION 

WildcardBoundsOpt  ==>> '%empty' extends super 

WildcardBounds  ==>> extends super 

PackageName  ==>> IDENTIFIER 

ExpressionName  ==>> IDENTIFIER 

AmbiguousName  ==>> IDENTIFIER 

MethodName  ==>> IDENTIFIER 

PackageOrTypeName  ==>> IDENTIFIER 

PackageDeclarationopt  ==>> '%empty' AT package 

ImportDeclarationsopt  ==>> '%empty' import 

TypeDeclarationsopt  ==>> '%empty' SEMICOLON AT abstract class enum final 
    interface private protected public static strictfp 

ImportDeclarations  ==>> import 

ImportDeclaration  ==>> import 

TypeDeclarations  ==>> SEMICOLON AT abstract class enum final interface private 
    protected public static strictfp 

TypeDeclaration  ==>> SEMICOLON AT abstract class enum final interface private 
    protected public static strictfp 

PackageDeclaration  ==>> AT package 

Annotationsopt  ==>> '%empty' AT 

SingleTypeImportDeclaration  ==>> import 

TypeImportOnDemandDeclaration  ==>> import 

SingleStaticImportDeclaration  ==>> import 

StaticImportOnDemandDeclaration  ==>> import 

ClassDeclaration  ==>> AT abstract class enum final private protected public 
    static strictfp 

InterfaceDeclaration  ==>> AT abstract interface private protected public 
    static strictfp 

NormalClassDeclaration  ==>> AT abstract class final private protected public 
    static strictfp 

EnumDeclaration  ==>> AT abstract enum final private protected public static 
    strictfp 

ClassModifiersopt  ==>> '%empty' AT abstract final private protected public 
    static strictfp 

TypeParametersopt  ==>> '%empty' LESS 

Superopt  ==>> '%empty' extends 

Interfacesopt  ==>> '%empty' implements 

ClassBody  ==>> LBRACE 

ClassModifiers  ==>> AT abstract final private protected public static strictfp 

ClassModifier  ==>> AT abstract final private protected public static strictfp 

Annotation  ==>> AT 

TypeParameters  ==>> LESS 

TypeParameterList  ==>> IDENTIFIER 

Super  ==>> extends 

Interfaces  ==>> implements 

InterfaceTypeList  ==>> IDENTIFIER 

ClassBodyDeclarations  ==>> SEMICOLON AT LBRACE LESS abstract boolean byte char 
    class double enum final float int interface long native private protected 
    public short static strictfp synchronized transient void volatile 
    IDENTIFIER 

ClassBodyDeclaration  ==>> SEMICOLON AT LBRACE LESS abstract boolean byte char 
    class double enum final float int interface long native private protected 
    public short static strictfp synchronized transient void volatile 
    IDENTIFIER 

ClassMemberDeclaration  ==>> SEMICOLON AT LESS abstract boolean byte char class 
    double enum final float int interface long native private protected public 
    short static strictfp synchronized transient void volatile IDENTIFIER 

InstanceInitializer  ==>> LBRACE 

StaticInitializer  ==>> static 

ConstructorDeclaration  ==>> AT LESS private protected public IDENTIFIER 

FieldDeclaration  ==>> AT boolean byte char double final float int long private 
    protected public short static transient volatile IDENTIFIER 

MethodDeclaration  ==>> AT LESS abstract boolean byte char double final float 
    int long native private protected public short static strictfp synchronized 
    void IDENTIFIER 

FieldModifiersopt  ==>> '%empty' AT final private protected public static 
    transient volatile 

VariableDeclarators  ==>> IDENTIFIER 

VariableDeclarator  ==>> IDENTIFIER 

VariableDeclaratorId  ==>> IDENTIFIER 

VariableInitializer  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    LBRACE TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long 
    new null short super this true void IDENTIFIER 

Expression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN TWIDDLE PLUS 
    PLUS_PLUS boolean byte char double false float int long new null short 
    super this true void IDENTIFIER 

ArrayInitializer  ==>> LBRACE 

FieldModifiers  ==>> AT final private protected public static transient 
    volatile 

FieldModifier  ==>> AT final private protected public static transient volatile 

MethodHeader  ==>> AT LESS abstract boolean byte char double final float int 
    long native private protected public short static strictfp synchronized 
    void IDENTIFIER 

MethodBody  ==>> SEMICOLON LBRACE 

MethodModifiersopt  ==>> '%empty' AT abstract final native private protected 
    public static strictfp synchronized 

ResultType  ==>> boolean byte char double float int long short void IDENTIFIER 

MethodDeclarator  ==>> IDENTIFIER 

Throwsopt  ==>> '%empty' throws 

FormalParameterListopt  ==>> '%empty' AT boolean byte char double final float 
    int long short IDENTIFIER 

FormalParameterList  ==>> AT boolean byte char double final float int long 
    short IDENTIFIER 

LastFormalParameter  ==>> AT boolean byte char double final float int long 
    short IDENTIFIER 

FormalParameters  ==>> AT boolean byte char double final float int long short 
    IDENTIFIER 

FormalParameter  ==>> AT boolean byte char double final float int long short 
    IDENTIFIER 

VariableModifiersopt  ==>> '%empty' AT final 

VariableModifiers  ==>> AT final 

VariableModifier  ==>> AT final 

Annotations  ==>> AT 

MethodModifiers  ==>> AT abstract final native private protected public static 
    strictfp synchronized 

MethodModifier  ==>> AT abstract final native private protected public static 
    strictfp synchronized 

Throws  ==>> throws 

ExceptionTypeList  ==>> IDENTIFIER 

ExceptionType  ==>> IDENTIFIER 

Block  ==>> LBRACE 

ConstructorModifiersopt  ==>> '%empty' AT private protected public 

ConstructorDeclarator  ==>> LESS IDENTIFIER 

ConstructorBody  ==>> LBRACE 

SimpleTypeName  ==>> IDENTIFIER 

ConstructorModifiers  ==>> AT private protected public 

ConstructorModifier  ==>> AT private protected public 

ExplicitConstructorInvocationopt  ==>> '%empty' IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 
    LESS boolean byte char double false float int long new null short super 
    this true void IDENTIFIER 

ExplicitConstructorInvocation  ==>> IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 
    LESS boolean byte char double false float int long new null short super 
    this true void IDENTIFIER 

ArgumentListopt  ==>> '%empty' IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

Primary  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral LPAREN boolean byte char double false float 
    int long new null short super this true void IDENTIFIER 

EnumBody  ==>> LBRACE 

EnumConstantsopt  ==>> '%empty' AT IDENTIFIER 

EnumBodyDeclarationsopt  ==>> '%empty' SEMICOLON 

EnumConstants  ==>> AT IDENTIFIER 

EnumConstant  ==>> AT IDENTIFIER 

Argumentsopt  ==>> '%empty' LPAREN 

ClassBodyopt  ==>> '%empty' LBRACE 

Arguments  ==>> LPAREN 

EnumBodyDeclarations  ==>> SEMICOLON 

NormalInterfaceDeclaration  ==>> AT abstract interface private protected public 
    static strictfp 

AnnotationTypeDeclaration  ==>> AT abstract private protected public static 
    strictfp 

InterfaceModifiersopt  ==>> '%empty' AT abstract private protected public 
    static strictfp 

ExtendsInterfacesopt  ==>> '%empty' extends 

InterfaceBody  ==>> LBRACE 

InterfaceModifiers  ==>> AT abstract private protected public static strictfp 

InterfaceModifier  ==>> AT abstract private protected public static strictfp 

ExtendsInterfaces  ==>> extends 

InterfaceMemberDeclarationsopt  ==>> '%empty' SEMICOLON AT LESS abstract 
    boolean byte char class double enum final float int interface long private 
    protected public short static strictfp void IDENTIFIER 

InterfaceMemberDeclarations  ==>> SEMICOLON AT LESS abstract boolean byte char 
    class double enum final float int interface long private protected public 
    short static strictfp void IDENTIFIER 

InterfaceMemberDeclaration  ==>> SEMICOLON AT LESS abstract boolean byte char 
    class double enum final float int interface long private protected public 
    short static strictfp void IDENTIFIER 

ConstantDeclaration  ==>> AT boolean byte char double final float int long 
    public short static IDENTIFIER 

AbstractMethodDeclaration  ==>> AT LESS abstract boolean byte char double float 
    int long public short void IDENTIFIER 

ConstantModifiersopt  ==>> '%empty' AT final public static 

ConstantModifiers  ==>> AT final public static 

ConstantModifier  ==>> AT final public static 

AbstractMethodModifiersopt  ==>> '%empty' AT abstract public 

AbstractMethodModifiers  ==>> AT abstract public 

AbstractMethodModifier  ==>> AT abstract public 

AnnotationTypeBody  ==>> LBRACE 

AnnotationTypeElementDeclarationsopt  ==>> '%empty' SEMICOLON AT abstract 
    boolean byte char class double enum final float int interface long private 
    protected public short static strictfp IDENTIFIER 

AnnotationTypeElementDeclarations  ==>> SEMICOLON AT abstract boolean byte char 
    class double enum final float int interface long private protected public 
    short static strictfp IDENTIFIER 

AnnotationTypeElementDeclaration  ==>> SEMICOLON AT abstract boolean byte char 
    class double enum final float int interface long private protected public 
    short static strictfp IDENTIFIER 

DefaultValueopt  ==>> '%empty' default 

DefaultValue  ==>> default 

ElementValue  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    AT LBRACE TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int 
    long new null short super this true void IDENTIFIER 

NormalAnnotation  ==>> AT 

MarkerAnnotation  ==>> AT 

SingleElementAnnotation  ==>> AT 

ElementValuePairsopt  ==>> '%empty' IDENTIFIER 

ElementValuePairs  ==>> IDENTIFIER 

ElementValuePair  ==>> IDENTIFIER 

SimpleName  ==>> IDENTIFIER 

ConditionalExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

ElementValueArrayInitializer  ==>> LBRACE 

ElementValuesopt  ==>> '%empty' IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    AT LBRACE TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int 
    long new null short super this true void IDENTIFIER 

ElementValues  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    AT LBRACE TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int 
    long new null short super this true void IDENTIFIER 

VariableInitializersopt  ==>> '%empty' IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral 
    MINUS_MINUS MINUS NOT LPAREN LBRACE TWIDDLE PLUS PLUS_PLUS boolean byte 
    char double false float int long new null short super this true void 
    IDENTIFIER 

VariableInitializers  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    LBRACE TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long 
    new null short super this true void IDENTIFIER 

BlockStatements  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE PLUS_PLUS abstract assert boolean break byte char class continue 
    do double enum false final float for if int long new null private protected 
    public return short static strictfp super switch synchronized this throw 
    true try void while IDENTIFIER 

BlockStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE PLUS_PLUS abstract assert boolean break byte char class continue 
    do double enum false final float for if int long new null private protected 
    public return short static strictfp super switch synchronized this throw 
    true try void while IDENTIFIER 

LocalVariableDeclarationStatement  ==>> AT boolean byte char double final float 
    int long short IDENTIFIER 

Statement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON LBRACE 
    PLUS_PLUS assert boolean break byte char continue do double false float for 
    if int long new null return short super switch synchronized this throw true 
    try void while IDENTIFIER 

LocalVariableDeclaration  ==>> AT boolean byte char double final float int long 
    short IDENTIFIER 

StatementWithoutTrailingSubstatement  ==>> IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral 
    MINUS_MINUS LPAREN SEMICOLON LBRACE PLUS_PLUS assert boolean break byte 
    char continue do double false float int long new null return short super 
    switch synchronized this throw true try void IDENTIFIER 

LabeledStatement  ==>> IDENTIFIER 

IfThenStatement  ==>> if 

IfThenElseStatement  ==>> if 

WhileStatement  ==>> while 

ForStatement  ==>> for 

EmptyStatement  ==>> SEMICOLON 

ExpressionStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN PLUS_PLUS 
    boolean byte char double false float int long new null short super this 
    true void IDENTIFIER 

AssertStatement  ==>> assert 

SwitchStatement  ==>> switch 

DoStatement  ==>> do 

BreakStatement  ==>> break 

ContinueStatement  ==>> continue 

ReturnStatement  ==>> return 

SynchronizedStatement  ==>> synchronized 

ThrowStatement  ==>> throw 

TryStatement  ==>> try 

StatementNoShortIf  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    LBRACE PLUS_PLUS assert boolean break byte char continue do double false 
    float for if int long new null return short super switch synchronized this 
    throw true try void while IDENTIFIER 

LabeledStatementNoShortIf  ==>> IDENTIFIER 

IfThenElseStatementNoShortIf  ==>> if 

WhileStatementNoShortIf  ==>> while 

ForStatementNoShortIf  ==>> for 

StatementExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN PLUS_PLUS 
    boolean byte char double false float int long new null short super this 
    true void IDENTIFIER 

Assignment  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral LPAREN boolean byte char double false float 
    int long new null short super this true void IDENTIFIER 

PreIncrementExpression  ==>> PLUS_PLUS 

PreDecrementExpression  ==>> MINUS_MINUS 

PostIncrementExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral LPAREN boolean byte char 
    double false float int long new null short super this true void IDENTIFIER 

PostDecrementExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral LPAREN boolean byte char 
    double false float int long new null short super this true void IDENTIFIER 

MethodInvocation  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral LPAREN boolean byte char 
    double false float int long new null short super this true void IDENTIFIER 

ClassInstanceCreationExpression  ==>> IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral LPAREN 
    boolean byte char double false float int long new null short super this 
    true void IDENTIFIER 

SwitchBlock  ==>> LBRACE 

SwitchBlockStatementGroupsopt  ==>> '%empty' case default 

SwitchLabelsopt  ==>> '%empty' case default 

SwitchBlockStatementGroups  ==>> case default 

SwitchBlockStatementGroup  ==>> case default 

SwitchLabels  ==>> case default 

SwitchLabel  ==>> case default 

ConstantExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

BasicForStatement  ==>> for 

EnhancedForStatement  ==>> for 

ForInitopt  ==>> '%empty' IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN AT 
    PLUS_PLUS boolean byte char double false final float int long new null 
    short super this true void IDENTIFIER 

Expressionopt  ==>> '%empty' IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

ForUpdateopt  ==>> '%empty' IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN PLUS_PLUS 
    boolean byte char double false float int long new null short super this 
    true void IDENTIFIER 

ForInit  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS LPAREN AT PLUS_PLUS boolean byte 
    char double false final float int long new null short super this true void 
    IDENTIFIER 

StatementExpressionList  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN PLUS_PLUS 
    boolean byte char double false float int long new null short super this 
    true void IDENTIFIER 

ForUpdate  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS LPAREN PLUS_PLUS boolean byte 
    char double false float int long new null short super this true void 
    IDENTIFIER 

identifieropt  ==>> '%empty' IDENTIFIER 

Catches  ==>> catch 

Catchesopt  ==>> '%empty' catch 

Finally  ==>> finally 

CatchClause  ==>> catch 

PrimaryNoNewArray  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral LPAREN boolean byte char 
    double false float int long new null short super this true void IDENTIFIER 

ArrayCreationExpression  ==>> new 

Literal  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral false null true 

FieldAccess  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral LPAREN boolean byte char double false float 
    int long new null short super this true void IDENTIFIER 

ArrayAccess  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral LPAREN boolean byte char double false float 
    int long new null short super this true void IDENTIFIER 

BooleanLiteral  ==>> false true 

ArgumentList  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

DimExprs  ==>> LBRACKET 

Dimsopt  ==>> '%empty' LBRACKET 

Dims  ==>> LBRACKET 

DimExpr  ==>> LBRACKET 

PostfixExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral LPAREN boolean byte char 
    double false float int long new null short super this true void IDENTIFIER 

UnaryExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

UnaryExpressionNotPlusMinus  ==>> IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral NOT 
    LPAREN TWIDDLE boolean byte char double false float int long new null short 
    super this true void IDENTIFIER 

CastExpression  ==>> LPAREN 

MultiplicativeExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

AdditiveExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

ShiftExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

RelationalExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

EqualityExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

AndExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

ExclusiveOrExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

InclusiveOrExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

ConditionalAndExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

ConditionalOrExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

AssignmentExpression  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 

LeftHandSide  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral LPAREN boolean byte char 
    double false float int long new null short super this true void IDENTIFIER 

AssignmentOperator  ==>> MINUS_EQUAL REMAINDER_EQUAL AND_EQUAL MULTIPLY_EQUAL 
    DIVIDE_EQUAL XOR_EQUAL OR_EQUAL PLUS_EQUAL LEFT_SHIFT_EQUAL EQUAL GREATER 


 The LALR Parser Generator              2.1.01 (Aug 13 2021)


Follow Map:


'%accept'  ==>> EOF_TOKEN 

Commaopt  ==>> SEMICOLON RBRACE 

Ellipsisopt  ==>> IDENTIFIER 

CompilationUnit  ==>> EOF_TOKEN 

ClassBodyDeclarationsopt  ==>> RBRACE EOF_TOKEN 

LPGUserAction  ==>> EOF_TOKEN 

identifier  ==>> MINUS_MINUS OR MINUS MINUS_EQUAL NOT_EQUAL REMAINDER 
    REMAINDER_EQUAL AND AND_AND AND_EQUAL LPAREN RPAREN MULTIPLY 
    MULTIPLY_EQUAL COMMA DOT DIVIDE DIVIDE_EQUAL COLON SEMICOLON QUESTION AT 
    LBRACKET RBRACKET XOR XOR_EQUAL LBRACE OR_OR OR_EQUAL RBRACE PLUS 
    PLUS_PLUS PLUS_EQUAL LESS LEFT_SHIFT LEFT_SHIFT_EQUAL LESS_EQUAL EQUAL 
    EQUAL_EQUAL GREATER ELLIPSIS abstract boolean byte char class double enum 
    extends final float implements instanceof int interface long native 
    package private protected public short static strictfp synchronized 
    transient void volatile IDENTIFIER 

BlockStatementsopt  ==>> RBRACE EndAction EndJava EOF_TOKEN 

Type  ==>> DOT LBRACKET ELLIPSIS IDENTIFIER 

PrimitiveType  ==>> RPAREN DOT LBRACKET ELLIPSIS IDENTIFIER 

ReferenceType  ==>> OR NOT_EQUAL AND AND_AND RPAREN COMMA DOT COLON SEMICOLON 
    QUESTION AT LBRACKET RBRACKET XOR OR_OR RBRACE LESS LESS_EQUAL EQUAL_EQUAL 
    GREATER ELLIPSIS abstract boolean byte char class double enum final float 
    instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

NumericType  ==>> RPAREN DOT LBRACKET ELLIPSIS IDENTIFIER 

IntegralType  ==>> RPAREN DOT LBRACKET ELLIPSIS IDENTIFIER 

FloatingPointType  ==>> RPAREN DOT LBRACKET ELLIPSIS IDENTIFIER 

ClassOrInterfaceType  ==>> OR NOT_EQUAL AND AND_AND LPAREN RPAREN COMMA DOT 
    COLON SEMICOLON QUESTION AT LBRACKET RBRACKET XOR OR_OR RBRACE LESS 
    LESS_EQUAL EQUAL_EQUAL GREATER ELLIPSIS abstract boolean byte char class 
    double enum final float instanceof int interface long private protected 
    public short static strictfp void IDENTIFIER 

TypeVariable  ==>> OR NOT_EQUAL AND AND_AND RPAREN COMMA DOT COLON SEMICOLON 
    QUESTION AT LBRACKET RBRACKET XOR LBRACE OR_OR RBRACE LESS LESS_EQUAL 
    EQUAL_EQUAL GREATER ELLIPSIS abstract boolean byte char class double enum 
    extends final float instanceof int interface long private protected public 
    short static strictfp void IDENTIFIER 

ArrayType  ==>> OR NOT_EQUAL AND AND_AND RPAREN COMMA DOT COLON SEMICOLON 
    QUESTION AT LBRACKET RBRACKET XOR OR_OR RBRACE LESS LESS_EQUAL EQUAL_EQUAL 
    GREATER ELLIPSIS abstract boolean byte char class double enum final float 
    instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

ClassType  ==>> OR NOT_EQUAL AND AND_AND LPAREN RPAREN COMMA DOT COLON 
    SEMICOLON QUESTION AT LBRACKET RBRACKET XOR LBRACE OR_OR RBRACE LESS 
    LESS_EQUAL EQUAL_EQUAL GREATER ELLIPSIS abstract boolean byte char class 
    double enum final float implements instanceof int interface long private 
    protected public short static strictfp void IDENTIFIER 

TypeName  ==>> OR NOT_EQUAL AND AND_AND LPAREN RPAREN COMMA DOT COLON 
    SEMICOLON QUESTION AT LBRACKET RBRACKET XOR LBRACE OR_OR RBRACE LESS 
    LESS_EQUAL EQUAL_EQUAL GREATER ELLIPSIS abstract boolean byte char class 
    double enum final float implements instanceof int interface long native 
    package private protected public short static strictfp synchronized 
    transient void volatile IDENTIFIER 

TypeArgumentsopt  ==>> OR NOT_EQUAL AND AND_AND LPAREN RPAREN COMMA DOT COLON 
    SEMICOLON QUESTION AT LBRACKET RBRACKET XOR LBRACE OR_OR RBRACE LESS 
    LESS_EQUAL EQUAL_EQUAL GREATER ELLIPSIS abstract boolean byte char class 
    double enum final float implements instanceof int interface long private 
    protected public short static strictfp super this void IDENTIFIER 

InterfaceType  ==>> AND COMMA LBRACE GREATER 

ClassName  ==>> DOT 

TypeParameter  ==>> COMMA GREATER 

TypeBoundopt  ==>> COMMA GREATER 

TypeBound  ==>> COMMA GREATER 

AdditionalBoundListopt  ==>> COMMA GREATER 

AdditionalBoundList  ==>> AND COMMA GREATER 

AdditionalBound  ==>> AND COMMA GREATER 

TypeArguments  ==>> OR NOT_EQUAL AND AND_AND LPAREN RPAREN COMMA DOT COLON 
    SEMICOLON QUESTION AT LBRACKET RBRACKET XOR LBRACE OR_OR RBRACE LESS 
    LESS_EQUAL EQUAL_EQUAL GREATER ELLIPSIS abstract boolean byte char class 
    double enum final float implements instanceof int interface long private 
    protected public short static strictfp super this void IDENTIFIER 

ActualTypeArgumentList  ==>> COMMA GREATER 

ActualTypeArgument  ==>> COMMA GREATER 

Wildcard  ==>> COMMA GREATER 

WildcardBoundsOpt  ==>> COMMA GREATER 

WildcardBounds  ==>> COMMA GREATER 

PackageName  ==>> DOT SEMICOLON 

ExpressionName  ==>> MINUS_MINUS OR MINUS MINUS_EQUAL NOT_EQUAL REMAINDER 
    REMAINDER_EQUAL AND AND_AND AND_EQUAL RPAREN MULTIPLY MULTIPLY_EQUAL COMMA 
    DIVIDE DIVIDE_EQUAL COLON SEMICOLON QUESTION AT LBRACKET RBRACKET XOR 
    XOR_EQUAL OR_OR OR_EQUAL RBRACE PLUS PLUS_PLUS PLUS_EQUAL LESS LEFT_SHIFT 
    LEFT_SHIFT_EQUAL LESS_EQUAL EQUAL EQUAL_EQUAL GREATER abstract boolean 
    byte char class double enum final float instanceof int interface long 
    private protected public short static strictfp void IDENTIFIER 

AmbiguousName  ==>> DOT 

MethodName  ==>> LPAREN 

PackageOrTypeName  ==>> DOT 

PackageDeclarationopt  ==>> SEMICOLON AT abstract class enum final import 
    interface private protected public static strictfp EOF_TOKEN 

ImportDeclarationsopt  ==>> SEMICOLON AT abstract class enum final interface 
    private protected public static strictfp EOF_TOKEN 

TypeDeclarationsopt  ==>> EOF_TOKEN 

ImportDeclarations  ==>> SEMICOLON AT abstract class enum final import 
    interface private protected public static strictfp EOF_TOKEN 

ImportDeclaration  ==>> SEMICOLON AT abstract class enum final import 
    interface private protected public static strictfp EOF_TOKEN 

TypeDeclarations  ==>> SEMICOLON AT abstract class enum final interface 
    private protected public static strictfp EOF_TOKEN 

TypeDeclaration  ==>> SEMICOLON AT abstract class enum final interface private 
    protected public static strictfp EOF_TOKEN 

PackageDeclaration  ==>> SEMICOLON AT abstract class enum final import 
    interface private protected public static strictfp EOF_TOKEN 

Annotationsopt  ==>> package IDENTIFIER 

SingleTypeImportDeclaration  ==>> SEMICOLON AT abstract class enum final 
    import interface private protected public static strictfp EOF_TOKEN 

TypeImportOnDemandDeclaration  ==>> SEMICOLON AT abstract class enum final 
    import interface private protected public static strictfp EOF_TOKEN 

SingleStaticImportDeclaration  ==>> SEMICOLON AT abstract class enum final 
    import interface private protected public static strictfp EOF_TOKEN 

StaticImportOnDemandDeclaration  ==>> SEMICOLON AT abstract class enum final 
    import interface private protected public static strictfp EOF_TOKEN 

ClassDeclaration  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS LESS EndAction EndJava abstract assert boolean 
    break byte case char class continue default do double enum false final 
    float for if int interface long native new null private protected public 
    return short static strictfp super switch synchronized this throw 
    transient true try void volatile while EOF_TOKEN IDENTIFIER 

InterfaceDeclaration  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

NormalClassDeclaration  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS LESS EndAction EndJava abstract assert boolean 
    break byte case char class continue default do double enum false final 
    float for if int interface long native new null private protected public 
    return short static strictfp super switch synchronized this throw 
    transient true try void volatile while EOF_TOKEN IDENTIFIER 

EnumDeclaration  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS LESS EndAction EndJava abstract assert boolean 
    break byte case char class continue default do double enum false final 
    float for if int interface long native new null private protected public 
    return short static strictfp super switch synchronized this throw 
    transient true try void volatile while EOF_TOKEN IDENTIFIER 

ClassModifiersopt  ==>> class enum 

TypeParametersopt  ==>> LBRACE boolean byte char double extends float 
    implements int long short void IDENTIFIER 

Superopt  ==>> LBRACE implements 

Interfacesopt  ==>> LBRACE 

ClassBody  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER 
    AND AND_AND LPAREN RPAREN MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON 
    QUESTION AT LBRACKET RBRACKET XOR LBRACE OR_OR RBRACE PLUS PLUS_PLUS LESS 
    LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER EndAction EndJava abstract 
    assert boolean break byte case char class continue default do double enum 
    false final float for if instanceof int interface long native new null 
    private protected public return short static strictfp super switch 
    synchronized this throw transient true try void volatile while EOF_TOKEN 
    IDENTIFIER 

ClassModifiers  ==>> AT abstract class enum final private protected public 
    static strictfp 

ClassModifier  ==>> AT abstract class enum final private protected public 
    static strictfp 

Annotation  ==>> RPAREN COMMA SEMICOLON AT RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long native package 
    private protected public short static strictfp synchronized transient void 
    volatile IDENTIFIER 

TypeParameters  ==>> LBRACE boolean byte char double extends float implements 
    int long short void IDENTIFIER 

TypeParameterList  ==>> COMMA GREATER 

Super  ==>> LBRACE implements 

Interfaces  ==>> LBRACE 

InterfaceTypeList  ==>> COMMA LBRACE 

ClassBodyDeclarations  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

ClassBodyDeclaration  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

ClassMemberDeclaration  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

InstanceInitializer  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

StaticInitializer  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

ConstructorDeclaration  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

FieldDeclaration  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

MethodDeclaration  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

FieldModifiersopt  ==>> boolean byte char double float int long short 
    IDENTIFIER 

VariableDeclarators  ==>> COMMA SEMICOLON AT RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long private protected 
    public short static strictfp void IDENTIFIER 

VariableDeclarator  ==>> COMMA SEMICOLON AT RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long private protected 
    public short static strictfp void IDENTIFIER 

VariableDeclaratorId  ==>> RPAREN COMMA COLON SEMICOLON AT LBRACKET RBRACE 
    LESS EQUAL abstract boolean byte char class double enum final float int 
    interface long private protected public short static strictfp void 
    IDENTIFIER 

VariableInitializer  ==>> COMMA SEMICOLON AT RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long private protected 
    public short static strictfp void IDENTIFIER 

Expression  ==>> RPAREN COMMA COLON SEMICOLON AT RBRACKET RBRACE LESS abstract 
    boolean byte char class double enum final float int interface long private 
    protected public short static strictfp void IDENTIFIER 

ArrayInitializer  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND 
    RPAREN MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR 
    OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER 
    abstract boolean byte char class double enum final float instanceof int 
    interface long private protected public short static strictfp void 
    IDENTIFIER 

FieldModifiers  ==>> AT boolean byte char double final float int long private 
    protected public short static transient volatile IDENTIFIER 

FieldModifier  ==>> AT boolean byte char double final float int long private 
    protected public short static transient volatile IDENTIFIER 

MethodHeader  ==>> SEMICOLON LBRACE 

MethodBody  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean byte char 
    class double enum final float int interface long native private protected 
    public short static strictfp synchronized transient void volatile 
    EOF_TOKEN IDENTIFIER 

MethodModifiersopt  ==>> LESS boolean byte char double float int long short 
    void IDENTIFIER 

ResultType  ==>> IDENTIFIER 

MethodDeclarator  ==>> SEMICOLON LBRACKET LBRACE throws 

Throwsopt  ==>> SEMICOLON LBRACE 

FormalParameterListopt  ==>> RPAREN 

FormalParameterList  ==>> RPAREN 

LastFormalParameter  ==>> RPAREN 

FormalParameters  ==>> COMMA 

FormalParameter  ==>> RPAREN COMMA COLON 

VariableModifiersopt  ==>> boolean byte char double float int long short 
    IDENTIFIER 

VariableModifiers  ==>> AT boolean byte char double final float int long short 
    IDENTIFIER 

VariableModifier  ==>> AT boolean byte char double final float int long short 
    IDENTIFIER 

Annotations  ==>> AT LESS abstract boolean byte char double final float int 
    long native package private protected public short static strictfp 
    synchronized void IDENTIFIER 

MethodModifiers  ==>> AT LESS abstract boolean byte char double final float 
    int long native private protected public short static strictfp 
    synchronized void IDENTIFIER 

MethodModifier  ==>> AT LESS abstract boolean byte char double final float int 
    long native private protected public short static strictfp synchronized 
    void IDENTIFIER 

Throws  ==>> SEMICOLON LBRACE 

ExceptionTypeList  ==>> COMMA SEMICOLON LBRACE 

ExceptionType  ==>> COMMA SEMICOLON LBRACE 

Block  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON AT LBRACE 
    RBRACE PLUS_PLUS LESS EndAction EndJava abstract assert boolean break byte 
    case catch char class continue default do double enum else false final 
    finally float for if int interface long native new null private protected 
    public return short static strictfp super switch synchronized this throw 
    transient true try void volatile while EOF_TOKEN IDENTIFIER 

ConstructorModifiersopt  ==>> LESS IDENTIFIER 

ConstructorDeclarator  ==>> LBRACE throws 

ConstructorBody  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

SimpleTypeName  ==>> LPAREN 

ConstructorModifiers  ==>> AT LESS private protected public IDENTIFIER 

ConstructorModifier  ==>> AT LESS private protected public IDENTIFIER 

ExplicitConstructorInvocationopt  ==>> IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral 
    MINUS_MINUS LPAREN SEMICOLON AT LBRACE RBRACE PLUS_PLUS abstract assert 
    boolean break byte char class continue do double enum false final float 
    for if int long new null private protected public return short static 
    strictfp super switch synchronized this throw true try void while 
    IDENTIFIER 

ExplicitConstructorInvocation  ==>> IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral 
    MINUS_MINUS LPAREN SEMICOLON AT LBRACE RBRACE PLUS_PLUS abstract assert 
    boolean break byte char class continue do double enum false final float 
    for if int long new null private protected public return short static 
    strictfp super switch synchronized this throw true try void while 
    IDENTIFIER 

ArgumentListopt  ==>> RPAREN 

Primary  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR OR_OR 
    RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER 
    abstract boolean byte char class double enum final float instanceof int 
    interface long private protected public short static strictfp void 
    IDENTIFIER 

EnumBody  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON AT LBRACE 
    RBRACE PLUS_PLUS LESS EndAction EndJava abstract assert boolean break byte 
    case char class continue default do double enum false final float for if 
    int interface long native new null private protected public return short 
    static strictfp super switch synchronized this throw transient true try 
    void volatile while EOF_TOKEN IDENTIFIER 

EnumConstantsopt  ==>> COMMA SEMICOLON RBRACE 

EnumBodyDeclarationsopt  ==>> RBRACE 

EnumConstants  ==>> COMMA SEMICOLON RBRACE 

EnumConstant  ==>> COMMA COLON SEMICOLON RBRACE 

Argumentsopt  ==>> COMMA COLON SEMICOLON LBRACE RBRACE 

ClassBodyopt  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT LBRACKET RBRACKET 
    XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL 
    GREATER abstract boolean byte char class double enum final float 
    instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

Arguments  ==>> COMMA COLON SEMICOLON LBRACE RBRACE 

EnumBodyDeclarations  ==>> RBRACE 

NormalInterfaceDeclaration  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract 
    boolean byte char class double enum final float int interface long native 
    private protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

AnnotationTypeDeclaration  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract 
    boolean byte char class double enum final float int interface long native 
    private protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

InterfaceModifiersopt  ==>> AT interface 

ExtendsInterfacesopt  ==>> LBRACE 

InterfaceBody  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean byte char 
    class double enum final float int interface long native private protected 
    public short static strictfp synchronized transient void volatile 
    EOF_TOKEN IDENTIFIER 

InterfaceModifiers  ==>> AT abstract interface private protected public static 
    strictfp 

InterfaceModifier  ==>> AT abstract interface private protected public static 
    strictfp 

ExtendsInterfaces  ==>> COMMA LBRACE 

InterfaceMemberDeclarationsopt  ==>> RBRACE 

InterfaceMemberDeclarations  ==>> SEMICOLON AT RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long private 
    protected public short static strictfp void IDENTIFIER 

InterfaceMemberDeclaration  ==>> SEMICOLON AT RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long private 
    protected public short static strictfp void IDENTIFIER 

ConstantDeclaration  ==>> SEMICOLON AT RBRACE LESS abstract boolean byte char 
    class double enum final float int interface long private protected public 
    short static strictfp void IDENTIFIER 

AbstractMethodDeclaration  ==>> SEMICOLON AT RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long private protected 
    public short static strictfp void IDENTIFIER 

ConstantModifiersopt  ==>> boolean byte char double float int long short 
    IDENTIFIER 

ConstantModifiers  ==>> AT boolean byte char double final float int long 
    public short static IDENTIFIER 

ConstantModifier  ==>> AT boolean byte char double final float int long public 
    short static IDENTIFIER 

AbstractMethodModifiersopt  ==>> LESS boolean byte char double float int long 
    short void IDENTIFIER 

AbstractMethodModifiers  ==>> AT LESS abstract boolean byte char double float 
    int long public short void IDENTIFIER 

AbstractMethodModifier  ==>> AT LESS abstract boolean byte char double float 
    int long public short void IDENTIFIER 

AnnotationTypeBody  ==>> SEMICOLON AT LBRACE RBRACE LESS abstract boolean byte 
    char class double enum final float int interface long native private 
    protected public short static strictfp synchronized transient void 
    volatile EOF_TOKEN IDENTIFIER 

AnnotationTypeElementDeclarationsopt  ==>> RBRACE 

AnnotationTypeElementDeclarations  ==>> SEMICOLON AT RBRACE abstract boolean 
    byte char class double enum final float int interface long private 
    protected public short static strictfp IDENTIFIER 

AnnotationTypeElementDeclaration  ==>> SEMICOLON AT RBRACE abstract boolean 
    byte char class double enum final float int interface long private 
    protected public short static strictfp IDENTIFIER 

DefaultValueopt  ==>> SEMICOLON 

DefaultValue  ==>> SEMICOLON 

ElementValue  ==>> RPAREN COMMA SEMICOLON RBRACE 

NormalAnnotation  ==>> RPAREN COMMA SEMICOLON AT RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long native package 
    private protected public short static strictfp synchronized transient void 
    volatile IDENTIFIER 

MarkerAnnotation  ==>> RPAREN COMMA SEMICOLON AT RBRACE LESS abstract boolean 
    byte char class double enum final float int interface long native package 
    private protected public short static strictfp synchronized transient void 
    volatile IDENTIFIER 

SingleElementAnnotation  ==>> RPAREN COMMA SEMICOLON AT RBRACE LESS abstract 
    boolean byte char class double enum final float int interface long native 
    package private protected public short static strictfp synchronized 
    transient void volatile IDENTIFIER 

ElementValuePairsopt  ==>> RPAREN 

ElementValuePairs  ==>> RPAREN COMMA 

ElementValuePair  ==>> RPAREN COMMA 

SimpleName  ==>> EQUAL 

ConditionalExpression  ==>> RPAREN COMMA COLON SEMICOLON AT RBRACKET RBRACE 
    LESS abstract boolean byte char class double enum final float int 
    interface long private protected public short static strictfp void 
    IDENTIFIER 

ElementValueArrayInitializer  ==>> RPAREN COMMA SEMICOLON RBRACE 

ElementValuesopt  ==>> COMMA RBRACE 

ElementValues  ==>> COMMA RBRACE 

VariableInitializersopt  ==>> COMMA RBRACE 

VariableInitializers  ==>> COMMA RBRACE 

BlockStatements  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum false final float for 
    if int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

BlockStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum false final float for 
    if int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

LocalVariableDeclarationStatement  ==>> IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral 
    MINUS_MINUS LPAREN SEMICOLON AT LBRACE RBRACE PLUS_PLUS EndAction EndJava 
    abstract assert boolean break byte case char class continue default do 
    double enum false final float for if int long new null private protected 
    public return short static strictfp super switch synchronized this throw 
    true try void while EOF_TOKEN IDENTIFIER 

Statement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON AT LBRACE 
    RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break byte case 
    char class continue default do double enum false final float for if int 
    long new null private protected public return short static strictfp super 
    switch synchronized this throw true try void while EOF_TOKEN IDENTIFIER 

LocalVariableDeclaration  ==>> SEMICOLON 

StatementWithoutTrailingSubstatement  ==>> IntegerLiteral LongLiteral 
    FloatingPointLiteral DoubleLiteral CharacterLiteral StringLiteral 
    MINUS_MINUS LPAREN SEMICOLON AT LBRACE RBRACE PLUS_PLUS EndAction EndJava 
    abstract assert boolean break byte case char class continue default do 
    double enum else false final float for if int long new null private 
    protected public return short static strictfp super switch synchronized 
    this throw true try void while EOF_TOKEN IDENTIFIER 

LabeledStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum false final float for 
    if int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

IfThenStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum false final float for 
    if int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

IfThenElseStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum false final float for 
    if int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

WhileStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum false final float for 
    if int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

ForStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum false final float for 
    if int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

EmptyStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

ExpressionStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

AssertStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

SwitchStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

DoStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

BreakStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

ContinueStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

ReturnStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

SynchronizedStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

ThrowStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

TryStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

StatementNoShortIf  ==>> else 

LabeledStatementNoShortIf  ==>> else 

IfThenElseStatementNoShortIf  ==>> else 

WhileStatementNoShortIf  ==>> else 

ForStatementNoShortIf  ==>> else 

StatementExpression  ==>> RPAREN COMMA SEMICOLON 

Assignment  ==>> RPAREN COMMA COLON SEMICOLON AT RBRACKET RBRACE LESS abstract 
    boolean byte char class double enum final float int interface long private 
    protected public short static strictfp void IDENTIFIER 

PreIncrementExpression  ==>> OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR OR_OR 
    RBRACE PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER abstract 
    boolean byte char class double enum final float instanceof int interface 
    long private protected public short static strictfp void IDENTIFIER 

PreDecrementExpression  ==>> OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR OR_OR 
    RBRACE PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER abstract 
    boolean byte char class double enum final float instanceof int interface 
    long private protected public short static strictfp void IDENTIFIER 

PostIncrementExpression  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND 
    AND_AND RPAREN MULTIPLY COMMA DIVIDE COLON SEMICOLON QUESTION AT RBRACKET 
    XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL 
    GREATER abstract boolean byte char class double enum final float 
    instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

PostDecrementExpression  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND 
    AND_AND RPAREN MULTIPLY COMMA DIVIDE COLON SEMICOLON QUESTION AT RBRACKET 
    XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL 
    GREATER abstract boolean byte char class double enum final float 
    instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

MethodInvocation  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND 
    RPAREN MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT LBRACKET 
    RBRACKET XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL 
    EQUAL_EQUAL GREATER abstract boolean byte char class double enum final 
    float instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

ClassInstanceCreationExpression  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER 
    AND AND_AND RPAREN MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT 
    LBRACKET RBRACKET XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT 
    LESS_EQUAL EQUAL_EQUAL GREATER abstract boolean byte char class double 
    enum final float instanceof int interface long private protected public 
    short static strictfp void IDENTIFIER 

SwitchBlock  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum else false final 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

SwitchBlockStatementGroupsopt  ==>> RBRACE case default 

SwitchLabelsopt  ==>> RBRACE 

SwitchBlockStatementGroups  ==>> RBRACE case default 

SwitchBlockStatementGroup  ==>> RBRACE case default 

SwitchLabels  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS abstract assert boolean break byte case char 
    class continue default do double enum false final float for if int long 
    new null private protected public return short static strictfp super 
    switch synchronized this throw true try void while IDENTIFIER 

SwitchLabel  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS abstract assert boolean break byte case char 
    class continue default do double enum false final float for if int long 
    new null private protected public return short static strictfp super 
    switch synchronized this throw true try void while IDENTIFIER 

ConstantExpression  ==>> COLON 

BasicForStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum false final float for 
    if int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

EnhancedForStatement  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case char class continue default do double enum false final float for 
    if int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

ForInitopt  ==>> SEMICOLON 

Expressionopt  ==>> SEMICOLON 

ForUpdateopt  ==>> RPAREN 

ForInit  ==>> SEMICOLON 

StatementExpressionList  ==>> RPAREN COMMA SEMICOLON 

ForUpdate  ==>> RPAREN 

identifieropt  ==>> SEMICOLON 

Catches  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON AT LBRACE 
    RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break byte case 
    catch char class continue default do double enum else false final finally 
    float for if int long new null private protected public return short 
    static strictfp super switch synchronized this throw true try void while 
    EOF_TOKEN IDENTIFIER 

Catchesopt  ==>> finally 

Finally  ==>> IntegerLiteral LongLiteral FloatingPointLiteral DoubleLiteral 
    CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON AT LBRACE 
    RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break byte case 
    char class continue default do double enum else false final float for if 
    int long new null private protected public return short static strictfp 
    super switch synchronized this throw true try void while EOF_TOKEN 
    IDENTIFIER 

CatchClause  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS LPAREN SEMICOLON 
    AT LBRACE RBRACE PLUS_PLUS EndAction EndJava abstract assert boolean break 
    byte case catch char class continue default do double enum else false 
    final finally float for if int long new null private protected public 
    return short static strictfp super switch synchronized this throw true try 
    void while EOF_TOKEN IDENTIFIER 

PrimaryNoNewArray  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND 
    RPAREN MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT LBRACKET 
    RBRACKET XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL 
    EQUAL_EQUAL GREATER abstract boolean byte char class double enum final 
    float instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

ArrayCreationExpression  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND 
    AND_AND RPAREN MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT 
    RBRACKET XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL 
    EQUAL_EQUAL GREATER abstract boolean byte char class double enum final 
    float instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

Literal  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT LBRACKET RBRACKET 
    XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL 
    GREATER abstract boolean byte char class double enum final float 
    instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

FieldAccess  ==>> MINUS_MINUS OR MINUS MINUS_EQUAL NOT_EQUAL REMAINDER 
    REMAINDER_EQUAL AND AND_AND AND_EQUAL RPAREN MULTIPLY MULTIPLY_EQUAL COMMA 
    DOT DIVIDE DIVIDE_EQUAL COLON SEMICOLON QUESTION AT LBRACKET RBRACKET XOR 
    XOR_EQUAL OR_OR OR_EQUAL RBRACE PLUS PLUS_PLUS PLUS_EQUAL LESS LEFT_SHIFT 
    LEFT_SHIFT_EQUAL LESS_EQUAL EQUAL EQUAL_EQUAL GREATER abstract boolean 
    byte char class double enum final float instanceof int interface long 
    private protected public short static strictfp void IDENTIFIER 

ArrayAccess  ==>> MINUS_MINUS OR MINUS MINUS_EQUAL NOT_EQUAL REMAINDER 
    REMAINDER_EQUAL AND AND_AND AND_EQUAL RPAREN MULTIPLY MULTIPLY_EQUAL COMMA 
    DOT DIVIDE DIVIDE_EQUAL COLON SEMICOLON QUESTION AT LBRACKET RBRACKET XOR 
    XOR_EQUAL OR_OR OR_EQUAL RBRACE PLUS PLUS_PLUS PLUS_EQUAL LESS LEFT_SHIFT 
    LEFT_SHIFT_EQUAL LESS_EQUAL EQUAL EQUAL_EQUAL GREATER abstract boolean 
    byte char class double enum final float instanceof int interface long 
    private protected public short static strictfp void IDENTIFIER 

BooleanLiteral  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND 
    RPAREN MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT LBRACKET 
    RBRACKET XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL 
    EQUAL_EQUAL GREATER abstract boolean byte char class double enum final 
    float instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

ArgumentList  ==>> RPAREN COMMA 

DimExprs  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT LBRACKET RBRACKET 
    XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL 
    GREATER abstract boolean byte char class double enum final float 
    instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

Dimsopt  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR OR_OR 
    RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER 
    abstract boolean byte char class double enum final float instanceof int 
    interface long private protected public short static strictfp void 
    IDENTIFIER 

Dims  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT LBRACKET RBRACKET 
    XOR LBRACE OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL 
    EQUAL_EQUAL GREATER abstract boolean byte char class double enum final 
    float instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

DimExpr  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DOT DIVIDE COLON SEMICOLON QUESTION AT LBRACKET RBRACKET 
    XOR OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL 
    GREATER abstract boolean byte char class double enum final float 
    instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

PostfixExpression  ==>> MINUS_MINUS OR MINUS NOT_EQUAL REMAINDER AND AND_AND 
    RPAREN MULTIPLY COMMA DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR 
    OR_OR RBRACE PLUS PLUS_PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER 
    abstract boolean byte char class double enum final float instanceof int 
    interface long private protected public short static strictfp void 
    IDENTIFIER 

UnaryExpression  ==>> OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN MULTIPLY 
    COMMA DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR OR_OR RBRACE PLUS 
    LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER abstract boolean byte char 
    class double enum final float instanceof int interface long private 
    protected public short static strictfp void IDENTIFIER 

UnaryExpressionNotPlusMinus  ==>> OR MINUS NOT_EQUAL REMAINDER AND AND_AND 
    RPAREN MULTIPLY COMMA DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR 
    OR_OR RBRACE PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER abstract 
    boolean byte char class double enum final float instanceof int interface 
    long private protected public short static strictfp void IDENTIFIER 

CastExpression  ==>> OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN MULTIPLY 
    COMMA DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR OR_OR RBRACE PLUS 
    LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER abstract boolean byte char 
    class double enum final float instanceof int interface long private 
    protected public short static strictfp void IDENTIFIER 

MultiplicativeExpression  ==>> OR MINUS NOT_EQUAL REMAINDER AND AND_AND RPAREN 
    MULTIPLY COMMA DIVIDE COLON SEMICOLON QUESTION AT RBRACKET XOR OR_OR 
    RBRACE PLUS LESS LEFT_SHIFT LESS_EQUAL EQUAL_EQUAL GREATER abstract 
    boolean byte char class double enum final float instanceof int interface 
    long private protected public short static strictfp void IDENTIFIER 

AdditiveExpression  ==>> OR MINUS NOT_EQUAL AND AND_AND RPAREN COMMA COLON 
    SEMICOLON QUESTION AT RBRACKET XOR OR_OR RBRACE PLUS LESS LEFT_SHIFT 
    LESS_EQUAL EQUAL_EQUAL GREATER abstract boolean byte char class double 
    enum final float instanceof int interface long private protected public 
    short static strictfp void IDENTIFIER 

ShiftExpression  ==>> OR NOT_EQUAL AND AND_AND RPAREN COMMA COLON SEMICOLON 
    QUESTION AT RBRACKET XOR OR_OR RBRACE LESS LEFT_SHIFT LESS_EQUAL 
    EQUAL_EQUAL GREATER abstract boolean byte char class double enum final 
    float instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

RelationalExpression  ==>> OR NOT_EQUAL AND AND_AND RPAREN COMMA COLON 
    SEMICOLON QUESTION AT RBRACKET XOR OR_OR RBRACE LESS LESS_EQUAL 
    EQUAL_EQUAL GREATER abstract boolean byte char class double enum final 
    float instanceof int interface long private protected public short static 
    strictfp void IDENTIFIER 

EqualityExpression  ==>> OR NOT_EQUAL AND AND_AND RPAREN COMMA COLON SEMICOLON 
    QUESTION AT RBRACKET XOR OR_OR RBRACE LESS EQUAL_EQUAL abstract boolean 
    byte char class double enum final float int interface long private 
    protected public short static strictfp void IDENTIFIER 

AndExpression  ==>> OR AND AND_AND RPAREN COMMA COLON SEMICOLON QUESTION AT 
    RBRACKET XOR OR_OR RBRACE LESS abstract boolean byte char class double 
    enum final float int interface long private protected public short static 
    strictfp void IDENTIFIER 

ExclusiveOrExpression  ==>> OR AND_AND RPAREN COMMA COLON SEMICOLON QUESTION 
    AT RBRACKET XOR OR_OR RBRACE LESS abstract boolean byte char class double 
    enum final float int interface long private protected public short static 
    strictfp void IDENTIFIER 

InclusiveOrExpression  ==>> OR AND_AND RPAREN COMMA COLON SEMICOLON QUESTION 
    AT RBRACKET OR_OR RBRACE LESS abstract boolean byte char class double enum 
    final float int interface long private protected public short static 
    strictfp void IDENTIFIER 

ConditionalAndExpression  ==>> AND_AND RPAREN COMMA COLON SEMICOLON QUESTION 
    AT RBRACKET OR_OR RBRACE LESS abstract boolean byte char class double enum 
    final float int interface long private protected public short static 
    strictfp void IDENTIFIER 

ConditionalOrExpression  ==>> RPAREN COMMA COLON SEMICOLON QUESTION AT 
    RBRACKET OR_OR RBRACE LESS abstract boolean byte char class double enum 
    final float int interface long private protected public short static 
    strictfp void IDENTIFIER 

AssignmentExpression  ==>> RPAREN COMMA COLON SEMICOLON AT RBRACKET RBRACE 
    LESS abstract boolean byte char class double enum final float int 
    interface long private protected public short static strictfp void 
    IDENTIFIER 

LeftHandSide  ==>> MINUS_EQUAL REMAINDER_EQUAL AND_EQUAL MULTIPLY_EQUAL 
    DIVIDE_EQUAL XOR_EQUAL OR_EQUAL PLUS_EQUAL LEFT_SHIFT_EQUAL EQUAL GREATER 

AssignmentOperator  ==>> IntegerLiteral LongLiteral FloatingPointLiteral 
    DoubleLiteral CharacterLiteral StringLiteral MINUS_MINUS MINUS NOT LPAREN 
    TWIDDLE PLUS PLUS_PLUS boolean byte char double false float int long new 
    null short super this true void IDENTIFIER 


 The LALR Parser Generator              2.1.01 (Aug 13 2021)


Name map:

'%empty' ::= '%empty'
ClassBodyDeclarationsoptMarker ::= ClassBodyDeclarationsoptMarker
LPGUserActionMarker ::= LPGUserActionMarker
IntegerLiteral ::= IntegerLiteral
LongLiteral ::= LongLiteral
FloatingPointLiteral ::= FloatingPointLiteral
DoubleLiteral ::= DoubleLiteral
CharacterLiteral ::= CharacterLiteral
StringLiteral ::= StringLiteral
MINUS_MINUS ::= --
OR ::= '|'
MINUS ::= -
MINUS_EQUAL ::= -=
NOT ::= !
NOT_EQUAL ::= !=
REMAINDER ::= '%'
REMAINDER_EQUAL ::= '%='
AND ::= &
AND_AND ::= &&
AND_EQUAL ::= &=
LPAREN ::= (
RPAREN ::= )
MULTIPLY ::= *
MULTIPLY_EQUAL ::= *=
COMMA ::= ,
DOT ::= .
DIVIDE ::= /
DIVIDE_EQUAL ::= /=
COLON ::= :
SEMICOLON ::= ;
QUESTION ::= ?
AT ::= @
LBRACKET ::= [
RBRACKET ::= ]
XOR ::= ^
XOR_EQUAL ::= ^=
LBRACE ::= {
OR_OR ::= ||
OR_EQUAL ::= |=
RBRACE ::= }
TWIDDLE ::= ~
PLUS ::= +
PLUS_PLUS ::= ++
PLUS_EQUAL ::= +=
LESS ::= <
LEFT_SHIFT ::= <<
LEFT_SHIFT_EQUAL ::= <<=
LESS_EQUAL ::= <=
EQUAL ::= =
EQUAL_EQUAL ::= ==
GREATER ::= >
GREATER_EQUAL ::= >=
RIGHT_SHIFT ::= >>
RIGHT_SHIFT_EQUAL ::= >>=
UNSIGNED_RIGHT_SHIFT ::= >>>
UNSIGNED_RIGHT_SHIFT_EQUAL ::= >>>=
ELLIPSIS ::= ...
BeginAction ::= '%BeginAction'
EndAction ::= '%EndAction'
BeginJava ::= '$BeginJava'
EndJava ::= '$EndJava'
NoAction ::= '$NoAction'
NullAction ::= '$NullAction'
BadAction ::= '$BadAction'
abstract ::= abstract
assert ::= assert
boolean ::= boolean
break ::= break
byte ::= byte
case ::= case
catch ::= catch
char ::= char
class ::= class
const ::= const
continue ::= continue
default ::= default
do ::= do
double ::= double
enum ::= enum
else ::= else
extends ::= extends
false ::= false
final ::= final
finally ::= finally
float ::= float
for ::= for
goto ::= goto
if ::= if
implements ::= implements
import ::= import
instanceof ::= instanceof
int ::= int
interface ::= interface
long ::= long
native ::= native
new ::= new
null ::= null
package ::= package
private ::= private
protected ::= protected
public ::= public
return ::= return
short ::= short
static ::= static
strictfp ::= strictfp
super ::= super
switch ::= switch
synchronized ::= synchronized
this ::= this
throw ::= throw
throws ::= throws
transient ::= transient
true ::= true
try ::= try
void ::= void
volatile ::= volatile
while ::= while
EOF_TOKEN ::= EOF_TOKEN
IDENTIFIER ::= IDENTIFIER
ERROR_TOKEN ::= ERROR_TOKEN
identifier ::= identifier
Type ::= Type
PrimitiveType ::= PrimitiveType
ReferenceType ::= ReferenceType
ClassOrInterfaceType ::= ClassOrInterfaceType
TypeVariable ::= TypeVariable
ClassType ::= ClassType
TypeName ::= TypeName
InterfaceType ::= InterfaceType
ClassName ::= ClassName
TypeParameter ::= TypeParameter
AdditionalBoundList ::= AdditionalBoundList
AdditionalBound ::= AdditionalBound
TypeArguments ::= TypeArguments
ActualTypeArgumentList ::= ActualTypeArgumentList
ActualTypeArgument ::= ActualTypeArgument
PackageName ::= PackageName
ExpressionName ::= ExpressionName
AmbiguousName ::= AmbiguousName
MethodName ::= MethodName
PackageOrTypeName ::= PackageOrTypeName
ImportDeclarations ::= ImportDeclarations
ImportDeclaration ::= ImportDeclaration
TypeDeclarations ::= TypeDeclarations
TypeDeclaration ::= TypeDeclaration
EnumDeclaration ::= EnumDeclaration
ClassBody ::= ClassBody
ClassModifiers ::= ClassModifiers
ClassModifier ::= ClassModifier
Annotation ::= Annotation
TypeParameterList ::= TypeParameterList
InterfaceTypeList ::= InterfaceTypeList
ClassBodyDeclarations ::= ClassBodyDeclarations
ClassBodyDeclaration ::= ClassBodyDeclaration
VariableDeclarators ::= VariableDeclarators
VariableDeclarator ::= VariableDeclarator
VariableDeclaratorId ::= VariableDeclaratorId
VariableInitializer ::= VariableInitializer
Expression ::= Expression
ArrayInitializer ::= ArrayInitializer
FieldModifiers ::= FieldModifiers
FieldModifier ::= FieldModifier
MethodHeader ::= MethodHeader
MethodBody ::= MethodBody
ResultType ::= ResultType
MethodDeclarator ::= MethodDeclarator
LastFormalParameter ::= LastFormalParameter
FormalParameters ::= FormalParameters
FormalParameter ::= FormalParameter
VariableModifiers ::= VariableModifiers
VariableModifier ::= VariableModifier
Annotations ::= Annotations
MethodModifiers ::= MethodModifiers
MethodModifier ::= MethodModifier
ExceptionTypeList ::= ExceptionTypeList
ExceptionType ::= ExceptionType
Block ::= Block
ConstructorDeclarator ::= ConstructorDeclarator
ConstructorBody ::= ConstructorBody
SimpleTypeName ::= SimpleTypeName
ConstructorModifiers ::= ConstructorModifiers
ConstructorModifier ::= ConstructorModifier
Primary ::= Primary
EnumBody ::= EnumBody
EnumConstants ::= EnumConstants
EnumConstant ::= EnumConstant
AnnotationTypeDeclaration ::= AnnotationTypeDeclaration
InterfaceBody ::= InterfaceBody
InterfaceModifiers ::= InterfaceModifiers
InterfaceModifier ::= InterfaceModifier
ExtendsInterfaces ::= ExtendsInterfaces
InterfaceMemberDeclarations ::= InterfaceMemberDeclarations
InterfaceMemberDeclaration ::= InterfaceMemberDeclaration
ConstantModifiers ::= ConstantModifiers
ConstantModifier ::= ConstantModifier
AbstractMethodModifiers ::= AbstractMethodModifiers
AbstractMethodModifier ::= AbstractMethodModifier
AnnotationTypeBody ::= AnnotationTypeBody
AnnotationTypeElementDeclarations ::= AnnotationTypeElementDeclarations
AnnotationTypeElementDeclaration ::= AnnotationTypeElementDeclaration
ElementValue ::= ElementValue
ElementValuePairs ::= ElementValuePairs
ElementValuePair ::= ElementValuePair
SimpleName ::= SimpleName
ConditionalExpression ::= ConditionalExpression
ElementValues ::= ElementValues
VariableInitializers ::= VariableInitializers
BlockStatements ::= BlockStatements
BlockStatement ::= BlockStatement
Statement ::= Statement
LocalVariableDeclaration ::= LocalVariableDeclaration
StatementWithoutTrailingSubstatement ::= StatementWithoutTrailingSubstatement
StatementNoShortIf ::= StatementNoShortIf
StatementExpression ::= StatementExpression
PostIncrementExpression ::= PostIncrementExpression
PostDecrementExpression ::= PostDecrementExpression
MethodInvocation ::= MethodInvocation
ClassInstanceCreationExpression ::= ClassInstanceCreationExpression
SwitchBlock ::= SwitchBlock
SwitchBlockStatementGroups ::= SwitchBlockStatementGroups
SwitchBlockStatementGroup ::= SwitchBlockStatementGroup
SwitchLabels ::= SwitchLabels
SwitchLabel ::= SwitchLabel
ConstantExpression ::= ConstantExpression
StatementExpressionList ::= StatementExpressionList
Catches ::= Catches
Finally ::= Finally
CatchClause ::= CatchClause
PrimaryNoNewArray ::= PrimaryNoNewArray
FieldAccess ::= FieldAccess
ArrayAccess ::= ArrayAccess
ArgumentList ::= ArgumentList
DimExprs ::= DimExprs
Dims ::= Dims
DimExpr ::= DimExpr
PostfixExpression ::= PostfixExpression
UnaryExpression ::= UnaryExpression
UnaryExpressionNotPlusMinus ::= UnaryExpressionNotPlusMinus
MultiplicativeExpression ::= MultiplicativeExpression
AdditiveExpression ::= AdditiveExpression
ShiftExpression ::= ShiftExpression
RelationalExpression ::= RelationalExpression
EqualityExpression ::= EqualityExpression
AndExpression ::= AndExpression
ExclusiveOrExpression ::= ExclusiveOrExpression
InclusiveOrExpression ::= InclusiveOrExpression
ConditionalAndExpression ::= ConditionalAndExpression
ConditionalOrExpression ::= ConditionalOrExpression
AssignmentExpression ::= AssignmentExpression
LeftHandSide ::= LeftHandSide
AssignmentOperator ::= AssignmentOperator
Commaopt ::= 
Ellipsisopt ::= 
CompilationUnit ::= 
ClassBodyDeclarationsopt ::= 
LPGUserAction ::= 
BlockStatementsopt ::= 
NumericType ::= 
IntegralType ::= 
FloatingPointType ::= 
ArrayType ::= 
TypeArgumentsopt ::= 
TypeBoundopt ::= 
TypeBound ::= 
AdditionalBoundListopt ::= 
Wildcard ::= 
WildcardBoundsOpt ::= 
WildcardBounds ::= 
PackageDeclarationopt ::= 
ImportDeclarationsopt ::= 
TypeDeclarationsopt ::= 
PackageDeclaration ::= 
Annotationsopt ::= 
SingleTypeImportDeclaration ::= 
TypeImportOnDemandDeclaration ::= 
SingleStaticImportDeclaration ::= 
StaticImportOnDemandDeclaration ::= 
ClassDeclaration ::= 
InterfaceDeclaration ::= 
NormalClassDeclaration ::= 
ClassModifiersopt ::= 
TypeParametersopt ::= 
Superopt ::= 
Interfacesopt ::= 
TypeParameters ::= 
Super ::= 
Interfaces ::= 
ClassMemberDeclaration ::= 
InstanceInitializer ::= 
StaticInitializer ::= 
ConstructorDeclaration ::= 
FieldDeclaration ::= 
MethodDeclaration ::= 
FieldModifiersopt ::= 
MethodModifiersopt ::= 
Throwsopt ::= 
FormalParameterListopt ::= 
FormalParameterList ::= 
VariableModifiersopt ::= 
Throws ::= 
ConstructorModifiersopt ::= 
ExplicitConstructorInvocationopt ::= 
ExplicitConstructorInvocation ::= 
ArgumentListopt ::= 
EnumConstantsopt ::= 
EnumBodyDeclarationsopt ::= 
Argumentsopt ::= 
ClassBodyopt ::= 
Arguments ::= 
EnumBodyDeclarations ::= 
NormalInterfaceDeclaration ::= 
InterfaceModifiersopt ::= 
ExtendsInterfacesopt ::= 
InterfaceMemberDeclarationsopt ::= 
ConstantDeclaration ::= 
AbstractMethodDeclaration ::= 
ConstantModifiersopt ::= 
AbstractMethodModifiersopt ::= 
AnnotationTypeElementDeclarationsopt ::= 
DefaultValueopt ::= 
DefaultValue ::= 
NormalAnnotation ::= 
MarkerAnnotation ::= 
SingleElementAnnotation ::= 
ElementValuePairsopt ::= 
ElementValueArrayInitializer ::= 
ElementValuesopt ::= 
VariableInitializersopt ::= 
LocalVariableDeclarationStatement ::= 
LabeledStatement ::= 
IfThenStatement ::= 
IfThenElseStatement ::= 
WhileStatement ::= 
ForStatement ::= 
EmptyStatement ::= 
ExpressionStatement ::= 
AssertStatement ::= 
SwitchStatement ::= 
DoStatement ::= 
BreakStatement ::= 
ContinueStatement ::= 
ReturnStatement ::= 
SynchronizedStatement ::= 
ThrowStatement ::= 
TryStatement ::= 
LabeledStatementNoShortIf ::= 
IfThenElseStatementNoShortIf ::= 
WhileStatementNoShortIf ::= 
ForStatementNoShortIf ::= 
Assignment ::= 
PreIncrementExpression ::= 
PreDecrementExpression ::= 
SwitchBlockStatementGroupsopt ::= 
SwitchLabelsopt ::= 
BasicForStatement ::= 
EnhancedForStatement ::= 
ForInitopt ::= 
Expressionopt ::= 
ForUpdateopt ::= 
ForInit ::= 
ForUpdate ::= 
identifieropt ::= 
Catchesopt ::= 
ArrayCreationExpression ::= 
Literal ::= 
BooleanLiteral ::= 
Dimsopt ::= 
CastExpression ::= 

 The LALR Parser Generator              2.1.01 (Aug 13 2021)


Scopes:

MethodInvocation ::= ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt  .RPAREN 
ClassInstanceCreationExpression ::= Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt  .RPAREN ClassBodyopt 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt  .RPAREN StatementNoShortIf 
BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                      SEMICOLON ForUpdateopt  .RPAREN Statement 
MethodInvocation ::= TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt  .RPAREN 
MethodInvocation ::= super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt  .RPAREN 
MethodInvocation ::= Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt  .RPAREN 
AnnotationTypeElementDeclaration ::= AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN 
                                     DefaultValueopt  .SEMICOLON 
ClassInstanceCreationExpression ::= new TypeArgumentsopt 
                                    ClassOrInterfaceType TypeArgumentsopt 
                                    LPAREN ArgumentListopt  .RPAREN 
                                    ClassBodyopt 
ExplicitConstructorInvocation ::= Primary DOT TypeArgumentsopt super LPAREN 
                                  ArgumentListopt  .RPAREN SEMICOLON 
AbstractMethodDeclaration ::= AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt  .SEMICOLON 
EnhancedForStatement ::= for LPAREN FormalParameter COLON Expression  .RPAREN 
                         Statement 
DoStatement ::= do Statement while LPAREN Expression  .RPAREN SEMICOLON 
IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN 
                                 StatementNoShortIf  .else StatementNoShortIf 
IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf  .else 
                        Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .SEMICOLON 
                      ForUpdateopt RPAREN Statement 
AssertStatement ::= assert Expression COLON Expression  .SEMICOLON 
SingleElementAnnotation ::= AT TypeName LPAREN ElementValue  .RPAREN 
NormalAnnotation ::= AT TypeName LPAREN ElementValuePairsopt  .RPAREN 
EnumBody ::= LBRACE EnumConstantsopt Commaopt EnumBodyDeclarationsopt  .RBRACE 
ConstructorDeclarator ::= TypeParametersopt SimpleTypeName LPAREN 
                          FormalParameterListopt  .RPAREN 
ExplicitConstructorInvocation ::= TypeArgumentsopt super LPAREN 
                                  ArgumentListopt  .RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= TypeArgumentsopt this LPAREN 
                                  ArgumentListopt  .RPAREN SEMICOLON 
ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression  .RBRACKET 
ArrayAccess ::= ExpressionName LBRACKET Expression  .RBRACKET 
MethodInvocation ::= MethodName LPAREN ArgumentListopt  .RPAREN 
TryStatement ::= try Block Catchesopt  .Finally 
SwitchBlock ::= LBRACE SwitchBlockStatementGroupsopt SwitchLabelsopt  .RBRACE 
ArrayInitializer ::= LBRACE VariableInitializersopt Commaopt  .RBRACE 
ElementValueArrayInitializer ::= LBRACE ElementValuesopt Commaopt  .RBRACE 
ConstructorBody ::= LBRACE ExplicitConstructorInvocationopt 
                    BlockStatementsopt  .RBRACE 
ConstructorDeclaration ::= ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt  .ConstructorBody 
MethodDeclarator ::= identifier LPAREN FormalParameterListopt  .RPAREN 
FieldDeclaration ::= FieldModifiersopt Type VariableDeclarators  .SEMICOLON 
ConditionalExpression ::= ConditionalOrExpression QUESTION Expression  .COLON 
                          ConditionalExpression 
CatchClause ::= catch LPAREN FormalParameter  .RPAREN Block 
SynchronizedStatement ::= synchronized LPAREN Expression  .RPAREN Block 
WhileStatementNoShortIf ::= while LPAREN Expression  .RPAREN StatementNoShortIf 
WhileStatement ::= while LPAREN Expression  .RPAREN Statement 
SwitchStatement ::= switch LPAREN Expression  .RPAREN SwitchBlock 
IfThenStatement ::= if LPAREN Expression  .RPAREN Statement 
EnhancedForStatement ::= for LPAREN FormalParameter  .COLON Expression RPAREN 
                         Statement 
IfThenElseStatementNoShortIf ::= if LPAREN Expression  .RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
IfThenElseStatement ::= if LPAREN Expression  .RPAREN StatementNoShortIf else 
                        Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
BasicForStatement ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
DimExpr ::= LBRACKET Expression  .RBRACKET 
PrimaryNoNewArray ::= LPAREN Expression  .RPAREN 
TryStatement ::= try Block  .Catches 
ThrowStatement ::= throw Expression  .SEMICOLON 
ReturnStatement ::= return Expressionopt  .SEMICOLON 
SwitchLabel ::= case EnumConstant  .COLON 
SwitchLabel ::= case ConstantExpression  .COLON 
AssertStatement ::= assert Expression  .SEMICOLON 
Block ::= LBRACE BlockStatementsopt  .RBRACE 
AnnotationTypeBody ::= LBRACE AnnotationTypeElementDeclarationsopt  .RBRACE 
InterfaceBody ::= LBRACE InterfaceMemberDeclarationsopt  .RBRACE 
Arguments ::= LPAREN ArgumentListopt  .RPAREN 
ClassBody ::= LBRACE ClassBodyDeclarationsopt  .RBRACE 
TypeArguments ::= LESS ActualTypeArgumentList  .GREATER 
AssertStatement ::= assert Expression  .COLON Expression SEMICOLON 
MethodHeader ::= MethodModifiersopt TypeParametersopt  .ResultType 
                 MethodDeclarator Throwsopt 
AbstractMethodDeclaration ::= AbstractMethodModifiersopt TypeParametersopt  .
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
DoStatement ::= do Statement  .while LPAREN Expression RPAREN SEMICOLON 
SwitchBlockStatementGroup ::= SwitchLabels  .BlockStatements 
ExpressionStatement ::= StatementExpression  .SEMICOLON 
LocalVariableDeclarationStatement ::= LocalVariableDeclaration  .SEMICOLON 
MethodDeclaration ::= MethodHeader  .MethodBody 
Assignment ::= LeftHandSide  .AssignmentOperator AssignmentExpression 
LocalVariableDeclaration ::= VariableModifiersopt  .Type VariableDeclarators 
ConstantDeclaration ::= ConstantModifiersopt  .Type VariableDeclarators 
FormalParameter ::= VariableModifiersopt  .Type VariableDeclaratorId 
FormalParameterList ::= FormalParameters  .COMMA LastFormalParameter 
EnumConstant ::= Annotationsopt  .identifier Argumentsopt ClassBodyopt 
ConstructorDeclaration ::= ConstructorModifiersopt  .ConstructorDeclarator 
                           Throwsopt ConstructorBody 
LastFormalParameter ::= VariableModifiersopt  .Type Ellipsisopt 
                        VariableDeclaratorId 
FieldDeclaration ::= FieldModifiersopt  .Type VariableDeclarators SEMICOLON 
AnnotationTypeDeclaration ::= InterfaceModifiersopt  .AT interface identifier 
                              AnnotationTypeBody 
EnumDeclaration ::= ClassModifiersopt  .enum identifier Interfacesopt EnumBody 
NormalInterfaceDeclaration ::= InterfaceModifiersopt  .interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
AnnotationTypeElementDeclaration ::= AbstractMethodModifiersopt  .Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
NormalClassDeclaration ::= ClassModifiersopt  .class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ExplicitConstructorInvocation ::= Primary  .DOT TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 

 The LALR Parser Generator              2.1.01 (Aug 13 2021)


---------------------------------- CONFLICTS ----------------------------------



STATE 1 ------------------------------------------------------------------------
( )

'%accept' ::= .CompilationUnit 

CompilationUnit ::= .ClassBodyDeclarationsoptMarker ClassBodyDeclarationsopt 
CompilationUnit ::= .LPGUserActionMarker LPGUserAction 
CompilationUnit ::= .PackageDeclarationopt ImportDeclarationsopt 
                    TypeDeclarationsopt 
PackageDeclaration ::= .Annotationsopt package PackageName SEMICOLON 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Annotationsopt ::= . (524)
Annotationsopt ::= .Annotations 
PackageDeclarationopt ::= . (530)
PackageDeclarationopt ::= .PackageDeclaration 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1076:27:1076:36:33859:33868: Warning: Shift/reduce conflict in state 1 on "AT" with rule 530

CompilationUnit ::= .PackageDeclarationopt ImportDeclarationsopt 
                    TypeDeclarationsopt 
PackageDeclarationopt ::= . (530)




STATE 4 ------------------------------------------------------------------------
( 1 )

CompilationUnit ::= LPGUserActionMarker  .LPGUserAction 

identifier ::= .IDENTIFIER 
LPGUserAction ::= .BlockStatementsopt 
LPGUserAction ::= .BeginAction BlockStatementsopt EndAction 
LPGUserAction ::= .BeginJava BlockStatementsopt EndJava 
LPGUserAction ::= .NoAction 
LPGUserAction ::= .NullAction 
LPGUserAction ::= .BadAction 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 4 on "IDENTIFIER" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 4 on "boolean" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 4 on "char" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 4 on "long" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 4 on "int" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 4 on "short" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 4 on "byte" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 4 on "double" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 4 on "float" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)




STATE 5 ------------------------------------------------------------------------
( 1 )

CompilationUnit ::= ClassBodyDeclarationsoptMarker  .ClassBodyDeclarationsopt 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
ClassBodyDeclarations ::= .ClassBodyDeclaration 
ClassBodyDeclarations ::= .ClassBodyDeclarations ClassBodyDeclaration 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .InstanceInitializer 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiers ::= .FieldModifier 
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifier ::= .Annotation 
FieldModifier ::= .public 
FieldModifier ::= .protected 
FieldModifier ::= .private 
FieldModifier ::= .static 
FieldModifier ::= .final 
FieldModifier ::= .transient 
FieldModifier ::= .volatile 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiers ::= .MethodModifier 
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifier ::= .Annotations 
MethodModifier ::= .public 
MethodModifier ::= .protected 
MethodModifier ::= .private 
MethodModifier ::= .abstract 
MethodModifier ::= .static 
MethodModifier ::= .final 
MethodModifier ::= .synchronized 
MethodModifier ::= .native 
MethodModifier ::= .strictfp 
InstanceInitializer ::= .Block 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifier ::= .Annotations 
ConstructorModifier ::= .public 
ConstructorModifier ::= .protected 
ConstructorModifier ::= .private 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ConstructorModifiersopt ::= . (502)
ConstructorModifiersopt ::= .ConstructorModifiers 
MethodModifiersopt ::= . (510)
MethodModifiersopt ::= .MethodModifiers 
FieldModifiersopt ::= . (512)
FieldModifiersopt ::= .FieldModifiers 
ClassBodyDeclarationsopt ::= . (514)
ClassBodyDeclarationsopt ::= .ClassBodyDeclarations 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 5 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "short" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "long" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "int" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "float" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "double" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "char" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "byte" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "boolean" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "IDENTIFIER" between rule 510 and rule 502 starting at line 1034, column 29

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= . (502)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "IDENTIFIER" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 5 on "LESS" between rule 510 and rule 502 starting at line 1034, column 29

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= . (502)




STATE 9 ------------------------------------------------------------------------
( 3 )

CompilationUnit ::= PackageDeclarationopt ImportDeclarationsopt  .
                    TypeDeclarationsopt 

TypeDeclarations ::= .TypeDeclaration 
TypeDeclarations ::= .TypeDeclarations TypeDeclaration 
TypeDeclaration ::= .ClassDeclaration 
TypeDeclaration ::= .InterfaceDeclaration 
TypeDeclaration ::= .SEMICOLON 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 
TypeDeclarationsopt ::= . (526)
TypeDeclarationsopt ::= .TypeDeclarations 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 9 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)




STATE 12 -----------------------------------------------------------------------
( 4 )

LPGUserAction ::= BeginJava  .BlockStatementsopt EndJava 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 12 on "double" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 12 on "float" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 12 on "char" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 12 on "long" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 12 on "int" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 12 on "short" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 12 on "byte" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 12 on "boolean" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 12 on "IDENTIFIER" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)




STATE 13 -----------------------------------------------------------------------
( 4 )

LPGUserAction ::= BeginAction  .BlockStatementsopt EndAction 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 13 on "double" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 13 on "float" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 13 on "char" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 13 on "long" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 13 on "int" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 13 on "short" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 13 on "byte" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 13 on "boolean" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 13 on "IDENTIFIER" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)




STATE 15 -----------------------------------------------------------------------
( 4 12 13 16 25 59 100 294 297 343 353 368 384 394 431 )

VariableModifier ::= Annotations . (139)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:422:24:422:36:11723:11735: Warning: Shift/reduce conflict in state 15 on "AT" with rule 139

VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifiers ::= .VariableModifier 
VariableModifier ::= Annotations . (139)




STATE 18 -----------------------------------------------------------------------
( 4 12 13 25 59 343 384 431 )

ClassModifier ::= final . (85)
VariableModifier ::= final . (138)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 18 on "final" between rule 85 and rule 138 starting at line 421, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifiers ::= .VariableModifier 
VariableModifier ::= final . (138)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 18 on "AT" between rule 85 and rule 138 starting at line 421, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifiers ::= .VariableModifier 
VariableModifier ::= final . (138)




STATE 19 -----------------------------------------------------------------------
( 4 12 13 25 59 343 384 431 )

ClassModifier ::= Annotation . (79)
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 19 on "final" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifiers ::= .VariableModifier 
VariableModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 19 on "AT" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifiers ::= .VariableModifier 
VariableModifier ::= .Annotations 
Annotations ::= Annotation . (229)




STATE 25 -----------------------------------------------------------------------
( 4 5 12 13 25 52 58 59 64 70 78 133 252 253 292 293 343 365 367 371 384 387 
  417 431 443 447 449 450 470 479 )

Block ::= LBRACE  .BlockStatementsopt RBRACE 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 25 on "double" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 25 on "float" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 25 on "char" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 25 on "long" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 25 on "int" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 25 on "short" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 25 on "byte" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 25 on "boolean" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 25 on "IDENTIFIER" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)




STATE 35 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

ClassType ::= TypeName  .TypeArgumentsopt 
TypeName ::= TypeName  .DOT identifier 
ClassName ::= TypeName . (31)
MethodInvocation ::= TypeName  .DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 

TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1088:22:1088:31:34166:34175: Warning: Shift/reduce conflict in state 35 on "DOT" with rule 538

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= TypeName  .TypeArgumentsopt 
TypeArgumentsopt ::= . (538)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:234:15:234:26:6087:6098: Warning: Shift/reduce conflict in state 35 on "DOT" with rule 31

PrimaryNoNewArray ::= .ClassName DOT this 
ClassName ::= TypeName . (31)




STATE 36 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 343 365 367 384 431 447 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)
LabeledStatement ::= identifier  .COLON Statement 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 36 on "LBRACKET" between rule 29 and rule 49 starting at line 275, column 20

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ExpressionName ::= identifier . (49)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 36 on "LBRACKET" between rule 29 and rule 32 starting at line 236, column 18

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 36 on "DOT" between rule 29 and rule 55 starting at line 284, column 19

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ExpressionName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= identifier . (55)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 36 on "DOT" between rule 29 and rule 32 starting at line 236, column 18

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)




STATE 37 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

ClassInstanceCreationExpression ::= new  .TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ArrayCreationExpression ::= new  .PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= new  .ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= new  .PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= new  .ClassOrInterfaceType Dims ArrayInitializer 

identifier ::= .IDENTIFIER 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1088:22:1088:31:34166:34175: Warning: Shift/reduce conflict in state 37 on "IDENTIFIER" with rule 538

ClassInstanceCreationExpression ::= new  .TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
TypeArgumentsopt ::= . (538)




STATE 39 -----------------------------------------------------------------------
( 4 12 13 25 28 50 52 55 57 59 100 101 102 104 110 128 133 137 139 142 147 193 
  208 216 244 248 249 250 252 253 278 284 291 330 331 336 337 343 365 366 367 
  368 369 370 371 377 383 384 423 425 431 434 435 445 447 448 449 450 464 469 
  470 479 )

PrimaryNoNewArray ::= ArrayAccess . (343)
LeftHandSide ::= ArrayAccess . (433)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:788:25:788:37:24278:24290: Warning: Reduce/reduce conflict in state 39 on "GREATER" between rule 343 and rule 433 starting at line 931, column 20

ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .AdditiveExpression 
AdditiveExpression ::= .MultiplicativeExpression 
MultiplicativeExpression ::= .UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
PostfixExpression ::= .Primary 
Primary ::= .PrimaryNoNewArray 
PrimaryNoNewArray ::= ArrayAccess . (343)
------------------------------------------------------------------------------
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= ArrayAccess . (433)




STATE 40 -----------------------------------------------------------------------
( 4 12 13 25 28 50 52 55 57 59 100 101 102 104 110 128 133 137 139 142 147 193 
  208 216 244 248 249 250 252 253 278 284 291 330 331 336 337 343 365 366 367 
  368 369 370 371 377 383 384 423 425 431 434 435 445 447 448 449 450 464 469 
  470 479 )

PrimaryNoNewArray ::= FieldAccess . (341)
LeftHandSide ::= FieldAccess . (432)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:786:25:786:37:24197:24209: Warning: Reduce/reduce conflict in state 40 on "GREATER" between rule 341 and rule 432 starting at line 930, column 20

ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .AdditiveExpression 
AdditiveExpression ::= .MultiplicativeExpression 
MultiplicativeExpression ::= .UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
PostfixExpression ::= .Primary 
Primary ::= .PrimaryNoNewArray 
PrimaryNoNewArray ::= FieldAccess . (341)
------------------------------------------------------------------------------
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= FieldAccess . (432)




STATE 44 -----------------------------------------------------------------------
( 4 12 13 25 28 50 52 55 57 59 100 101 102 104 110 128 133 137 139 142 147 193 
  208 216 244 248 249 250 252 253 278 284 291 330 331 336 337 343 365 366 367 
  368 369 370 371 377 383 384 423 425 431 434 435 445 447 448 449 450 464 469 
  470 479 )

ArrayAccess ::= ExpressionName  .LBRACKET Expression RBRACKET 
PostfixExpression ::= ExpressionName . (378)
LeftHandSide ::= ExpressionName . (431)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:855:25:855:40:26870:26885: Warning: Reduce/reduce conflict in state 44 on "GREATER" between rule 378 and rule 431 starting at line 929, column 18

ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .AdditiveExpression 
AdditiveExpression ::= .MultiplicativeExpression 
MultiplicativeExpression ::= .UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
PostfixExpression ::= ExpressionName . (378)
------------------------------------------------------------------------------
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= ExpressionName . (431)




STATE 59 -----------------------------------------------------------------------
( 4 12 13 25 343 )

BlockStatements ::= BlockStatements  .BlockStatement 
BlockStatementsopt ::= BlockStatements . (499)

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 59 on "double" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 59 on "float" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 59 on "char" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 59 on "long" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 59 on "int" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 59 on "short" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 59 on "byte" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 59 on "boolean" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 59 on "IDENTIFIER" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)




STATE 65 -----------------------------------------------------------------------
( 5 78 417 443 )

MethodModifier ::= Annotations . (143)
ConstructorModifier ::= Annotations . (167)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:435:20:435:34:12087:12101: Warning: Shift/reduce conflict in state 65 on "AT" with rule 143

MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= Annotations . (143)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:470:25:470:39:13129:13143: Warning: Shift/reduce conflict in state 65 on "AT" with rule 167

ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= Annotations . (167)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:435:20:435:34:12087:12101: Warning: Reduce/reduce conflict in state 65 on "IDENTIFIER" between rule 143 and rule 167 starting at line 470, column 25

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= Annotations . (143)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= .ConstructorModifiers 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= Annotations . (167)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:435:20:435:34:12087:12101: Warning: Reduce/reduce conflict in state 65 on "public" between rule 143 and rule 167 starting at line 470, column 25

MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= Annotations . (143)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= Annotations . (167)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:435:20:435:34:12087:12101: Warning: Reduce/reduce conflict in state 65 on "protected" between rule 143 and rule 167 starting at line 470, column 25

MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= Annotations . (143)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= Annotations . (167)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:435:20:435:34:12087:12101: Warning: Reduce/reduce conflict in state 65 on "private" between rule 143 and rule 167 starting at line 470, column 25

MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= Annotations . (143)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= Annotations . (167)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:435:20:435:34:12087:12101: Warning: Reduce/reduce conflict in state 65 on "LESS" between rule 143 and rule 167 starting at line 470, column 25

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= Annotations . (143)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= .ConstructorModifiers 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= Annotations . (167)




STATE 68 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= final . (85)
FieldModifier ::= final . (122)
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:395:21:395:27:10850:10856: Warning: Reduce/reduce conflict in state 68 on "IDENTIFIER" between rule 122 and rule 149 starting at line 441, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "strictfp" between rule 85 and rule 149 starting at line 441, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "static" between rule 85 and rule 149 starting at line 441, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "static" between rule 85 and rule 122 starting at line 395, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:395:21:395:27:10850:10856: Warning: Reduce/reduce conflict in state 68 on "short" between rule 122 and rule 149 starting at line 441, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "public" between rule 85 and rule 149 starting at line 441, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "public" between rule 85 and rule 122 starting at line 395, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "protected" between rule 85 and rule 149 starting at line 441, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "protected" between rule 85 and rule 122 starting at line 395, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "private" between rule 85 and rule 149 starting at line 441, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "private" between rule 85 and rule 122 starting at line 395, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:395:21:395:27:10850:10856: Warning: Reduce/reduce conflict in state 68 on "long" between rule 122 and rule 149 starting at line 441, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:395:21:395:27:10850:10856: Warning: Reduce/reduce conflict in state 68 on "int" between rule 122 and rule 149 starting at line 441, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:395:21:395:27:10850:10856: Warning: Reduce/reduce conflict in state 68 on "float" between rule 122 and rule 149 starting at line 441, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "final" between rule 85 and rule 149 starting at line 441, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "final" between rule 85 and rule 122 starting at line 395, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:395:21:395:27:10850:10856: Warning: Reduce/reduce conflict in state 68 on "double" between rule 122 and rule 149 starting at line 441, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:395:21:395:27:10850:10856: Warning: Reduce/reduce conflict in state 68 on "char" between rule 122 and rule 149 starting at line 441, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:395:21:395:27:10850:10856: Warning: Reduce/reduce conflict in state 68 on "byte" between rule 122 and rule 149 starting at line 441, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:395:21:395:27:10850:10856: Warning: Reduce/reduce conflict in state 68 on "boolean" between rule 122 and rule 149 starting at line 441, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "abstract" between rule 85 and rule 149 starting at line 441, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "AT" between rule 85 and rule 149 starting at line 441, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= final . (149)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 68 on "AT" between rule 85 and rule 122 starting at line 395, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= final . (122)




STATE 69 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= strictfp . (86)
MethodModifier ::= strictfp . (152)
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "final" between rule 86 and rule 152 starting at line 444, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= strictfp . (152)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "strictfp" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "strictfp" between rule 86 and rule 152 starting at line 444, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= strictfp . (152)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "static" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "static" between rule 86 and rule 152 starting at line 444, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= strictfp . (152)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "public" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "public" between rule 86 and rule 152 starting at line 444, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= strictfp . (152)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "protected" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "protected" between rule 86 and rule 152 starting at line 444, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= strictfp . (152)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "private" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "private" between rule 86 and rule 152 starting at line 444, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= strictfp . (152)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "abstract" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "abstract" between rule 86 and rule 152 starting at line 444, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= strictfp . (152)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "AT" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 69 on "AT" between rule 86 and rule 152 starting at line 444, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= strictfp . (152)




STATE 70 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= static . (84)
FieldModifier ::= static . (121)
MethodModifier ::= static . (148)
StaticInitializer ::= static  .Block 
InterfaceModifier ::= static . (192)

Block ::= .LBRACE BlockStatementsopt RBRACE 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:394:21:394:28:10821:10828: Warning: Reduce/reduce conflict in state 70 on "IDENTIFIER" between rule 121 and rule 148 starting at line 440, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:394:21:394:28:10821:10828: Warning: Reduce/reduce conflict in state 70 on "short" between rule 121 and rule 148 starting at line 440, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:394:21:394:28:10821:10828: Warning: Reduce/reduce conflict in state 70 on "long" between rule 121 and rule 148 starting at line 440, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:394:21:394:28:10821:10828: Warning: Reduce/reduce conflict in state 70 on "int" between rule 121 and rule 148 starting at line 440, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:394:21:394:28:10821:10828: Warning: Reduce/reduce conflict in state 70 on "float" between rule 121 and rule 148 starting at line 440, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "final" between rule 84 and rule 148 starting at line 440, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "final" between rule 84 and rule 121 starting at line 394, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:394:21:394:28:10821:10828: Warning: Reduce/reduce conflict in state 70 on "double" between rule 121 and rule 148 starting at line 440, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:394:21:394:28:10821:10828: Warning: Reduce/reduce conflict in state 70 on "char" between rule 121 and rule 148 starting at line 440, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:394:21:394:28:10821:10828: Warning: Reduce/reduce conflict in state 70 on "byte" between rule 121 and rule 148 starting at line 440, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:394:21:394:28:10821:10828: Warning: Reduce/reduce conflict in state 70 on "boolean" between rule 121 and rule 148 starting at line 440, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "strictfp" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "strictfp" between rule 84 and rule 148 starting at line 440, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "static" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "static" between rule 84 and rule 148 starting at line 440, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "static" between rule 84 and rule 121 starting at line 394, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "public" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "public" between rule 84 and rule 148 starting at line 440, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "public" between rule 84 and rule 121 starting at line 394, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "protected" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "protected" between rule 84 and rule 148 starting at line 440, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "protected" between rule 84 and rule 121 starting at line 394, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "private" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "private" between rule 84 and rule 148 starting at line 440, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "private" between rule 84 and rule 121 starting at line 394, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "abstract" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "abstract" between rule 84 and rule 148 starting at line 440, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "AT" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "AT" between rule 84 and rule 148 starting at line 440, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= static . (148)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 70 on "AT" between rule 84 and rule 121 starting at line 394, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= static . (121)




STATE 71 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= abstract . (83)
MethodModifier ::= abstract . (147)
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "final" between rule 83 and rule 147 starting at line 439, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= abstract . (147)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "strictfp" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "strictfp" between rule 83 and rule 147 starting at line 439, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= abstract . (147)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "static" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "static" between rule 83 and rule 147 starting at line 439, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= abstract . (147)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "public" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "public" between rule 83 and rule 147 starting at line 439, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= abstract . (147)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "protected" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "protected" between rule 83 and rule 147 starting at line 439, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= abstract . (147)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "private" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "private" between rule 83 and rule 147 starting at line 439, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= abstract . (147)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "abstract" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "abstract" between rule 83 and rule 147 starting at line 439, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= abstract . (147)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "AT" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 71 on "AT" between rule 83 and rule 147 starting at line 439, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= abstract . (147)




STATE 72 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= private . (82)
FieldModifier ::= private . (120)
MethodModifier ::= private . (146)
ConstructorModifier ::= private . (170)
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "short" between rule 120 and rule 146 starting at line 438, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "long" between rule 120 and rule 146 starting at line 438, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "int" between rule 120 and rule 146 starting at line 438, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "float" between rule 120 and rule 146 starting at line 438, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "final" between rule 82 and rule 146 starting at line 438, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "final" between rule 82 and rule 120 starting at line 393, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "double" between rule 120 and rule 146 starting at line 438, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "char" between rule 120 and rule 146 starting at line 438, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "byte" between rule 120 and rule 146 starting at line 438, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "boolean" between rule 120 and rule 146 starting at line 438, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "IDENTIFIER" between rule 120 and rule 170 starting at line 473, column 27

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= .ConstructorModifiers 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= private . (170)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:393:21:393:29:10791:10799: Warning: Reduce/reduce conflict in state 72 on "IDENTIFIER" between rule 120 and rule 146 starting at line 438, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:438:22:438:30:12187:12195: Warning: Reduce/reduce conflict in state 72 on "LESS" between rule 146 and rule 170 starting at line 473, column 27

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= .ConstructorModifiers 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= private . (170)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "strictfp" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "strictfp" between rule 82 and rule 146 starting at line 438, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "static" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "static" between rule 82 and rule 146 starting at line 438, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "static" between rule 82 and rule 120 starting at line 393, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "public" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "public" between rule 82 and rule 170 starting at line 473, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= private . (170)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "public" between rule 82 and rule 146 starting at line 438, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "public" between rule 82 and rule 120 starting at line 393, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "protected" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "protected" between rule 82 and rule 170 starting at line 473, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= private . (170)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "protected" between rule 82 and rule 146 starting at line 438, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "protected" between rule 82 and rule 120 starting at line 393, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "private" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "private" between rule 82 and rule 170 starting at line 473, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= private . (170)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "private" between rule 82 and rule 146 starting at line 438, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "private" between rule 82 and rule 120 starting at line 393, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "abstract" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "abstract" between rule 82 and rule 146 starting at line 438, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "AT" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "AT" between rule 82 and rule 170 starting at line 473, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= private . (170)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "AT" between rule 82 and rule 146 starting at line 438, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= private . (146)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 72 on "AT" between rule 82 and rule 120 starting at line 393, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= private . (120)




STATE 73 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= protected . (81)
FieldModifier ::= protected . (119)
MethodModifier ::= protected . (145)
ConstructorModifier ::= protected . (169)
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "short" between rule 119 and rule 145 starting at line 437, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "long" between rule 119 and rule 145 starting at line 437, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "int" between rule 119 and rule 145 starting at line 437, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "float" between rule 119 and rule 145 starting at line 437, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "final" between rule 81 and rule 145 starting at line 437, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "final" between rule 81 and rule 119 starting at line 392, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "double" between rule 119 and rule 145 starting at line 437, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "char" between rule 119 and rule 145 starting at line 437, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "byte" between rule 119 and rule 145 starting at line 437, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "boolean" between rule 119 and rule 145 starting at line 437, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "IDENTIFIER" between rule 119 and rule 169 starting at line 472, column 27

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= .ConstructorModifiers 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= protected . (169)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:392:21:392:31:10759:10769: Warning: Reduce/reduce conflict in state 73 on "IDENTIFIER" between rule 119 and rule 145 starting at line 437, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:437:22:437:32:12154:12164: Warning: Reduce/reduce conflict in state 73 on "LESS" between rule 145 and rule 169 starting at line 472, column 27

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= .ConstructorModifiers 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= protected . (169)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "strictfp" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "strictfp" between rule 81 and rule 145 starting at line 437, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "static" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "static" between rule 81 and rule 145 starting at line 437, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "static" between rule 81 and rule 119 starting at line 392, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "public" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "public" between rule 81 and rule 169 starting at line 472, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= protected . (169)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "public" between rule 81 and rule 145 starting at line 437, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "public" between rule 81 and rule 119 starting at line 392, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "protected" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "protected" between rule 81 and rule 169 starting at line 472, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= protected . (169)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "protected" between rule 81 and rule 145 starting at line 437, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "protected" between rule 81 and rule 119 starting at line 392, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "private" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "private" between rule 81 and rule 169 starting at line 472, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= protected . (169)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "private" between rule 81 and rule 145 starting at line 437, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "private" between rule 81 and rule 119 starting at line 392, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "abstract" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "abstract" between rule 81 and rule 145 starting at line 437, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "AT" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "AT" between rule 81 and rule 169 starting at line 472, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= protected . (169)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "AT" between rule 81 and rule 145 starting at line 437, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= protected . (145)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 73 on "AT" between rule 81 and rule 119 starting at line 392, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= protected . (119)




STATE 74 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= public . (80)
FieldModifier ::= public . (118)
MethodModifier ::= public . (144)
ConstructorModifier ::= public . (168)
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "short" between rule 118 and rule 144 starting at line 436, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "long" between rule 118 and rule 144 starting at line 436, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "int" between rule 118 and rule 144 starting at line 436, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "float" between rule 118 and rule 144 starting at line 436, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "final" between rule 80 and rule 144 starting at line 436, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "final" between rule 80 and rule 118 starting at line 391, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "double" between rule 118 and rule 144 starting at line 436, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "char" between rule 118 and rule 144 starting at line 436, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "byte" between rule 118 and rule 144 starting at line 436, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "boolean" between rule 118 and rule 144 starting at line 436, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "IDENTIFIER" between rule 118 and rule 168 starting at line 471, column 27

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= .ConstructorModifiers 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= public . (168)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:391:21:391:28:10730:10737: Warning: Reduce/reduce conflict in state 74 on "IDENTIFIER" between rule 118 and rule 144 starting at line 436, column 22

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:436:22:436:29:12124:12131: Warning: Reduce/reduce conflict in state 74 on "LESS" between rule 144 and rule 168 starting at line 471, column 27

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= .ConstructorModifiers 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= public . (168)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "strictfp" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "strictfp" between rule 80 and rule 144 starting at line 436, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "static" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "static" between rule 80 and rule 144 starting at line 436, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "static" between rule 80 and rule 118 starting at line 391, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "public" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "public" between rule 80 and rule 168 starting at line 471, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= public . (168)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "public" between rule 80 and rule 144 starting at line 436, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "public" between rule 80 and rule 118 starting at line 391, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "protected" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "protected" between rule 80 and rule 168 starting at line 471, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= public . (168)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "protected" between rule 80 and rule 144 starting at line 436, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "protected" between rule 80 and rule 118 starting at line 391, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "private" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "private" between rule 80 and rule 168 starting at line 471, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= public . (168)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "private" between rule 80 and rule 144 starting at line 436, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "private" between rule 80 and rule 118 starting at line 391, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "abstract" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "abstract" between rule 80 and rule 144 starting at line 436, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "AT" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "AT" between rule 80 and rule 168 starting at line 471, column 27

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifier ::= public . (168)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "AT" between rule 80 and rule 144 starting at line 436, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= public . (144)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 74 on "AT" between rule 80 and rule 118 starting at line 391, column 21

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= public . (118)




STATE 75 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= Annotation . (79)
FieldModifier ::= Annotation . (117)
InterfaceModifier ::= Annotation . (187)
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:390:19:390:32:10695:10708: Warning: Reduce/reduce conflict in state 75 on "IDENTIFIER" between rule 117 and rule 229 starting at line 567, column 17

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "strictfp" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "strictfp" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "static" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "static" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "static" between rule 79 and rule 117 starting at line 390, column 19

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:390:19:390:32:10695:10708: Warning: Reduce/reduce conflict in state 75 on "short" between rule 117 and rule 229 starting at line 567, column 17

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "public" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "public" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "public" between rule 79 and rule 117 starting at line 390, column 19

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "protected" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "protected" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "protected" between rule 79 and rule 117 starting at line 390, column 19

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "private" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "private" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "private" between rule 79 and rule 117 starting at line 390, column 19

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:390:19:390:32:10695:10708: Warning: Reduce/reduce conflict in state 75 on "long" between rule 117 and rule 229 starting at line 567, column 17

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:390:19:390:32:10695:10708: Warning: Reduce/reduce conflict in state 75 on "int" between rule 117 and rule 229 starting at line 567, column 17

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:390:19:390:32:10695:10708: Warning: Reduce/reduce conflict in state 75 on "float" between rule 117 and rule 229 starting at line 567, column 17

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "final" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "final" between rule 79 and rule 117 starting at line 390, column 19

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:390:19:390:32:10695:10708: Warning: Reduce/reduce conflict in state 75 on "double" between rule 117 and rule 229 starting at line 567, column 17

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:390:19:390:32:10695:10708: Warning: Reduce/reduce conflict in state 75 on "char" between rule 117 and rule 229 starting at line 567, column 17

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:390:19:390:32:10695:10708: Warning: Reduce/reduce conflict in state 75 on "byte" between rule 117 and rule 229 starting at line 567, column 17

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:390:19:390:32:10695:10708: Warning: Reduce/reduce conflict in state 75 on "boolean" between rule 117 and rule 229 starting at line 567, column 17

FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= .FieldModifiers 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)
------------------------------------------------------------------------------
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= .MethodModifiers 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "abstract" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "abstract" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "AT" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= .MethodModifier 
MethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "AT" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 75 on "AT" between rule 79 and rule 117 starting at line 390, column 19

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifiers ::= .FieldModifier 
FieldModifier ::= Annotation . (117)




STATE 76 -----------------------------------------------------------------------
( 5 9 78 88 354 411 412 417 441 443 )

InterfaceModifiers ::= InterfaceModifiers  .InterfaceModifier 
InterfaceModifiersopt ::= InterfaceModifiers . (485)

InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1008:29:1008:48:32203:32222: Warning: Shift/reduce conflict in state 76 on "AT" with rule 485

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= InterfaceModifiers . (485)




STATE 78 -----------------------------------------------------------------------
( 5 417 443 )

ClassBodyDeclarations ::= ClassBodyDeclarations  .ClassBodyDeclaration 
ClassBodyDeclarationsopt ::= ClassBodyDeclarations . (515)

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .InstanceInitializer 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiers ::= .FieldModifier 
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifier ::= .Annotation 
FieldModifier ::= .public 
FieldModifier ::= .protected 
FieldModifier ::= .private 
FieldModifier ::= .static 
FieldModifier ::= .final 
FieldModifier ::= .transient 
FieldModifier ::= .volatile 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiers ::= .MethodModifier 
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifier ::= .Annotations 
MethodModifier ::= .public 
MethodModifier ::= .protected 
MethodModifier ::= .private 
MethodModifier ::= .abstract 
MethodModifier ::= .static 
MethodModifier ::= .final 
MethodModifier ::= .synchronized 
MethodModifier ::= .native 
MethodModifier ::= .strictfp 
InstanceInitializer ::= .Block 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifier ::= .Annotations 
ConstructorModifier ::= .public 
ConstructorModifier ::= .protected 
ConstructorModifier ::= .private 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ConstructorModifiersopt ::= . (502)
ConstructorModifiersopt ::= .ConstructorModifiers 
MethodModifiersopt ::= . (510)
MethodModifiersopt ::= .MethodModifiers 
FieldModifiersopt ::= . (512)
FieldModifiersopt ::= .FieldModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 78 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "short" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "long" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "int" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "float" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "double" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "char" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "byte" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "boolean" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "IDENTIFIER" between rule 510 and rule 502 starting at line 1034, column 29

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= . (502)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "IDENTIFIER" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 78 on "LESS" between rule 510 and rule 502 starting at line 1034, column 29

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= . (502)




STATE 81 -----------------------------------------------------------------------
( 9 88 354 411 412 441 )

ClassModifier ::= strictfp . (86)
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 81 on "strictfp" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 81 on "static" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 81 on "public" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 81 on "protected" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 81 on "private" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 81 on "abstract" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:333:21:333:30:8937:8946: Warning: Reduce/reduce conflict in state 81 on "AT" between rule 86 and rule 193 starting at line 510, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= strictfp . (86)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= strictfp . (193)




STATE 82 -----------------------------------------------------------------------
( 9 88 )

ClassModifier ::= static . (84)
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 82 on "strictfp" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 82 on "static" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 82 on "public" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 82 on "protected" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 82 on "private" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 82 on "abstract" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 82 on "AT" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)




STATE 83 -----------------------------------------------------------------------
( 9 88 )

ClassModifier ::= abstract . (83)
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 83 on "strictfp" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 83 on "static" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 83 on "public" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 83 on "protected" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 83 on "private" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 83 on "abstract" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 83 on "AT" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)




STATE 84 -----------------------------------------------------------------------
( 9 88 354 411 412 441 )

ClassModifier ::= private . (82)
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 84 on "strictfp" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 84 on "static" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 84 on "public" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 84 on "protected" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 84 on "private" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 84 on "abstract" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:329:21:329:29:8819:8827: Warning: Reduce/reduce conflict in state 84 on "AT" between rule 82 and rule 190 starting at line 507, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= private . (82)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= private . (190)




STATE 85 -----------------------------------------------------------------------
( 9 88 354 411 412 441 )

ClassModifier ::= protected . (81)
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 85 on "strictfp" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 85 on "static" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 85 on "public" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 85 on "protected" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 85 on "private" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 85 on "abstract" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:328:21:328:31:8787:8797: Warning: Reduce/reduce conflict in state 85 on "AT" between rule 81 and rule 189 starting at line 506, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= protected . (81)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= protected . (189)




STATE 86 -----------------------------------------------------------------------
( 9 88 )

ClassModifier ::= public . (80)
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 86 on "strictfp" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 86 on "static" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 86 on "public" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 86 on "protected" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 86 on "private" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 86 on "abstract" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 86 on "AT" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)




STATE 87 -----------------------------------------------------------------------
( 9 88 )

ClassModifier ::= Annotation . (79)
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 87 on "strictfp" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 87 on "static" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 87 on "public" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 87 on "protected" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 87 on "private" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 87 on "abstract" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 87 on "AT" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)




STATE 88 -----------------------------------------------------------------------
( 9 )

TypeDeclarations ::= TypeDeclarations  .TypeDeclaration 
TypeDeclarationsopt ::= TypeDeclarations . (527)

TypeDeclaration ::= .ClassDeclaration 
TypeDeclaration ::= .InterfaceDeclaration 
TypeDeclaration ::= .SEMICOLON 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 88 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)




STATE 92 -----------------------------------------------------------------------
( 10 )

TypeName ::= identifier . (29)
PackageOrTypeName ::= identifier . (53)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 92 on "DOT" between rule 29 and rule 53 starting at line 281, column 23

TypeName ::= .TypeName DOT identifier 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
PackageOrTypeName ::= .PackageOrTypeName DOT identifier 
PackageOrTypeName ::= identifier . (53)




STATE 95 -----------------------------------------------------------------------
( 17 37 62 132 136 156 171 182 224 280 281 282 299 314 342 347 349 399 405 459 )

ClassType ::= TypeName  .TypeArgumentsopt 
TypeName ::= TypeName  .DOT identifier 

TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1088:22:1088:31:34166:34175: Warning: Shift/reduce conflict in state 95 on "LESS" with rule 538

ClassInstanceCreationExpression ::= new TypeArgumentsopt  .ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= TypeName  .TypeArgumentsopt 
TypeArgumentsopt ::= . (538)




STATE 96 -----------------------------------------------------------------------
( 17 62 132 156 171 182 224 280 281 282 342 347 349 399 405 459 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "IDENTIFIER" between rule 29 and rule 32 starting at line 236, column 18

LocalVariableDeclaration ::= VariableModifiersopt  .Type VariableDeclarators 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
LocalVariableDeclaration ::= VariableModifiersopt  .Type VariableDeclarators 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "void" between rule 29 and rule 32 starting at line 236, column 18

InterfaceMemberDeclarations ::= .InterfaceMemberDeclarations 
                                InterfaceMemberDeclaration 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclaration 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
InterfaceMemberDeclarations ::= .InterfaceMemberDeclarations 
                                InterfaceMemberDeclaration 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclaration 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "strictfp" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "static" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "short" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "public" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "protected" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "private" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "long" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "interface" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "int" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "instanceof" between rule 29 and rule 32 starting at line 236, column 18

RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "float" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "final" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "enum" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "double" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "class" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "char" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "byte" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "boolean" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "abstract" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "ELLIPSIS" between rule 29 and rule 32 starting at line 236, column 18

LastFormalParameter ::= VariableModifiersopt  .Type Ellipsisopt 
                        VariableDeclaratorId 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
LastFormalParameter ::= VariableModifiersopt  .Type Ellipsisopt 
                        VariableDeclaratorId 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "GREATER" between rule 29 and rule 32 starting at line 236, column 18

TypeArguments ::= LESS  .ActualTypeArgumentList GREATER 
ActualTypeArgumentList ::= .ActualTypeArgument 
ActualTypeArgument ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
TypeArguments ::= LESS  .ActualTypeArgumentList GREATER 
ActualTypeArgumentList ::= .ActualTypeArgument 
ActualTypeArgument ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "EQUAL_EQUAL" between rule 29 and rule 32 starting at line 236, column 18

EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "LESS_EQUAL" between rule 29 and rule 32 starting at line 236, column 18

RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "LESS" between rule 29 and rule 32 starting at line 236, column 18

ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "RBRACE" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeBody ::= LBRACE  .AnnotationTypeElementDeclarationsopt RBRACE 
AnnotationTypeElementDeclarationsopt ::= .AnnotationTypeElementDeclarations 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeBody ::= LBRACE  .AnnotationTypeElementDeclarationsopt RBRACE 
AnnotationTypeElementDeclarationsopt ::= .AnnotationTypeElementDeclarations 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "OR_OR" between rule 29 and rule 32 starting at line 236, column 18

ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "LBRACE" between rule 29 and rule 32 starting at line 236, column 18

ConstructorDeclaration ::= ConstructorModifiersopt ConstructorDeclarator  .
                           Throwsopt ConstructorBody 
Throwsopt ::= .Throws 
Throws ::= throws  .ExceptionTypeList 
ExceptionTypeList ::= .ExceptionType 
ExceptionType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ConstructorDeclaration ::= ConstructorModifiersopt ConstructorDeclarator  .
                           Throwsopt ConstructorBody 
Throwsopt ::= .Throws 
Throws ::= throws  .ExceptionTypeList 
ExceptionTypeList ::= .ExceptionType 
ExceptionType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "XOR" between rule 29 and rule 32 starting at line 236, column 18

ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "RBRACKET" between rule 29 and rule 32 starting at line 236, column 18

ArrayAccess ::= PrimaryNoNewArray LBRACKET  .Expression RBRACKET 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayAccess ::= PrimaryNoNewArray LBRACKET  .Expression RBRACKET 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "LBRACKET" between rule 29 and rule 32 starting at line 236, column 18

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "AT" between rule 29 and rule 32 starting at line 236, column 18

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "QUESTION" between rule 29 and rule 32 starting at line 236, column 18

ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "SEMICOLON" between rule 29 and rule 32 starting at line 236, column 18

AssertStatement ::= assert  .Expression SEMICOLON 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AssertStatement ::= assert  .Expression SEMICOLON 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "COLON" between rule 29 and rule 32 starting at line 236, column 18

AssertStatement ::= assert  .Expression COLON Expression SEMICOLON 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AssertStatement ::= assert  .Expression COLON Expression SEMICOLON 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "COMMA" between rule 29 and rule 32 starting at line 236, column 18

ActualTypeArgumentList ::= .ActualTypeArgumentList COMMA ActualTypeArgument 
ActualTypeArgumentList ::= .ActualTypeArgument 
ActualTypeArgument ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ActualTypeArgumentList ::= .ActualTypeArgumentList COMMA ActualTypeArgument 
ActualTypeArgumentList ::= .ActualTypeArgument 
ActualTypeArgument ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "RPAREN" between rule 29 and rule 32 starting at line 236, column 18

PrimaryNoNewArray ::= LPAREN  .Expression RPAREN 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
PrimaryNoNewArray ::= LPAREN  .Expression RPAREN 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "AND_AND" between rule 29 and rule 32 starting at line 236, column 18

ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "AND" between rule 29 and rule 32 starting at line 236, column 18

AndExpression ::= .AndExpression AND EqualityExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
AndExpression ::= .AndExpression AND EqualityExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "NOT_EQUAL" between rule 29 and rule 32 starting at line 236, column 18

EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 96 on "OR" between rule 29 and rule 32 starting at line 236, column 18

InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)




STATE 100 ----------------------------------------------------------------------
( 22 )

BasicForStatement ::= for LPAREN  .ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= for LPAREN  .FormalParameter COLON Expression RPAREN 
                         Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForInit ::= .StatementExpressionList 
ForInit ::= .LocalVariableDeclaration 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForInitopt ::= . (458)
ForInitopt ::= .ForInit 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 100 on "IDENTIFIER" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 100 on "boolean" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 100 on "char" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 100 on "long" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 100 on "int" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 100 on "short" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 100 on "byte" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 100 on "double" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 100 on "float" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)




STATE 109 ----------------------------------------------------------------------
( 28 41 42 50 55 57 100 101 102 104 107 108 110 112 113 128 137 139 142 147 
  177 178 179 180 181 183 184 185 187 188 189 190 191 192 193 194 195 208 216 
  238 244 248 249 250 255 263 266 278 284 291 295 304 324 326 328 330 331 336 
  337 359 366 368 369 370 377 423 425 434 435 445 448 464 469 477 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 109 on "LESS" between rule 29 and rule 49 starting at line 275, column 20

ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .ShiftExpression 
ShiftExpression ::= .AdditiveExpression 
AdditiveExpression ::= .MultiplicativeExpression 
MultiplicativeExpression ::= .UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
PostfixExpression ::= .ExpressionName 
ExpressionName ::= identifier . (49)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 109 on "LBRACKET" between rule 29 and rule 49 starting at line 275, column 20

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ExpressionName ::= identifier . (49)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 109 on "LBRACKET" between rule 29 and rule 32 starting at line 236, column 18

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 109 on "RPAREN" between rule 29 and rule 49 starting at line 275, column 20

CastExpression ::= LPAREN  .ReferenceType RPAREN UnaryExpressionNotPlusMinus 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
PrimaryNoNewArray ::= LPAREN  .Expression RPAREN 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= .ShiftExpression 
ShiftExpression ::= .AdditiveExpression 
AdditiveExpression ::= .MultiplicativeExpression 
MultiplicativeExpression ::= .UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
PostfixExpression ::= .ExpressionName 
ExpressionName ::= identifier . (49)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 109 on "RPAREN" between rule 29 and rule 32 starting at line 236, column 18

CastExpression ::= LPAREN  .ReferenceType RPAREN UnaryExpressionNotPlusMinus 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
CastExpression ::= LPAREN  .ReferenceType RPAREN UnaryExpressionNotPlusMinus 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 109 on "DOT" between rule 29 and rule 55 starting at line 284, column 19

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ExpressionName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= identifier . (55)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 109 on "DOT" between rule 29 and rule 32 starting at line 236, column 18

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)




STATE 116 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 188 191 192 193 194 195 
  208 216 238 244 248 249 278 284 291 304 328 330 331 336 337 359 369 370 377 
  383 423 425 434 435 445 448 464 477 )

RelationalExpression ::= RelationalExpression  .LESS ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression  .LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .instanceof ReferenceType 
EqualityExpression ::= RelationalExpression . (413)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:902:24:902:47:28962:28985: Warning: Shift/reduce conflict in state 116 on "LESS" with rule 413

InterfaceMemberDeclarations ::= .InterfaceMemberDeclarations 
                                InterfaceMemberDeclaration 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclaration 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= RelationalExpression . (413)




STATE 117 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 188 189 190 191 192 193 
  194 195 208 216 238 244 248 249 278 284 291 304 328 330 331 336 337 359 369 
  370 377 383 423 425 434 435 445 448 464 477 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= ShiftExpression . (407)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:895:26:895:44:28564:28582: Warning: Shift/reduce conflict in state 117 on "GREATER" with rule 407

RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= ShiftExpression . (407)




STATE 127 ----------------------------------------------------------------------
( 32 )

FieldAccess ::= super DOT  .identifier 
MethodInvocation ::= super DOT  .TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1088:22:1088:31:34166:34175: Warning: Shift/reduce conflict in state 127 on "IDENTIFIER" with rule 538

MethodInvocation ::= super DOT  .TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
TypeArgumentsopt ::= . (538)




STATE 140 ----------------------------------------------------------------------
( 45 )

ClassInstanceCreationExpression ::= Primary DOT  .new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary DOT  .identifier 
MethodInvocation ::= Primary DOT  .TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1088:22:1088:31:34166:34175: Warning: Shift/reduce conflict in state 140 on "IDENTIFIER" with rule 538

MethodInvocation ::= Primary DOT  .TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
TypeArgumentsopt ::= . (538)




STATE 150 ----------------------------------------------------------------------
( 60 )

ConstructorModifier ::= Annotations . (167)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:470:25:470:39:13129:13143: Warning: Shift/reduce conflict in state 150 on "AT" with rule 167

ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifiers ::= ConstructorModifiers  .ConstructorModifier 
ConstructorModifier ::= Annotations . (167)




STATE 155 ----------------------------------------------------------------------
( 66 )

MethodModifier ::= Annotations . (143)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:435:20:435:34:12087:12101: Warning: Shift/reduce conflict in state 155 on "AT" with rule 143

MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifiers ::= MethodModifiers  .MethodModifier 
MethodModifier ::= Annotations . (143)




STATE 176 ----------------------------------------------------------------------
( 110 )

Type ::= PrimitiveType . (10)
CastExpression ::= LPAREN PrimitiveType  .Dimsopt RPAREN UnaryExpression 

Dims ::= .LBRACKET RBRACKET 
Dims ::= .Dims LBRACKET RBRACKET 
Dimsopt ::= . (448)
Dimsopt ::= .Dims 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:199:10:199:26:5286:5302: Warning: Shift/reduce conflict in state 176 on "LBRACKET" with rule 10

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= PrimitiveType . (10)




STATE 239 ----------------------------------------------------------------------
( 160 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)
SimpleName ::= identifier . (238)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 239 on "LESS" between rule 29 and rule 49 starting at line 275, column 20

ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .ShiftExpression 
ShiftExpression ::= .AdditiveExpression 
AdditiveExpression ::= .MultiplicativeExpression 
MultiplicativeExpression ::= .UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
PostfixExpression ::= .ExpressionName 
ExpressionName ::= identifier . (49)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 239 on "LBRACKET" between rule 29 and rule 49 starting at line 275, column 20

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ExpressionName ::= identifier . (49)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 239 on "LBRACKET" between rule 29 and rule 32 starting at line 236, column 18

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 239 on "DOT" between rule 29 and rule 55 starting at line 284, column 19

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ExpressionName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= identifier . (55)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 239 on "DOT" between rule 29 and rule 32 starting at line 236, column 18

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)




STATE 262 ----------------------------------------------------------------------
( 183 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= RelationalExpression LESS_EQUAL ShiftExpression .
                          (410)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:898:28:898:68:28747:28787: Warning: Shift/reduce conflict in state 262 on "GREATER" with rule 410

RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression LESS_EQUAL ShiftExpression .
                          (410)




STATE 264 ----------------------------------------------------------------------
( 184 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= RelationalExpression GREATER ShiftExpression . (409)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:897:28:897:67:28679:28718: Warning: Shift/reduce conflict in state 264 on "GREATER" with rule 409

RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression GREATER ShiftExpression . (409)




STATE 265 ----------------------------------------------------------------------
( 185 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= RelationalExpression LESS ShiftExpression . (408)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:896:28:896:67:28611:28650: Warning: Shift/reduce conflict in state 265 on "GREATER" with rule 408

RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression LESS ShiftExpression . (408)




STATE 269 ----------------------------------------------------------------------
( 189 )

RelationalExpression ::= RelationalExpression  .LESS ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression  .LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .instanceof ReferenceType 
EqualityExpression ::= EqualityExpression NOT_EQUAL RelationalExpression .
                        (415)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:904:26:904:69:29082:29125: Warning: Shift/reduce conflict in state 269 on "LESS" with rule 415

InterfaceMemberDeclarations ::= .InterfaceMemberDeclarations 
                                InterfaceMemberDeclaration 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclaration 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= EqualityExpression NOT_EQUAL RelationalExpression .
                        (415)




STATE 270 ----------------------------------------------------------------------
( 190 )

RelationalExpression ::= RelationalExpression  .LESS ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression  .LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .instanceof ReferenceType 
EqualityExpression ::= EqualityExpression EQUAL_EQUAL RelationalExpression .
                        (414)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:903:26:903:69:29012:29055: Warning: Shift/reduce conflict in state 270 on "LESS" with rule 414

InterfaceMemberDeclarations ::= .InterfaceMemberDeclarations 
                                InterfaceMemberDeclaration 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclaration 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 
VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 
VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 
VariableInitializer ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= EqualityExpression EQUAL_EQUAL RelationalExpression .
                        (414)




STATE 276 ----------------------------------------------------------------------
( 197 )

FieldAccess ::= ClassName DOT super DOT  .identifier 
MethodInvocation ::= ClassName DOT super DOT  .TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1088:22:1088:31:34166:34175: Warning: Shift/reduce conflict in state 276 on "IDENTIFIER" with rule 538

MethodInvocation ::= ClassName DOT super DOT  .TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
TypeArgumentsopt ::= . (538)




STATE 295 ----------------------------------------------------------------------
( 223 )

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ExplicitConstructorInvocation ::= .TypeArgumentsopt this LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= .TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= .Primary DOT TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
ExplicitConstructorInvocationopt ::= . (500)
ExplicitConstructorInvocationopt ::= .ExplicitConstructorInvocation 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "null" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "StringLiteral" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "CharacterLiteral" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "DoubleLiteral" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "FloatingPointLiteral" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "LongLiteral" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "IntegerLiteral" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "false" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "true" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "IDENTIFIER" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "double" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "float" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "char" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "long" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "int" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "short" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "byte" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "boolean" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "new" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1088:22:1088:31:34166:34175: Warning: Shift/reduce conflict in state 295 on "super" with rule 538

ExplicitConstructorInvocation ::= .TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
TypeArgumentsopt ::= . (538)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "super" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "LPAREN" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1088:22:1088:31:34166:34175: Warning: Shift/reduce conflict in state 295 on "this" with rule 538

ExplicitConstructorInvocation ::= .TypeArgumentsopt this LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
TypeArgumentsopt ::= . (538)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "this" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1031:38:1031:47:32730:32739: Warning: Shift/reduce conflict in state 295 on "void" with rule 500

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 
ExplicitConstructorInvocationopt ::= . (500)




STATE 307 ----------------------------------------------------------------------
( 238 )

ElementValues ::= ElementValues  .COMMA ElementValue 
ElementValuesopt ::= ElementValues . (469)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:984:24:984:38:31452:31466: Warning: Shift/reduce conflict in state 307 on "COMMA" with rule 469

ElementValueArrayInitializer ::= LBRACE  .ElementValuesopt Commaopt RBRACE 
ElementValuesopt ::= ElementValues . (469)




STATE 310 ----------------------------------------------------------------------
( 245 )

EnumBody ::= LBRACE  .EnumConstantsopt Commaopt EnumBodyDeclarationsopt RBRACE 

identifier ::= .IDENTIFIER 
EnumConstants ::= .EnumConstant 
EnumConstants ::= .EnumConstants COMMA EnumConstant 
EnumConstant ::= .Annotationsopt identifier Argumentsopt ClassBodyopt 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
EnumConstant ::= .identifier 
EnumConstantsopt ::= . (494)
EnumConstantsopt ::= .EnumConstants 
Annotationsopt ::= . (524)
Annotationsopt ::= .Annotations 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1067:20:1067:29:33618:33627: Warning: Shift/reduce conflict in state 310 on "IDENTIFIER" with rule 524

EnumConstant ::= .Annotationsopt identifier Argumentsopt ClassBodyopt 
Annotationsopt ::= . (524)




STATE 323 ----------------------------------------------------------------------
( 253 371 449 450 470 479 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)
LabeledStatement ::= identifier  .COLON Statement 
LabeledStatementNoShortIf ::= identifier  .COLON StatementNoShortIf 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 323 on "LBRACKET" between rule 29 and rule 49 starting at line 275, column 20

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ExpressionName ::= identifier . (49)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 323 on "LBRACKET" between rule 29 and rule 32 starting at line 236, column 18

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 323 on "DOT" between rule 29 and rule 55 starting at line 284, column 19

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ExpressionName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= identifier . (55)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 323 on "DOT" between rule 29 and rule 32 starting at line 236, column 18

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)




STATE 325 ----------------------------------------------------------------------
( 263 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= RelationalExpression GREATER EQUAL ShiftExpression .
                          (411)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:899:28:899:69:28816:28857: Warning: Shift/reduce conflict in state 325 on "GREATER" with rule 411

RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression GREATER EQUAL ShiftExpression .
                          (411)




STATE 335 ----------------------------------------------------------------------
( 284 )

VariableInitializers ::= VariableInitializers  .COMMA VariableInitializer 
VariableInitializersopt ::= VariableInitializers . (467)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:981:31:981:52:31373:31394: Warning: Shift/reduce conflict in state 335 on "COMMA" with rule 467

ArrayInitializer ::= LBRACE  .VariableInitializersopt Commaopt RBRACE 
VariableInitializersopt ::= VariableInitializers . (467)




STATE 339 ----------------------------------------------------------------------
( 290 )

SwitchBlock ::= LBRACE  .SwitchBlockStatementGroupsopt SwitchLabelsopt RBRACE 

SwitchBlockStatementGroups ::= .SwitchBlockStatementGroup 
SwitchBlockStatementGroups ::= .SwitchBlockStatementGroups 
                               SwitchBlockStatementGroup 
SwitchBlockStatementGroup ::= .SwitchLabels BlockStatements 
SwitchLabels ::= .SwitchLabel 
SwitchLabels ::= .SwitchLabels SwitchLabel 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .case EnumConstant COLON 
SwitchLabel ::= .default COLON 
SwitchBlockStatementGroupsopt ::= . (462)
SwitchBlockStatementGroupsopt ::= .SwitchBlockStatementGroups 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:974:35:974:44:31143:31152: Warning: Shift/reduce conflict in state 339 on "default" with rule 462

SwitchBlock ::= LBRACE  .SwitchBlockStatementGroupsopt SwitchLabelsopt RBRACE 
SwitchBlockStatementGroupsopt ::= . (462)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:974:35:974:44:31143:31152: Warning: Shift/reduce conflict in state 339 on "case" with rule 462

SwitchBlock ::= LBRACE  .SwitchBlockStatementGroupsopt SwitchLabelsopt RBRACE 
SwitchBlockStatementGroupsopt ::= . (462)




STATE 343 ----------------------------------------------------------------------
( 295 )

ConstructorBody ::= LBRACE ExplicitConstructorInvocationopt  .
                    BlockStatementsopt RBRACE 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 343 on "double" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 343 on "float" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 343 on "char" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 343 on "long" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 343 on "int" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 343 on "short" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 343 on "byte" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 343 on "boolean" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 343 on "IDENTIFIER" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)




STATE 354 ----------------------------------------------------------------------
( 302 )

AnnotationTypeBody ::= LBRACE  .AnnotationTypeElementDeclarationsopt RBRACE 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiers ::= .ConstantModifier 
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifier ::= .Annotation 
ConstantModifier ::= .public 
ConstantModifier ::= .static 
ConstantModifier ::= .final 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
AbstractMethodModifier ::= .public 
AbstractMethodModifier ::= .abstract 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
AnnotationTypeElementDeclaration ::= .EnumDeclaration 
AnnotationTypeElementDeclaration ::= .AnnotationTypeDeclaration 
AnnotationTypeElementDeclaration ::= .SEMICOLON 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
AnnotationTypeElementDeclarationsopt ::= . (474)
AnnotationTypeElementDeclarationsopt ::= .AnnotationTypeElementDeclarations 
AbstractMethodModifiersopt ::= . (476)
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
ConstantModifiersopt ::= . (478)
ConstantModifiersopt ::= .ConstantModifiers 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 354 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 354 on "IDENTIFIER" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 354 on "short" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 354 on "long" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 354 on "int" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 354 on "float" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 354 on "double" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 354 on "char" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 354 on "byte" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 354 on "boolean" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)




STATE 362 ----------------------------------------------------------------------
( 310 )

EnumConstants ::= EnumConstants  .COMMA EnumConstant 
EnumConstantsopt ::= EnumConstants . (495)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1023:24:1023:38:32529:32543: Warning: Shift/reduce conflict in state 362 on "COMMA" with rule 495

EnumBody ::= LBRACE  .EnumConstantsopt Commaopt EnumBodyDeclarationsopt RBRACE 
EnumConstantsopt ::= EnumConstants . (495)




STATE 368 ----------------------------------------------------------------------
( 320 )

BasicForStatement ::= for LPAREN  .ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN  .ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
EnhancedForStatement ::= for LPAREN  .FormalParameter COLON Expression RPAREN 
                         Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForInit ::= .StatementExpressionList 
ForInit ::= .LocalVariableDeclaration 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForInitopt ::= . (458)
ForInitopt ::= .ForInit 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 368 on "IDENTIFIER" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 368 on "boolean" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 368 on "char" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 368 on "long" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 368 on "int" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 368 on "short" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 368 on "byte" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 368 on "double" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 368 on "float" with rule 464

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiersopt ::= . (464)




STATE 383 ----------------------------------------------------------------------
( 339 381 384 385 427 )

SwitchLabel ::= case  .ConstantExpression COLON 
SwitchLabel ::= case  .EnumConstant COLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
EnumConstant ::= .Annotationsopt identifier Argumentsopt ClassBodyopt 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
EnumConstant ::= .identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ConstantExpression ::= .Expression 
Annotationsopt ::= . (524)
Annotationsopt ::= .Annotations 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1067:20:1067:29:33618:33627: Warning: Shift/reduce conflict in state 383 on "IDENTIFIER" with rule 524

EnumConstant ::= .Annotationsopt identifier Argumentsopt ClassBodyopt 
Annotationsopt ::= . (524)




STATE 384 ----------------------------------------------------------------------
( 339 385 )

SwitchBlockStatementGroup ::= SwitchLabels  .BlockStatements 
SwitchLabels ::= SwitchLabels  .SwitchLabel 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .case EnumConstant COLON 
SwitchLabel ::= .default COLON 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 384 on "IDENTIFIER" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 384 on "boolean" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 384 on "char" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 384 on "long" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 384 on "int" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 384 on "short" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 384 on "byte" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 384 on "double" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 384 on "float" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)




STATE 385 ----------------------------------------------------------------------
( 339 )

SwitchBlockStatementGroups ::= SwitchBlockStatementGroups  .
                               SwitchBlockStatementGroup 
SwitchBlockStatementGroupsopt ::= SwitchBlockStatementGroups . (463)

SwitchBlockStatementGroup ::= .SwitchLabels BlockStatements 
SwitchLabels ::= .SwitchLabel 
SwitchLabels ::= .SwitchLabels SwitchLabel 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .case EnumConstant COLON 
SwitchLabel ::= .default COLON 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:975:37:975:64:31190:31217: Warning: Shift/reduce conflict in state 385 on "default" with rule 463

SwitchBlock ::= LBRACE  .SwitchBlockStatementGroupsopt SwitchLabelsopt RBRACE 
SwitchBlockStatementGroupsopt ::= SwitchBlockStatementGroups . (463)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:975:37:975:64:31190:31217: Warning: Shift/reduce conflict in state 385 on "case" with rule 463

SwitchBlock ::= LBRACE  .SwitchBlockStatementGroupsopt SwitchLabelsopt RBRACE 
SwitchBlockStatementGroupsopt ::= SwitchBlockStatementGroups . (463)




STATE 390 ----------------------------------------------------------------------
( 345 )

ExplicitConstructorInvocation ::= Primary DOT  .TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
ClassInstanceCreationExpression ::= Primary DOT  .new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary DOT  .identifier 
MethodInvocation ::= Primary DOT  .TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1088:22:1088:31:34166:34175: Warning: Shift/reduce conflict in state 390 on "IDENTIFIER" with rule 538

MethodInvocation ::= Primary DOT  .TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
TypeArgumentsopt ::= . (538)




STATE 393 ----------------------------------------------------------------------
( 349 )

ArrayType ::= Type  .LBRACKET RBRACKET 
FormalParameter ::= VariableModifiersopt Type  .VariableDeclaratorId 
LastFormalParameter ::= VariableModifiersopt Type  .Ellipsisopt 
                        VariableDeclaratorId 

identifier ::= .IDENTIFIER 
VariableDeclaratorId ::= .identifier 
VariableDeclaratorId ::= .VariableDeclaratorId LBRACKET RBRACKET 
Ellipsisopt ::= . (504)
Ellipsisopt ::= .ELLIPSIS 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1037:12:1037:21:32917:32926: Warning: Shift/reduce conflict in state 393 on "IDENTIFIER" with rule 504

LastFormalParameter ::= VariableModifiersopt Type  .Ellipsisopt 
                        VariableDeclaratorId 
Ellipsisopt ::= . (504)




STATE 400 ----------------------------------------------------------------------
( 354 411 )

InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "IDENTIFIER" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "strictfp" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "static" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "short" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "public" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "protected" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "private" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "long" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "interface" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "int" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "float" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "final" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "enum" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "double" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "class" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "char" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "byte" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "boolean" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "abstract" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "RBRACE" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeBody ::= LBRACE  .AnnotationTypeElementDeclarationsopt RBRACE 
AnnotationTypeElementDeclarationsopt ::= .AnnotationTypeElementDeclarations 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeBody ::= LBRACE  .AnnotationTypeElementDeclarationsopt RBRACE 
AnnotationTypeElementDeclarationsopt ::= .AnnotationTypeElementDeclarations 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "AT" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:497:28:497:54:14143:14169: Warning: Reduce/reduce conflict in state 400 on "SEMICOLON" between rule 183 and rule 226 starting at line 562, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)




STATE 401 ----------------------------------------------------------------------
( 354 411 )

ClassDeclaration ::= EnumDeclaration . (75)
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "IDENTIFIER" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "strictfp" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "static" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "short" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "public" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "protected" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "private" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "long" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "interface" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "int" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "float" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "final" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "enum" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "double" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "class" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "char" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "byte" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "boolean" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "abstract" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "RBRACE" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeBody ::= LBRACE  .AnnotationTypeElementDeclarationsopt RBRACE 
AnnotationTypeElementDeclarationsopt ::= .AnnotationTypeElementDeclarations 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeBody ::= LBRACE  .AnnotationTypeElementDeclarationsopt RBRACE 
AnnotationTypeElementDeclarationsopt ::= .AnnotationTypeElementDeclarations 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "AT" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:319:24:319:40:8478:8494: Warning: Reduce/reduce conflict in state 401 on "SEMICOLON" between rule 75 and rule 225 starting at line 561, column 40

AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
ClassDeclaration ::= EnumDeclaration . (75)
------------------------------------------------------------------------------
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)




STATE 402 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= final . (85)
ConstantModifier ::= final . (210)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 402 on "static" between rule 85 and rule 210 starting at line 539, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= final . (210)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 402 on "public" between rule 85 and rule 210 starting at line 539, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= final . (210)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 402 on "final" between rule 85 and rule 210 starting at line 539, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= final . (210)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:332:21:332:27:8909:8915: Warning: Reduce/reduce conflict in state 402 on "AT" between rule 85 and rule 210 starting at line 539, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= final . (85)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= final . (210)




STATE 403 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= static . (84)
InterfaceModifier ::= static . (192)
ConstantModifier ::= static . (209)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "strictfp" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "protected" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "private" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "abstract" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "static" between rule 84 and rule 209 starting at line 538, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= static . (209)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "static" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "public" between rule 84 and rule 209 starting at line 538, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= static . (209)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "public" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "final" between rule 84 and rule 209 starting at line 538, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= static . (209)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "AT" between rule 84 and rule 209 starting at line 538, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= static . (209)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:331:21:331:28:8880:8887: Warning: Reduce/reduce conflict in state 403 on "AT" between rule 84 and rule 192 starting at line 509, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= static . (84)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= static . (192)




STATE 406 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= Annotation . (79)
InterfaceModifier ::= Annotation . (187)
ConstantModifier ::= Annotation . (207)
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "strictfp" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "protected" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "private" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "static" between rule 79 and rule 207 starting at line 536, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "static" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "final" between rule 79 and rule 207 starting at line 536, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:536:22:536:35:15573:15586: Warning: Reduce/reduce conflict in state 406 on "IDENTIFIER" between rule 207 and rule 229 starting at line 567, column 17

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:536:22:536:35:15573:15586: Warning: Reduce/reduce conflict in state 406 on "short" between rule 207 and rule 229 starting at line 567, column 17

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "public" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "public" between rule 79 and rule 207 starting at line 536, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "public" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:536:22:536:35:15573:15586: Warning: Reduce/reduce conflict in state 406 on "long" between rule 207 and rule 229 starting at line 567, column 17

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:536:22:536:35:15573:15586: Warning: Reduce/reduce conflict in state 406 on "int" between rule 207 and rule 229 starting at line 567, column 17

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:536:22:536:35:15573:15586: Warning: Reduce/reduce conflict in state 406 on "float" between rule 207 and rule 229 starting at line 567, column 17

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:536:22:536:35:15573:15586: Warning: Reduce/reduce conflict in state 406 on "double" between rule 207 and rule 229 starting at line 567, column 17

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:536:22:536:35:15573:15586: Warning: Reduce/reduce conflict in state 406 on "char" between rule 207 and rule 229 starting at line 567, column 17

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:536:22:536:35:15573:15586: Warning: Reduce/reduce conflict in state 406 on "byte" between rule 207 and rule 229 starting at line 567, column 17

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:536:22:536:35:15573:15586: Warning: Reduce/reduce conflict in state 406 on "boolean" between rule 207 and rule 229 starting at line 567, column 17

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "abstract" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "abstract" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "AT" between rule 79 and rule 229 starting at line 567, column 17

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
Annotations ::= Annotation . (229)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "AT" between rule 79 and rule 207 starting at line 536, column 22

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= Annotation . (207)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:326:19:326:32:8723:8736: Warning: Reduce/reduce conflict in state 406 on "AT" between rule 79 and rule 187 starting at line 504, column 23

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= Annotation . (79)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= Annotation . (187)




STATE 407 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= abstract . (83)
InterfaceModifier ::= abstract . (191)
AbstractMethodModifier ::= abstract . (216)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "strictfp" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "static" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "protected" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "private" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "public" between rule 83 and rule 216 starting at line 548, column 30

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= abstract . (216)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "public" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "abstract" between rule 83 and rule 216 starting at line 548, column 30

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= abstract . (216)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "abstract" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "AT" between rule 83 and rule 216 starting at line 548, column 30

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= abstract . (216)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:330:21:330:30:8849:8858: Warning: Reduce/reduce conflict in state 407 on "AT" between rule 83 and rule 191 starting at line 508, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= abstract . (83)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= abstract . (191)




STATE 408 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= public . (80)
InterfaceModifier ::= public . (188)
ConstantModifier ::= public . (208)
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "strictfp" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "protected" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "private" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "static" between rule 80 and rule 208 starting at line 537, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "static" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "final" between rule 80 and rule 208 starting at line 537, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:537:24:537:31:15611:15618: Warning: Reduce/reduce conflict in state 408 on "IDENTIFIER" between rule 208 and rule 215 starting at line 547, column 30

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:537:24:537:31:15611:15618: Warning: Reduce/reduce conflict in state 408 on "short" between rule 208 and rule 215 starting at line 547, column 30

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "public" between rule 80 and rule 215 starting at line 547, column 30

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "public" between rule 80 and rule 208 starting at line 537, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "public" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:537:24:537:31:15611:15618: Warning: Reduce/reduce conflict in state 408 on "long" between rule 208 and rule 215 starting at line 547, column 30

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:537:24:537:31:15611:15618: Warning: Reduce/reduce conflict in state 408 on "int" between rule 208 and rule 215 starting at line 547, column 30

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:537:24:537:31:15611:15618: Warning: Reduce/reduce conflict in state 408 on "float" between rule 208 and rule 215 starting at line 547, column 30

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:537:24:537:31:15611:15618: Warning: Reduce/reduce conflict in state 408 on "double" between rule 208 and rule 215 starting at line 547, column 30

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:537:24:537:31:15611:15618: Warning: Reduce/reduce conflict in state 408 on "char" between rule 208 and rule 215 starting at line 547, column 30

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:537:24:537:31:15611:15618: Warning: Reduce/reduce conflict in state 408 on "byte" between rule 208 and rule 215 starting at line 547, column 30

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:537:24:537:31:15611:15618: Warning: Reduce/reduce conflict in state 408 on "boolean" between rule 208 and rule 215 starting at line 547, column 30

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= .ConstantModifiers 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)
------------------------------------------------------------------------------
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "abstract" between rule 80 and rule 215 starting at line 547, column 30

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "abstract" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "AT" between rule 80 and rule 215 starting at line 547, column 30

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= public . (215)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "AT" between rule 80 and rule 208 starting at line 537, column 24

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifiers ::= .ConstantModifier 
ConstantModifier ::= public . (208)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:327:21:327:28:8758:8765: Warning: Reduce/reduce conflict in state 408 on "AT" between rule 80 and rule 188 starting at line 505, column 25

ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifiers ::= .ClassModifier 
ClassModifier ::= public . (80)
------------------------------------------------------------------------------
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifier ::= public . (188)




STATE 409 ----------------------------------------------------------------------
( 354 410 411 412 441 )

AbstractMethodModifier ::= Annotations . (214)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:546:28:546:42:15978:15992: Warning: Shift/reduce conflict in state 409 on "AT" with rule 214

AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifier ::= Annotations . (214)




STATE 411 ----------------------------------------------------------------------
( 354 )

AnnotationTypeElementDeclarations ::= AnnotationTypeElementDeclarations  .
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarationsopt ::= AnnotationTypeElementDeclarations .
                                         (475)

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiers ::= .ConstantModifier 
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifier ::= .Annotation 
ConstantModifier ::= .public 
ConstantModifier ::= .static 
ConstantModifier ::= .final 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
AbstractMethodModifier ::= .public 
AbstractMethodModifier ::= .abstract 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
AnnotationTypeElementDeclaration ::= .EnumDeclaration 
AnnotationTypeElementDeclaration ::= .AnnotationTypeDeclaration 
AnnotationTypeElementDeclaration ::= .SEMICOLON 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
AbstractMethodModifiersopt ::= . (476)
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
ConstantModifiersopt ::= . (478)
ConstantModifiersopt ::= .ConstantModifiers 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 411 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 411 on "IDENTIFIER" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 411 on "short" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 411 on "long" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 411 on "int" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 411 on "float" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 411 on "double" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 411 on "char" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 411 on "byte" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:995:32:995:41:31785:31794: Warning: Reduce/reduce conflict in state 411 on "boolean" between rule 476 and rule 478 starting at line 998, column 26

AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AbstractMethodModifiersopt ::= . (476)
------------------------------------------------------------------------------
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)




STATE 412 ----------------------------------------------------------------------
( 355 )

InterfaceBody ::= LBRACE  .InterfaceMemberDeclarationsopt RBRACE 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclaration 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclarations 
                                InterfaceMemberDeclaration 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
InterfaceMemberDeclaration ::= .AbstractMethodDeclaration 
InterfaceMemberDeclaration ::= .ClassDeclaration 
InterfaceMemberDeclaration ::= .InterfaceDeclaration 
InterfaceMemberDeclaration ::= .SEMICOLON 
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiers ::= .ConstantModifier 
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifier ::= .Annotation 
ConstantModifier ::= .public 
ConstantModifier ::= .static 
ConstantModifier ::= .final 
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
AbstractMethodModifier ::= .public 
AbstractMethodModifier ::= .abstract 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
AbstractMethodModifiersopt ::= . (476)
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
ConstantModifiersopt ::= . (478)
ConstantModifiersopt ::= .ConstantModifiers 
InterfaceMemberDeclarationsopt ::= . (480)
InterfaceMemberDeclarationsopt ::= .InterfaceMemberDeclarations 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 412 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 412 on "IDENTIFIER" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 412 on "short" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 412 on "long" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 412 on "int" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 412 on "float" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 412 on "double" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 412 on "char" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 412 on "byte" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 412 on "boolean" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)




STATE 416 ----------------------------------------------------------------------
( 362 )

EnumConstants ::= EnumConstants COMMA  .EnumConstant 

identifier ::= .IDENTIFIER 
EnumConstant ::= .Annotationsopt identifier Argumentsopt ClassBodyopt 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
EnumConstant ::= .identifier 
Annotationsopt ::= . (524)
Annotationsopt ::= .Annotations 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1067:20:1067:29:33618:33627: Warning: Shift/reduce conflict in state 416 on "IDENTIFIER" with rule 524

EnumConstant ::= .Annotationsopt identifier Argumentsopt ClassBodyopt 
Annotationsopt ::= . (524)




STATE 417 ----------------------------------------------------------------------
( 364 424 444 463 )

ClassBody ::= LBRACE  .ClassBodyDeclarationsopt RBRACE 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
ClassBodyDeclarations ::= .ClassBodyDeclaration 
ClassBodyDeclarations ::= .ClassBodyDeclarations ClassBodyDeclaration 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .InstanceInitializer 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiers ::= .FieldModifier 
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifier ::= .Annotation 
FieldModifier ::= .public 
FieldModifier ::= .protected 
FieldModifier ::= .private 
FieldModifier ::= .static 
FieldModifier ::= .final 
FieldModifier ::= .transient 
FieldModifier ::= .volatile 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiers ::= .MethodModifier 
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifier ::= .Annotations 
MethodModifier ::= .public 
MethodModifier ::= .protected 
MethodModifier ::= .private 
MethodModifier ::= .abstract 
MethodModifier ::= .static 
MethodModifier ::= .final 
MethodModifier ::= .synchronized 
MethodModifier ::= .native 
MethodModifier ::= .strictfp 
InstanceInitializer ::= .Block 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifier ::= .Annotations 
ConstructorModifier ::= .public 
ConstructorModifier ::= .protected 
ConstructorModifier ::= .private 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ConstructorModifiersopt ::= . (502)
ConstructorModifiersopt ::= .ConstructorModifiers 
MethodModifiersopt ::= . (510)
MethodModifiersopt ::= .MethodModifiers 
FieldModifiersopt ::= . (512)
FieldModifiersopt ::= .FieldModifiers 
ClassBodyDeclarationsopt ::= . (514)
ClassBodyDeclarationsopt ::= .ClassBodyDeclarations 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 417 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "short" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "long" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "int" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "float" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "double" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "char" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "byte" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "boolean" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "IDENTIFIER" between rule 510 and rule 502 starting at line 1034, column 29

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= . (502)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "IDENTIFIER" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 417 on "LESS" between rule 510 and rule 502 starting at line 1034, column 29

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= . (502)




STATE 430 ----------------------------------------------------------------------
( 383 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)
EnumConstant ::= identifier . (307)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 430 on "LESS" between rule 29 and rule 49 starting at line 275, column 20

ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .ShiftExpression 
ShiftExpression ::= .AdditiveExpression 
AdditiveExpression ::= .MultiplicativeExpression 
MultiplicativeExpression ::= .UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
PostfixExpression ::= .ExpressionName 
ExpressionName ::= identifier . (49)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 430 on "LBRACKET" between rule 29 and rule 49 starting at line 275, column 20

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ExpressionName ::= identifier . (49)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 430 on "LBRACKET" between rule 29 and rule 32 starting at line 236, column 18

ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ArrayType ::= .Type LBRACKET RBRACKET 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 430 on "DOT" between rule 29 and rule 55 starting at line 284, column 19

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
ExpressionName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= identifier . (55)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:231:14:231:27:6018:6031: Warning: Reduce/reduce conflict in state 430 on "DOT" between rule 29 and rule 32 starting at line 236, column 18

PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .ClassOrInterfaceType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= identifier . (29)
------------------------------------------------------------------------------
PrimaryNoNewArray ::= .Type DOT class 
Type ::= .ReferenceType 
ReferenceType ::= .TypeVariable 
TypeVariable ::= identifier . (32)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:275:20:275:33:7072:7085: Warning: Reduce/reduce conflict in state 430 on "COLON" between rule 49 and rule 307 starting at line 721, column 18

SwitchLabel ::= case  .ConstantExpression COLON 
ConstantExpression ::= .Expression 
Expression ::= .AssignmentExpression 
AssignmentExpression ::= .ConditionalExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
ExclusiveOrExpression ::= .AndExpression 
AndExpression ::= .EqualityExpression 
EqualityExpression ::= .RelationalExpression 
RelationalExpression ::= .ShiftExpression 
ShiftExpression ::= .AdditiveExpression 
AdditiveExpression ::= .MultiplicativeExpression 
MultiplicativeExpression ::= .UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
PostfixExpression ::= .ExpressionName 
ExpressionName ::= identifier . (49)
------------------------------------------------------------------------------
SwitchLabel ::= case  .EnumConstant COLON 
EnumConstant ::= identifier . (307)




STATE 431 ----------------------------------------------------------------------
( 384 )

BlockStatements ::= BlockStatements  .BlockStatement 
SwitchBlockStatementGroup ::= SwitchLabels BlockStatements . (301)

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 431 on "double" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 431 on "float" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 431 on "char" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 431 on "long" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 431 on "int" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 431 on "short" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 431 on "byte" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 431 on "boolean" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:977:26:977:35:31245:31254: Warning: Shift/reduce conflict in state 431 on "IDENTIFIER" with rule 464

LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
VariableModifiersopt ::= . (464)




STATE 441 ----------------------------------------------------------------------
( 412 )

InterfaceMemberDeclarations ::= InterfaceMemberDeclarations  .
                                InterfaceMemberDeclaration 
InterfaceMemberDeclarationsopt ::= InterfaceMemberDeclarations . (481)

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
InterfaceMemberDeclaration ::= .AbstractMethodDeclaration 
InterfaceMemberDeclaration ::= .ClassDeclaration 
InterfaceMemberDeclaration ::= .InterfaceDeclaration 
InterfaceMemberDeclaration ::= .SEMICOLON 
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiers ::= .ConstantModifier 
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifier ::= .Annotation 
ConstantModifier ::= .public 
ConstantModifier ::= .static 
ConstantModifier ::= .final 
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
AbstractMethodModifier ::= .public 
AbstractMethodModifier ::= .abstract 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
AbstractMethodModifiersopt ::= . (476)
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
ConstantModifiersopt ::= . (478)
ConstantModifiersopt ::= .ConstantModifiers 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 441 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 441 on "IDENTIFIER" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 441 on "short" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 441 on "long" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 441 on "int" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 441 on "float" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 441 on "double" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 441 on "char" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 441 on "byte" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:998:26:998:35:31881:31890: Warning: Reduce/reduce conflict in state 441 on "boolean" between rule 478 and rule 476 starting at line 995, column 32

ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiersopt ::= . (478)
------------------------------------------------------------------------------
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiersopt ::= . (476)




STATE 443 ----------------------------------------------------------------------
( 414 )

EnumBodyDeclarations ::= SEMICOLON  .ClassBodyDeclarationsopt 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
ClassBodyDeclarations ::= .ClassBodyDeclaration 
ClassBodyDeclarations ::= .ClassBodyDeclarations ClassBodyDeclaration 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .InstanceInitializer 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiers ::= .FieldModifier 
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifier ::= .Annotation 
FieldModifier ::= .public 
FieldModifier ::= .protected 
FieldModifier ::= .private 
FieldModifier ::= .static 
FieldModifier ::= .final 
FieldModifier ::= .transient 
FieldModifier ::= .volatile 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiers ::= .MethodModifier 
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifier ::= .Annotations 
MethodModifier ::= .public 
MethodModifier ::= .protected 
MethodModifier ::= .private 
MethodModifier ::= .abstract 
MethodModifier ::= .static 
MethodModifier ::= .final 
MethodModifier ::= .synchronized 
MethodModifier ::= .native 
MethodModifier ::= .strictfp 
InstanceInitializer ::= .Block 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifier ::= .Annotations 
ConstructorModifier ::= .public 
ConstructorModifier ::= .protected 
ConstructorModifier ::= .private 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ConstructorModifiersopt ::= . (502)
ConstructorModifiersopt ::= .ConstructorModifiers 
MethodModifiersopt ::= . (510)
MethodModifiersopt ::= .MethodModifiers 
FieldModifiersopt ::= . (512)
FieldModifiersopt ::= .FieldModifiers 
ClassBodyDeclarationsopt ::= . (514)
ClassBodyDeclarationsopt ::= .ClassBodyDeclarations 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1007:27:1007:36:32164:32173: Warning: Shift/reduce conflict in state 443 on "AT" with rule 484

AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
InterfaceModifiersopt ::= . (484)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "short" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "long" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "int" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "float" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "double" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "char" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "byte" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "boolean" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "IDENTIFIER" between rule 510 and rule 502 starting at line 1034, column 29

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= . (502)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "IDENTIFIER" between rule 510 and rule 512 starting at line 1049, column 23

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiersopt ::= . (512)

e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:1046:24:1046:33:33112:33121: Warning: Reduce/reduce conflict in state 443 on "LESS" between rule 510 and rule 502 starting at line 1034, column 29

MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiersopt ::= . (510)
------------------------------------------------------------------------------
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiersopt ::= . (502)



e:/LPG2-grammars-example/java-ts-version/GJavaParser.g:163:5:163:19:4259:4273: Warning: Grammar is not LALR(1) - it contains 546 reduce/reduce conflicts and 161 shift/reduce conflicts.

Number of Terminals: 119
Number of Nonterminals: 248
Number of Productions: 540
Number of Items: 1513
Number of Scopes: 84
Number of States: 479
Number of Shift actions: 1508
Number of Goto actions: 2215
Number of Shift/Reduce actions: 2238
Number of Goto/Reduce actions: 3193
Number of Reduce actions: 3076
Number of Shift-Reduce conflicts: 161
Number of Reduce-Reduce conflicts: 546
Number of Keyword/Identifier Shift conflicts: 0
Number of Keyword/Identifier Shift-Reduce conflicts: 0
Number of Keyword/Identifier Reduce-Reduce conflicts: 0


 The LALR Parser Generator              2.1.01 (Aug 13 2021)

Shift STATES: 


STATE 1 ------------------------------------------------------------------------
( )

'%accept' ::= .CompilationUnit 

CompilationUnit ::= .ClassBodyDeclarationsoptMarker ClassBodyDeclarationsopt 
CompilationUnit ::= .LPGUserActionMarker LPGUserAction 
CompilationUnit ::= .PackageDeclarationopt ImportDeclarationsopt 
                    TypeDeclarationsopt 
PackageDeclaration ::= .Annotationsopt package PackageName SEMICOLON 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Annotationsopt ::= . (524)
Annotationsopt ::= .Annotations 
PackageDeclarationopt ::= . (530)
PackageDeclarationopt ::= .PackageDeclaration 

LPGUserActionMarker               Shift  4
ClassBodyDeclarationsoptMarker    Shift  5
AT                                Shift  7

CompilationUnit                   Goto   2
PackageDeclarationopt             Goto   3
Annotationsopt                    Goto   6
Annotation                        Gt/Rd  229
SingleElementAnnotation           Gt/Rd  233
MarkerAnnotation                  Gt/Rd  232
NormalAnnotation                  Gt/Rd  231
Annotations                       Goto   8
PackageDeclaration                Gt/Rd  531

EOF_TOKEN                         Reduce 530
strictfp                          Reduce 530
static                            Reduce 530
public                            Reduce 530
protected                         Reduce 530
private                           Reduce 530
interface                         Reduce 530
import                            Reduce 530
final                             Reduce 530
enum                              Reduce 530
class                             Reduce 530
abstract                          Reduce 530
SEMICOLON                         Reduce 530
package                           Reduce 524

Default reduction to rule  530


STATE 2 ------------------------------------------------------------------------
( 1 )

'%accept' ::= CompilationUnit . (0)

EOF_TOKEN    Accept


STATE 3 ------------------------------------------------------------------------
( 1 )

CompilationUnit ::= PackageDeclarationopt  .ImportDeclarationsopt 
                    TypeDeclarationsopt 

ImportDeclarations ::= .ImportDeclaration 
ImportDeclarations ::= .ImportDeclarations ImportDeclaration 
ImportDeclaration ::= .SingleTypeImportDeclaration 
ImportDeclaration ::= .TypeImportOnDemandDeclaration 
ImportDeclaration ::= .SingleStaticImportDeclaration 
ImportDeclaration ::= .StaticImportOnDemandDeclaration 
SingleTypeImportDeclaration ::= .import TypeName SEMICOLON 
TypeImportOnDemandDeclaration ::= .import PackageOrTypeName DOT MULTIPLY 
                                  SEMICOLON 
SingleStaticImportDeclaration ::= .import static TypeName DOT identifier 
                                  SEMICOLON 
StaticImportOnDemandDeclaration ::= .import static TypeName DOT MULTIPLY 
                                    SEMICOLON 
ImportDeclarationsopt ::= . (528)
ImportDeclarationsopt ::= .ImportDeclarations 

import                             Shift  10

ImportDeclarationsopt              Goto   9
StaticImportOnDemandDeclaration    Gt/Rd  66
SingleStaticImportDeclaration      Gt/Rd  65
TypeImportOnDemandDeclaration      Gt/Rd  64
SingleTypeImportDeclaration        Gt/Rd  63
ImportDeclarations                 Goto   11
ImportDeclaration                  Gt/Rd  58

EOF_TOKEN                          Reduce 528
strictfp                           Reduce 528
static                             Reduce 528
public                             Reduce 528
protected                          Reduce 528
private                            Reduce 528
interface                          Reduce 528
final                              Reduce 528
enum                               Reduce 528
class                              Reduce 528
abstract                           Reduce 528
AT                                 Reduce 528
SEMICOLON                          Reduce 528

Default reduction to rule  528


STATE 4 ------------------------------------------------------------------------
( 1 )

CompilationUnit ::= LPGUserActionMarker  .LPGUserAction 

identifier ::= .IDENTIFIER 
LPGUserAction ::= .BlockStatementsopt 
LPGUserAction ::= .BeginAction BlockStatementsopt EndAction 
LPGUserAction ::= .BeginJava BlockStatementsopt EndJava 
LPGUserAction ::= .NoAction 
LPGUserAction ::= .NullAction 
LPGUserAction ::= .BadAction 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

BadAction                               Sh/Rd  9
NullAction                              Sh/Rd  8
NoAction                                Sh/Rd  7
BeginJava                               Shift  12
BeginAction                             Shift  13
AT                                      Shift  7
strictfp                                Sh/Rd  86
final                                   Shift  18
static                                  Sh/Rd  84
abstract                                Sh/Rd  83
private                                 Sh/Rd  82
protected                               Sh/Rd  81
public                                  Sh/Rd  80
for                                     Shift  22
while                                   Shift  23
if                                      Shift  24
LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58

LPGUserAction                           Gt/Rd  2
BlockStatementsopt                      Gt/Rd  4
BlockStatement                          Gt/Rd  251
LocalVariableDeclaration                Goto   14
SingleElementAnnotation                 Gt/Rd  233
MarkerAnnotation                        Gt/Rd  232
NormalAnnotation                        Gt/Rd  231
Annotations                             Goto   15
VariableModifiers                       Goto   16
VariableModifier                        Gt/Rd  136
VariableModifiersopt                    Goto   17
EnumDeclaration                         Gt/Rd  75
NormalClassDeclaration                  Gt/Rd  74
Annotation                              Goto   19
ClassModifiers                          Goto   20
ClassModifier                           Gt/Rd  77
ClassModifiersopt                       Goto   21
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
identifier                              Goto   36
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
Statement                               Gt/Rd  255
ClassDeclaration                        Gt/Rd  254
LocalVariableDeclarationStatement       Gt/Rd  253
BlockStatements                         Goto   59

EOF_TOKEN                               Reduce 498
enum                                    Reduce 522
class                                   Reduce 522

Default reduction to rule  522


STATE 5 ------------------------------------------------------------------------
( 1 )

CompilationUnit ::= ClassBodyDeclarationsoptMarker  .ClassBodyDeclarationsopt 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
ClassBodyDeclarations ::= .ClassBodyDeclaration 
ClassBodyDeclarations ::= .ClassBodyDeclarations ClassBodyDeclaration 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .InstanceInitializer 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiers ::= .FieldModifier 
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifier ::= .Annotation 
FieldModifier ::= .public 
FieldModifier ::= .protected 
FieldModifier ::= .private 
FieldModifier ::= .static 
FieldModifier ::= .final 
FieldModifier ::= .transient 
FieldModifier ::= .volatile 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiers ::= .MethodModifier 
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifier ::= .Annotations 
MethodModifier ::= .public 
MethodModifier ::= .protected 
MethodModifier ::= .private 
MethodModifier ::= .abstract 
MethodModifier ::= .static 
MethodModifier ::= .final 
MethodModifier ::= .synchronized 
MethodModifier ::= .native 
MethodModifier ::= .strictfp 
InstanceInitializer ::= .Block 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifier ::= .Annotations 
ConstructorModifier ::= .public 
ConstructorModifier ::= .protected 
ConstructorModifier ::= .private 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ConstructorModifiersopt ::= . (502)
ConstructorModifiersopt ::= .ConstructorModifiers 
MethodModifiersopt ::= . (510)
MethodModifiersopt ::= .MethodModifiers 
FieldModifiersopt ::= . (512)
FieldModifiersopt ::= .FieldModifiers 
ClassBodyDeclarationsopt ::= . (514)
ClassBodyDeclarationsopt ::= .ClassBodyDeclarations 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

LBRACE                        Shift  25
AT                            Shift  7
volatile                      Sh/Rd  124
transient                     Sh/Rd  123
native                        Sh/Rd  151
synchronized                  Sh/Rd  150
final                         Shift  68
strictfp                      Shift  69
static                        Shift  70
abstract                      Shift  71
private                       Shift  72
protected                     Shift  73
public                        Shift  74
SEMICOLON                     Sh/Rd  105

ClassBodyDeclarationsopt      Gt/Rd  1
ConstructorDeclaration        Gt/Rd  100
StaticInitializer             Gt/Rd  99
InstanceInitializer           Gt/Rd  98
ClassMemberDeclaration        Gt/Rd  97
ConstructorModifiers          Goto   60
ConstructorModifier           Gt/Rd  165
ConstructorModifiersopt       Goto   61
Block                         Gt/Rd  160
FieldModifiersopt             Goto   62
FieldModifier                 Gt/Rd  115
SingleElementAnnotation       Gt/Rd  233
MarkerAnnotation              Gt/Rd  232
NormalAnnotation              Gt/Rd  231
FieldModifiers                Goto   63
MethodHeader                  Goto   64
Annotations                   Goto   65
MethodModifiers               Goto   66
MethodModifier                Gt/Rd  141
MethodModifiersopt            Goto   67
EnumDeclaration               Gt/Rd  75
NormalClassDeclaration        Gt/Rd  74
ClassModifiers                Goto   20
ClassModifier                 Gt/Rd  77
ClassModifiersopt             Goto   21
AnnotationTypeDeclaration     Gt/Rd  183
NormalInterfaceDeclaration    Gt/Rd  182
Annotation                    Goto   75
InterfaceModifiers            Goto   76
InterfaceModifier             Gt/Rd  185
InterfaceModifiersopt         Goto   77
InterfaceDeclaration          Gt/Rd  104
ClassDeclaration              Gt/Rd  103
MethodDeclaration             Gt/Rd  102
FieldDeclaration              Gt/Rd  101
ClassBodyDeclarations         Goto   78
ClassBodyDeclaration          Gt/Rd  95

interface                     Reduce 484
enum                          Reduce 522
class                         Reduce 522
void                          Reduce 510
short                         Reduce 510
long                          Reduce 510
int                           Reduce 510
float                         Reduce 510
double                        Reduce 510
char                          Reduce 510
byte                          Reduce 510
boolean                       Reduce 510
IDENTIFIER                    Reduce 510
LESS                          Reduce 510
EOF_TOKEN                     Reduce 514

Default reduction to rule  510


STATE 6 ------------------------------------------------------------------------
( 1 )

PackageDeclaration ::= Annotationsopt  .package PackageName SEMICOLON 

package    Shift  79



STATE 7 ------------------------------------------------------------------------
( 1 4 5 8 9 12 13 15 16 20 25 59 60 63 65 66 76 78 88 100 150 155 160 238 294 
  297 304 310 343 353 354 359 368 383 384 394 404 409 410 411 412 416 417 431 
  441 443 477 )

NormalAnnotation ::= AT  .TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= AT  .TypeName 
SingleElementAnnotation ::= AT  .TypeName LPAREN ElementValue RPAREN 

identifier ::= .IDENTIFIER 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 

IDENTIFIER    Sh/Rd  3

TypeName      Goto   80
identifier    Gt/Rd  29



STATE 8 ------------------------------------------------------------------------
( 1 310 383 416 )

Annotations ::= Annotations  .Annotation 
Annotationsopt ::= Annotations . (525)

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

AT                         Shift  7

Annotation                 Gt/Rd  230
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

IDENTIFIER                 Reduce 525
package                    Reduce 525

Default reduction to rule  525


STATE 9 ------------------------------------------------------------------------
( 3 )

CompilationUnit ::= PackageDeclarationopt ImportDeclarationsopt  .
                    TypeDeclarationsopt 

TypeDeclarations ::= .TypeDeclaration 
TypeDeclarations ::= .TypeDeclarations TypeDeclaration 
TypeDeclaration ::= .ClassDeclaration 
TypeDeclaration ::= .InterfaceDeclaration 
TypeDeclaration ::= .SEMICOLON 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 
TypeDeclarationsopt ::= . (526)
TypeDeclarationsopt ::= .TypeDeclarations 

SEMICOLON                     Sh/Rd  73
AT                            Shift  7
strictfp                      Shift  81
final                         Sh/Rd  85
static                        Shift  82
abstract                      Shift  83
private                       Shift  84
protected                     Shift  85
public                        Shift  86

TypeDeclarationsopt           Gt/Rd  57
InterfaceDeclaration          Gt/Rd  72
ClassDeclaration              Gt/Rd  71
InterfaceModifier             Gt/Rd  185
InterfaceModifiers            Goto   76
InterfaceModifiersopt         Goto   77
AnnotationTypeDeclaration     Gt/Rd  183
NormalInterfaceDeclaration    Gt/Rd  182
ClassModifier                 Gt/Rd  77
SingleElementAnnotation       Gt/Rd  233
MarkerAnnotation              Gt/Rd  232
NormalAnnotation              Gt/Rd  231
Annotation                    Goto   87
ClassModifiers                Goto   20
ClassModifiersopt             Goto   21
EnumDeclaration               Gt/Rd  75
NormalClassDeclaration        Gt/Rd  74
TypeDeclarations              Goto   88
TypeDeclaration               Gt/Rd  60

enum                          Reduce 522
class                         Reduce 522
interface                     Reduce 484
EOF_TOKEN                     Reduce 526

Default reduction to rule  522


STATE 10 -----------------------------------------------------------------------
( 3 11 )

SingleTypeImportDeclaration ::= import  .TypeName SEMICOLON 
TypeImportOnDemandDeclaration ::= import  .PackageOrTypeName DOT MULTIPLY 
                                  SEMICOLON 
SingleStaticImportDeclaration ::= import  .static TypeName DOT identifier 
                                  SEMICOLON 
StaticImportOnDemandDeclaration ::= import  .static TypeName DOT MULTIPLY 
                                    SEMICOLON 

identifier ::= .IDENTIFIER 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
PackageOrTypeName ::= .identifier 
PackageOrTypeName ::= .PackageOrTypeName DOT identifier 

static               Shift  89
IDENTIFIER           Sh/Rd  3

TypeName             Goto   90
PackageOrTypeName    Goto   91
identifier           Goto   92



STATE 11 -----------------------------------------------------------------------
( 3 )

ImportDeclarations ::= ImportDeclarations  .ImportDeclaration 
ImportDeclarationsopt ::= ImportDeclarations . (529)

ImportDeclaration ::= .SingleTypeImportDeclaration 
ImportDeclaration ::= .TypeImportOnDemandDeclaration 
ImportDeclaration ::= .SingleStaticImportDeclaration 
ImportDeclaration ::= .StaticImportOnDemandDeclaration 
SingleTypeImportDeclaration ::= .import TypeName SEMICOLON 
TypeImportOnDemandDeclaration ::= .import PackageOrTypeName DOT MULTIPLY 
                                  SEMICOLON 
SingleStaticImportDeclaration ::= .import static TypeName DOT identifier 
                                  SEMICOLON 
StaticImportOnDemandDeclaration ::= .import static TypeName DOT MULTIPLY 
                                    SEMICOLON 

import                             Shift  10

ImportDeclaration                  Gt/Rd  59
StaticImportOnDemandDeclaration    Gt/Rd  66
SingleStaticImportDeclaration      Gt/Rd  65
TypeImportOnDemandDeclaration      Gt/Rd  64
SingleTypeImportDeclaration        Gt/Rd  63

EOF_TOKEN                          Reduce 529
strictfp                           Reduce 529
static                             Reduce 529
public                             Reduce 529
protected                          Reduce 529
private                            Reduce 529
interface                          Reduce 529
final                              Reduce 529
enum                               Reduce 529
class                              Reduce 529
abstract                           Reduce 529
AT                                 Reduce 529
SEMICOLON                          Reduce 529

Default reduction to rule  529


STATE 12 -----------------------------------------------------------------------
( 4 )

LPGUserAction ::= BeginJava  .BlockStatementsopt EndJava 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

try                                     Shift  58
throw                                   Shift  57
synchronized                            Shift  56
return                                  Shift  55
continue                                Shift  54
break                                   Shift  53
do                                      Shift  52
switch                                  Shift  51
assert                                  Shift  50
MINUS_MINUS                             Shift  42
PLUS_PLUS                               Shift  41
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
false                                   Sh/Rd  353
true                                    Sh/Rd  352
double                                  Sh/Rd  22
float                                   Sh/Rd  21
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
boolean                                 Sh/Rd  13
new                                     Shift  37
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
IDENTIFIER                              Sh/Rd  3
SEMICOLON                               Sh/Rd  284
LBRACE                                  Shift  25
if                                      Shift  24
while                                   Shift  23
for                                     Shift  22
strictfp                                Sh/Rd  86
static                                  Sh/Rd  84
abstract                                Sh/Rd  83
private                                 Sh/Rd  82
protected                               Sh/Rd  81
public                                  Sh/Rd  80
AT                                      Shift  7
final                                   Shift  18

BlockStatementsopt                      Goto   93
Statement                               Gt/Rd  255
ClassDeclaration                        Gt/Rd  254
LocalVariableDeclarationStatement       Gt/Rd  253
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PostfixExpression                       Goto   43
ArrayCreationExpression                 Gt/Rd  333
BooleanLiteral                          Gt/Rd  348
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
ClassType                               Gt/Rd  26
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
NumericType                             Gt/Rd  12
TypeName                                Goto   35
MethodName                              Goto   33
PrimaryNoNewArray                       Goto   38
ExpressionName                          Goto   44
ArrayAccess                             Goto   39
MethodInvocation                        Goto   47
FieldAccess                             Goto   40
ClassInstanceCreationExpression         Goto   46
Type                                    Goto   34
Literal                                 Gt/Rd  334
ClassName                               Goto   31
Primary                                 Goto   45
AmbiguousName                           Goto   30
LeftHandSide                            Goto   27
StatementExpression                     Goto   26
identifier                              Goto   36
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
ClassModifier                           Gt/Rd  77
ClassModifiers                          Goto   20
ClassModifiersopt                       Goto   21
EnumDeclaration                         Gt/Rd  75
NormalClassDeclaration                  Gt/Rd  74
VariableModifiersopt                    Goto   17
VariableModifier                        Gt/Rd  136
Annotation                              Goto   19
SingleElementAnnotation                 Gt/Rd  233
MarkerAnnotation                        Gt/Rd  232
NormalAnnotation                        Gt/Rd  231
Annotations                             Goto   15
VariableModifiers                       Goto   16
LocalVariableDeclaration                Goto   14
BlockStatements                         Goto   59
BlockStatement                          Gt/Rd  251

enum                                    Reduce 522
class                                   Reduce 522
EndJava                                 Reduce 498

Default reduction to rule  522


STATE 13 -----------------------------------------------------------------------
( 4 )

LPGUserAction ::= BeginAction  .BlockStatementsopt EndAction 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

try                                     Shift  58
throw                                   Shift  57
synchronized                            Shift  56
return                                  Shift  55
continue                                Shift  54
break                                   Shift  53
do                                      Shift  52
switch                                  Shift  51
assert                                  Shift  50
MINUS_MINUS                             Shift  42
PLUS_PLUS                               Shift  41
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
false                                   Sh/Rd  353
true                                    Sh/Rd  352
double                                  Sh/Rd  22
float                                   Sh/Rd  21
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
boolean                                 Sh/Rd  13
new                                     Shift  37
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
IDENTIFIER                              Sh/Rd  3
SEMICOLON                               Sh/Rd  284
LBRACE                                  Shift  25
if                                      Shift  24
while                                   Shift  23
for                                     Shift  22
strictfp                                Sh/Rd  86
static                                  Sh/Rd  84
abstract                                Sh/Rd  83
private                                 Sh/Rd  82
protected                               Sh/Rd  81
public                                  Sh/Rd  80
AT                                      Shift  7
final                                   Shift  18

BlockStatementsopt                      Goto   94
Statement                               Gt/Rd  255
ClassDeclaration                        Gt/Rd  254
LocalVariableDeclarationStatement       Gt/Rd  253
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PostfixExpression                       Goto   43
ArrayCreationExpression                 Gt/Rd  333
BooleanLiteral                          Gt/Rd  348
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
ClassType                               Gt/Rd  26
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
NumericType                             Gt/Rd  12
TypeName                                Goto   35
MethodName                              Goto   33
PrimaryNoNewArray                       Goto   38
ExpressionName                          Goto   44
ArrayAccess                             Goto   39
MethodInvocation                        Goto   47
FieldAccess                             Goto   40
ClassInstanceCreationExpression         Goto   46
Type                                    Goto   34
Literal                                 Gt/Rd  334
ClassName                               Goto   31
Primary                                 Goto   45
AmbiguousName                           Goto   30
LeftHandSide                            Goto   27
StatementExpression                     Goto   26
identifier                              Goto   36
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
ClassModifier                           Gt/Rd  77
ClassModifiers                          Goto   20
ClassModifiersopt                       Goto   21
EnumDeclaration                         Gt/Rd  75
NormalClassDeclaration                  Gt/Rd  74
VariableModifiersopt                    Goto   17
VariableModifier                        Gt/Rd  136
Annotation                              Goto   19
SingleElementAnnotation                 Gt/Rd  233
MarkerAnnotation                        Gt/Rd  232
NormalAnnotation                        Gt/Rd  231
Annotations                             Goto   15
VariableModifiers                       Goto   16
LocalVariableDeclaration                Goto   14
BlockStatements                         Goto   59
BlockStatement                          Gt/Rd  251

enum                                    Reduce 522
class                                   Reduce 522
EndAction                               Reduce 498

Default reduction to rule  522


STATE 14 -----------------------------------------------------------------------
( 4 12 13 25 59 343 384 431 )

LocalVariableDeclarationStatement ::= LocalVariableDeclaration  .SEMICOLON 

SEMICOLON    Sh/Rd  256



STATE 15 -----------------------------------------------------------------------
( 4 12 13 16 25 59 100 294 297 343 353 368 384 394 431 )

VariableModifier ::= Annotations . (139)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

AT                         Shift  7

Annotation                 Gt/Rd  230
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

IDENTIFIER                 Reduce 139
short                      Reduce 139
long                       Reduce 139
int                        Reduce 139
float                      Reduce 139
final                      Reduce 139
double                     Reduce 139
char                       Reduce 139
byte                       Reduce 139
boolean                    Reduce 139

Default reduction to rule  139


STATE 16 -----------------------------------------------------------------------
( 4 12 13 25 59 100 294 297 343 353 368 384 394 431 )

VariableModifiers ::= VariableModifiers  .VariableModifier 
VariableModifiersopt ::= VariableModifiers . (465)

VariableModifier ::= .final 
VariableModifier ::= .Annotations 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

final                      Sh/Rd  138
AT                         Shift  7

VariableModifier           Gt/Rd  137
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   15
Annotation                 Gt/Rd  229

IDENTIFIER                 Reduce 465
short                      Reduce 465
long                       Reduce 465
int                        Reduce 465
float                      Reduce 465
double                     Reduce 465
char                       Reduce 465
byte                       Reduce 465
boolean                    Reduce 465

Default reduction to rule  465


STATE 17 -----------------------------------------------------------------------
( 4 12 13 25 59 343 384 431 )

LocalVariableDeclaration ::= VariableModifiersopt  .Type VariableDeclarators 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ReferenceType           Gt/Rd  11
PrimitiveType           Gt/Rd  10
ClassType               Gt/Rd  26
TypeName                Goto   95
identifier              Goto   96
Type                    Goto   97
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 18 -----------------------------------------------------------------------
( 4 12 13 25 59 343 384 431 )

ClassModifier ::= final . (85)
VariableModifier ::= final . (138)

strictfp      Reduce 85
static        Reduce 85
public        Reduce 85
protected     Reduce 85
private       Reduce 85
enum          Reduce 85
class         Reduce 85
abstract      Reduce 85
IDENTIFIER    Reduce 138
short         Reduce 138
long          Reduce 138
int           Reduce 138
float         Reduce 138
final         Reduce 85
double        Reduce 138
char          Reduce 138
byte          Reduce 138
boolean       Reduce 138
AT            Reduce 85

Default reduction to rule  85


STATE 19 -----------------------------------------------------------------------
( 4 12 13 25 59 343 384 431 )

ClassModifier ::= Annotation . (79)
Annotations ::= Annotation . (229)

strictfp      Reduce 79
static        Reduce 79
public        Reduce 79
protected     Reduce 79
private       Reduce 79
enum          Reduce 79
class         Reduce 79
abstract      Reduce 79
IDENTIFIER    Reduce 229
short         Reduce 229
long          Reduce 229
int           Reduce 229
float         Reduce 229
final         Reduce 79
double        Reduce 229
char          Reduce 229
byte          Reduce 229
boolean       Reduce 229
AT            Reduce 79

Default reduction to rule  79


STATE 20 -----------------------------------------------------------------------
( 4 5 9 12 13 25 59 78 88 343 354 384 411 412 417 431 441 443 )

ClassModifiers ::= ClassModifiers  .ClassModifier 
ClassModifiersopt ::= ClassModifiers . (523)

ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

strictfp                   Sh/Rd  86
final                      Sh/Rd  85
static                     Sh/Rd  84
abstract                   Sh/Rd  83
private                    Sh/Rd  82
protected                  Sh/Rd  81
public                     Sh/Rd  80
AT                         Shift  7

ClassModifier              Gt/Rd  78
Annotation                 Gt/Rd  79
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

enum                       Reduce 523
class                      Reduce 523

Default reduction to rule  523


STATE 21 -----------------------------------------------------------------------
( 4 5 9 12 13 25 59 78 88 343 354 384 411 412 417 431 441 443 )

NormalClassDeclaration ::= ClassModifiersopt  .class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
EnumDeclaration ::= ClassModifiersopt  .enum identifier Interfacesopt EnumBody 

enum     Shift  98
class    Shift  99



STATE 22 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 343 365 367 384 431 447 )

BasicForStatement ::= for  .LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= for  .LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 

LPAREN    Shift  100



STATE 23 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 343 365 367 384 431 447 )

WhileStatement ::= while  .LPAREN Expression RPAREN Statement 

LPAREN    Shift  101



STATE 24 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 343 365 367 384 431 447 )

IfThenStatement ::= if  .LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= if  .LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 

LPAREN    Shift  102



STATE 25 -----------------------------------------------------------------------
( 4 5 12 13 25 52 58 59 64 70 78 133 252 253 292 293 343 365 367 371 384 387 
  417 431 443 447 449 450 470 479 )

Block ::= LBRACE  .BlockStatementsopt RBRACE 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

try                                     Shift  58
throw                                   Shift  57
synchronized                            Shift  56
return                                  Shift  55
continue                                Shift  54
break                                   Shift  53
do                                      Shift  52
switch                                  Shift  51
assert                                  Shift  50
MINUS_MINUS                             Shift  42
PLUS_PLUS                               Shift  41
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
false                                   Sh/Rd  353
true                                    Sh/Rd  352
double                                  Sh/Rd  22
float                                   Sh/Rd  21
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
boolean                                 Sh/Rd  13
new                                     Shift  37
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
IDENTIFIER                              Sh/Rd  3
SEMICOLON                               Sh/Rd  284
LBRACE                                  Shift  25
if                                      Shift  24
while                                   Shift  23
for                                     Shift  22
strictfp                                Sh/Rd  86
static                                  Sh/Rd  84
abstract                                Sh/Rd  83
private                                 Sh/Rd  82
protected                               Sh/Rd  81
public                                  Sh/Rd  80
AT                                      Shift  7
final                                   Shift  18

BlockStatementsopt                      Goto   103
Statement                               Gt/Rd  255
ClassDeclaration                        Gt/Rd  254
LocalVariableDeclarationStatement       Gt/Rd  253
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PostfixExpression                       Goto   43
ArrayCreationExpression                 Gt/Rd  333
BooleanLiteral                          Gt/Rd  348
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
ClassType                               Gt/Rd  26
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
NumericType                             Gt/Rd  12
TypeName                                Goto   35
MethodName                              Goto   33
PrimaryNoNewArray                       Goto   38
ExpressionName                          Goto   44
ArrayAccess                             Goto   39
MethodInvocation                        Goto   47
FieldAccess                             Goto   40
ClassInstanceCreationExpression         Goto   46
Type                                    Goto   34
Literal                                 Gt/Rd  334
ClassName                               Goto   31
Primary                                 Goto   45
AmbiguousName                           Goto   30
LeftHandSide                            Goto   27
StatementExpression                     Goto   26
identifier                              Goto   36
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
ClassModifier                           Gt/Rd  77
ClassModifiers                          Goto   20
ClassModifiersopt                       Goto   21
EnumDeclaration                         Gt/Rd  75
NormalClassDeclaration                  Gt/Rd  74
VariableModifiersopt                    Goto   17
VariableModifier                        Gt/Rd  136
Annotation                              Goto   19
SingleElementAnnotation                 Gt/Rd  233
MarkerAnnotation                        Gt/Rd  232
NormalAnnotation                        Gt/Rd  231
Annotations                             Goto   15
VariableModifiers                       Goto   16
LocalVariableDeclaration                Goto   14
BlockStatements                         Goto   59
BlockStatement                          Gt/Rd  251

enum                                    Reduce 522
class                                   Reduce 522
RBRACE                                  Reduce 498

Default reduction to rule  522


STATE 26 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

ExpressionStatement ::= StatementExpression  .SEMICOLON 

SEMICOLON    Sh/Rd  287



STATE 27 -----------------------------------------------------------------------
( 4 12 13 25 28 50 52 55 57 59 100 101 102 104 110 128 133 137 139 142 147 193 
  208 216 244 248 249 250 252 253 278 284 291 330 331 336 337 343 365 366 367 
  368 369 370 371 377 383 384 423 425 431 434 435 445 447 448 449 450 464 469 
  470 479 )

Assignment ::= LeftHandSide  .AssignmentOperator AssignmentExpression 

AssignmentOperator ::= .EQUAL 
AssignmentOperator ::= .MULTIPLY_EQUAL 
AssignmentOperator ::= .DIVIDE_EQUAL 
AssignmentOperator ::= .REMAINDER_EQUAL 
AssignmentOperator ::= .PLUS_EQUAL 
AssignmentOperator ::= .MINUS_EQUAL 
AssignmentOperator ::= .LEFT_SHIFT_EQUAL 
AssignmentOperator ::= .GREATER GREATER EQUAL 
AssignmentOperator ::= .GREATER GREATER GREATER EQUAL 
AssignmentOperator ::= .AND_EQUAL 
AssignmentOperator ::= .XOR_EQUAL 
AssignmentOperator ::= .OR_EQUAL 

OR_EQUAL              Sh/Rd  445
XOR_EQUAL             Sh/Rd  444
AND_EQUAL             Sh/Rd  443
GREATER               Shift  105
LEFT_SHIFT_EQUAL      Sh/Rd  440
MINUS_EQUAL           Sh/Rd  439
PLUS_EQUAL            Sh/Rd  438
REMAINDER_EQUAL       Sh/Rd  437
DIVIDE_EQUAL          Sh/Rd  436
MULTIPLY_EQUAL        Sh/Rd  435
EQUAL                 Sh/Rd  434

AssignmentOperator    Goto   104



STATE 28 -----------------------------------------------------------------------
( 4 12 13 25 52 59 100 133 250 252 253 295 343 365 366 367 368 371 384 431 447 
  449 450 469 470 479 )

PrimaryNoNewArray ::= LPAREN  .Expression RPAREN 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   106
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 29 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

PrimaryNoNewArray ::= void  .DOT class 

DOT    Shift  124



STATE 30 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

ExpressionName ::= AmbiguousName  .DOT identifier 
MethodName ::= AmbiguousName  .DOT identifier 
AmbiguousName ::= AmbiguousName  .DOT identifier 

DOT    Shift  125



STATE 31 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

PrimaryNoNewArray ::= ClassName  .DOT this 
FieldAccess ::= ClassName  .DOT super DOT identifier 
MethodInvocation ::= ClassName  .DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 

DOT    Shift  126



STATE 32 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

FieldAccess ::= super  .DOT identifier 
MethodInvocation ::= super  .DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 

DOT    Shift  127



STATE 33 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

MethodInvocation ::= MethodName  .LPAREN ArgumentListopt RPAREN 

LPAREN    Shift  128



STATE 34 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

ArrayType ::= Type  .LBRACKET RBRACKET 
PrimaryNoNewArray ::= Type  .DOT class 

DOT         Shift  129
LBRACKET    Shift  130



STATE 35 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

ClassType ::= TypeName  .TypeArgumentsopt 
TypeName ::= TypeName  .DOT identifier 
ClassName ::= TypeName . (31)
MethodInvocation ::= TypeName  .DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 

TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

DOT                 Shift  131
LESS                Shift  132

TypeArgumentsopt    Gt/Rd  27
TypeArguments       Gt/Rd  539

LBRACKET            Reduce 538
RPAREN              Reduce 538

Default reduction to rule  538


STATE 36 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 343 365 367 384 431 447 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)
LabeledStatement ::= identifier  .COLON Statement 

COLON               Shift  133

LESS                Reduce 29
GREATER             Reduce 49
EQUAL               Reduce 49
LEFT_SHIFT_EQUAL    Reduce 49
PLUS_EQUAL          Reduce 49
PLUS_PLUS           Reduce 49
OR_EQUAL            Reduce 49
XOR_EQUAL           Reduce 49
LBRACKET            Reduce 29
DIVIDE_EQUAL        Reduce 49
MULTIPLY_EQUAL      Reduce 49
AND_EQUAL           Reduce 49
REMAINDER_EQUAL     Reduce 49
MINUS_EQUAL         Reduce 49
MINUS_MINUS         Reduce 49
LPAREN              Reduce 51
DOT                 Reduce 29

Default reduction to rule  49


STATE 37 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

ClassInstanceCreationExpression ::= new  .TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ArrayCreationExpression ::= new  .PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= new  .ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= new  .PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= new  .ClassOrInterfaceType Dims ArrayInitializer 

identifier ::= .IDENTIFIER 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

LESS                    Shift  132
boolean                 Sh/Rd  13
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
double                  Sh/Rd  22
float                   Sh/Rd  21
IDENTIFIER              Sh/Rd  3

ClassOrInterfaceType    Goto   134
PrimitiveType           Goto   135
TypeArgumentsopt        Goto   136
TypeArguments           Gt/Rd  539
NumericType             Gt/Rd  12
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
ClassType               Gt/Rd  26
identifier              Gt/Rd  29
TypeName                Goto   95



STATE 38 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  295 304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 
  383 384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

Primary ::= PrimaryNoNewArray . (332)
ArrayAccess ::= PrimaryNoNewArray  .LBRACKET Expression RBRACKET 

LBRACKET       Shift  137

IDENTIFIER     Reduce 332
void           Reduce 332
strictfp       Reduce 332
static         Reduce 332
short          Reduce 332
public         Reduce 332
protected      Reduce 332
private        Reduce 332
long           Reduce 332
interface      Reduce 332
int            Reduce 332
instanceof     Reduce 332
float          Reduce 332
final          Reduce 332
enum           Reduce 332
double         Reduce 332
class          Reduce 332
char           Reduce 332
byte           Reduce 332
boolean        Reduce 332
abstract       Reduce 332
GREATER        Reduce 332
EQUAL_EQUAL    Reduce 332
LESS_EQUAL     Reduce 332
LEFT_SHIFT     Reduce 332
LESS           Reduce 332
PLUS_PLUS      Reduce 332
PLUS           Reduce 332
RBRACE         Reduce 332
OR_OR          Reduce 332
XOR            Reduce 332
RBRACKET       Reduce 332
AT             Reduce 332
QUESTION       Reduce 332
SEMICOLON      Reduce 332
COLON          Reduce 332
DIVIDE         Reduce 332
DOT            Reduce 332
COMMA          Reduce 332
MULTIPLY       Reduce 332
RPAREN         Reduce 332
AND_AND        Reduce 332
AND            Reduce 332
REMAINDER      Reduce 332
NOT_EQUAL      Reduce 332
MINUS          Reduce 332
OR             Reduce 332
MINUS_MINUS    Reduce 332

Default reduction to rule  332


STATE 39 -----------------------------------------------------------------------
( 4 12 13 25 28 50 52 55 57 59 100 101 102 104 110 128 133 137 139 142 147 193 
  208 216 244 248 249 250 252 253 278 284 291 330 331 336 337 343 365 366 367 
  368 369 370 371 377 383 384 423 425 431 434 435 445 447 448 449 450 464 469 
  470 479 )

PrimaryNoNewArray ::= ArrayAccess . (343)
LeftHandSide ::= ArrayAccess . (433)

IDENTIFIER          Reduce 343
void                Reduce 343
strictfp            Reduce 343
static              Reduce 343
short               Reduce 343
public              Reduce 343
protected           Reduce 343
private             Reduce 343
long                Reduce 343
interface           Reduce 343
int                 Reduce 343
instanceof          Reduce 343
float               Reduce 343
final               Reduce 343
enum                Reduce 343
double              Reduce 343
class               Reduce 343
char                Reduce 343
byte                Reduce 343
boolean             Reduce 343
abstract            Reduce 343
EQUAL_EQUAL         Reduce 343
LESS_EQUAL          Reduce 343
LEFT_SHIFT          Reduce 343
LESS                Reduce 343
PLUS_PLUS           Reduce 343
PLUS                Reduce 343
RBRACE              Reduce 343
OR_OR               Reduce 343
XOR                 Reduce 343
RBRACKET            Reduce 343
LBRACKET            Reduce 343
AT                  Reduce 343
QUESTION            Reduce 343
SEMICOLON           Reduce 343
COLON               Reduce 343
DIVIDE              Reduce 343
DOT                 Reduce 343
COMMA               Reduce 343
MULTIPLY            Reduce 343
RPAREN              Reduce 343
AND_AND             Reduce 343
AND                 Reduce 343
REMAINDER           Reduce 343
NOT_EQUAL           Reduce 343
MINUS               Reduce 343
OR                  Reduce 343
MINUS_MINUS         Reduce 343
GREATER             Reduce 343
EQUAL               Reduce 433
LEFT_SHIFT_EQUAL    Reduce 433
PLUS_EQUAL          Reduce 433
OR_EQUAL            Reduce 433
XOR_EQUAL           Reduce 433
DIVIDE_EQUAL        Reduce 433
MULTIPLY_EQUAL      Reduce 433
AND_EQUAL           Reduce 433
REMAINDER_EQUAL     Reduce 433
MINUS_EQUAL         Reduce 433

Default reduction to rule  343


STATE 40 -----------------------------------------------------------------------
( 4 12 13 25 28 50 52 55 57 59 100 101 102 104 110 128 133 137 139 142 147 193 
  208 216 244 248 249 250 252 253 278 284 291 330 331 336 337 343 365 366 367 
  368 369 370 371 377 383 384 423 425 431 434 435 445 447 448 449 450 464 469 
  470 479 )

PrimaryNoNewArray ::= FieldAccess . (341)
LeftHandSide ::= FieldAccess . (432)

IDENTIFIER          Reduce 341
void                Reduce 341
strictfp            Reduce 341
static              Reduce 341
short               Reduce 341
public              Reduce 341
protected           Reduce 341
private             Reduce 341
long                Reduce 341
interface           Reduce 341
int                 Reduce 341
instanceof          Reduce 341
float               Reduce 341
final               Reduce 341
enum                Reduce 341
double              Reduce 341
class               Reduce 341
char                Reduce 341
byte                Reduce 341
boolean             Reduce 341
abstract            Reduce 341
EQUAL_EQUAL         Reduce 341
LESS_EQUAL          Reduce 341
LEFT_SHIFT          Reduce 341
LESS                Reduce 341
PLUS_PLUS           Reduce 341
PLUS                Reduce 341
RBRACE              Reduce 341
OR_OR               Reduce 341
XOR                 Reduce 341
RBRACKET            Reduce 341
LBRACKET            Reduce 341
AT                  Reduce 341
QUESTION            Reduce 341
SEMICOLON           Reduce 341
COLON               Reduce 341
DIVIDE              Reduce 341
DOT                 Reduce 341
COMMA               Reduce 341
MULTIPLY            Reduce 341
RPAREN              Reduce 341
AND_AND             Reduce 341
AND                 Reduce 341
REMAINDER           Reduce 341
NOT_EQUAL           Reduce 341
MINUS               Reduce 341
OR                  Reduce 341
MINUS_MINUS         Reduce 341
GREATER             Reduce 341
EQUAL               Reduce 432
LEFT_SHIFT_EQUAL    Reduce 432
PLUS_EQUAL          Reduce 432
OR_EQUAL            Reduce 432
XOR_EQUAL           Reduce 432
DIVIDE_EQUAL        Reduce 432
MULTIPLY_EQUAL      Reduce 432
AND_EQUAL           Reduce 432
REMAINDER_EQUAL     Reduce 432
MINUS_EQUAL         Reduce 432

Default reduction to rule  341


STATE 41 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 263 266 278 284 291 304 
  324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 383 384 
  423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

PreIncrementExpression ::= PLUS_PLUS  .UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  388
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 42 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 263 266 278 284 291 304 
  324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 383 384 
  423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

PreDecrementExpression ::= MINUS_MINUS  .UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  389
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 43 -----------------------------------------------------------------------
( 4 12 13 25 52 59 100 133 250 252 253 343 365 366 367 368 371 384 431 447 449 
  450 469 470 479 )

PostIncrementExpression ::= PostfixExpression  .PLUS_PLUS 
PostDecrementExpression ::= PostfixExpression  .MINUS_MINUS 

MINUS_MINUS    Sh/Rd  382
PLUS_PLUS      Sh/Rd  381



STATE 44 -----------------------------------------------------------------------
( 4 12 13 25 28 50 52 55 57 59 100 101 102 104 110 128 133 137 139 142 147 193 
  208 216 244 248 249 250 252 253 278 284 291 330 331 336 337 343 365 366 367 
  368 369 370 371 377 383 384 423 425 431 434 435 445 447 448 449 450 464 469 
  470 479 )

ArrayAccess ::= ExpressionName  .LBRACKET Expression RBRACKET 
PostfixExpression ::= ExpressionName . (378)
LeftHandSide ::= ExpressionName . (431)

LBRACKET            Shift  139

IDENTIFIER          Reduce 378
void                Reduce 378
strictfp            Reduce 378
static              Reduce 378
short               Reduce 378
public              Reduce 378
protected           Reduce 378
private             Reduce 378
long                Reduce 378
interface           Reduce 378
int                 Reduce 378
instanceof          Reduce 378
float               Reduce 378
final               Reduce 378
enum                Reduce 378
double              Reduce 378
class               Reduce 378
char                Reduce 378
byte                Reduce 378
boolean             Reduce 378
abstract            Reduce 378
EQUAL_EQUAL         Reduce 378
LESS_EQUAL          Reduce 378
LEFT_SHIFT          Reduce 378
LESS                Reduce 378
PLUS_PLUS           Reduce 378
PLUS                Reduce 378
RBRACE              Reduce 378
OR_OR               Reduce 378
XOR                 Reduce 378
RBRACKET            Reduce 378
AT                  Reduce 378
QUESTION            Reduce 378
SEMICOLON           Reduce 378
COLON               Reduce 378
DIVIDE              Reduce 378
COMMA               Reduce 378
MULTIPLY            Reduce 378
RPAREN              Reduce 378
AND_AND             Reduce 378
AND                 Reduce 378
REMAINDER           Reduce 378
NOT_EQUAL           Reduce 378
MINUS               Reduce 378
OR                  Reduce 378
MINUS_MINUS         Reduce 378
GREATER             Reduce 378
EQUAL               Reduce 431
LEFT_SHIFT_EQUAL    Reduce 431
PLUS_EQUAL          Reduce 431
OR_EQUAL            Reduce 431
XOR_EQUAL           Reduce 431
DIVIDE_EQUAL        Reduce 431
MULTIPLY_EQUAL      Reduce 431
AND_EQUAL           Reduce 431
REMAINDER_EQUAL     Reduce 431
MINUS_EQUAL         Reduce 431

Default reduction to rule  378


STATE 45 -----------------------------------------------------------------------
( 4 12 13 25 28 41 42 50 52 55 57 59 100 101 102 104 107 108 110 112 113 128 
  133 137 139 142 147 160 177 178 179 180 181 183 184 185 187 188 189 190 191 
  192 193 194 195 208 216 238 244 248 249 250 252 253 255 263 266 278 284 291 
  304 324 326 328 330 331 336 337 343 359 365 366 367 368 369 370 371 377 383 
  384 423 425 431 434 435 445 447 448 449 450 464 469 470 477 479 )

ClassInstanceCreationExpression ::= Primary  .DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary  .DOT identifier 
MethodInvocation ::= Primary  .DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
PostfixExpression ::= Primary . (377)

DOT            Shift  140

IDENTIFIER     Reduce 377
void           Reduce 377
strictfp       Reduce 377
static         Reduce 377
short          Reduce 377
public         Reduce 377
protected      Reduce 377
private        Reduce 377
long           Reduce 377
interface      Reduce 377
int            Reduce 377
instanceof     Reduce 377
float          Reduce 377
final          Reduce 377
enum           Reduce 377
double         Reduce 377
class          Reduce 377
char           Reduce 377
byte           Reduce 377
boolean        Reduce 377
abstract       Reduce 377
GREATER        Reduce 377
EQUAL_EQUAL    Reduce 377
LESS_EQUAL     Reduce 377
LEFT_SHIFT     Reduce 377
LESS           Reduce 377
PLUS_PLUS      Reduce 377
PLUS           Reduce 377
RBRACE         Reduce 377
OR_OR          Reduce 377
XOR            Reduce 377
RBRACKET       Reduce 377
AT             Reduce 377
QUESTION       Reduce 377
SEMICOLON      Reduce 377
COLON          Reduce 377
DIVIDE         Reduce 377
COMMA          Reduce 377
MULTIPLY       Reduce 377
RPAREN         Reduce 377
AND_AND        Reduce 377
AND            Reduce 377
REMAINDER      Reduce 377
NOT_EQUAL      Reduce 377
MINUS          Reduce 377
OR             Reduce 377
MINUS_MINUS    Reduce 377

Default reduction to rule  377


STATE 46 -----------------------------------------------------------------------
( 4 12 13 25 52 59 100 133 250 252 253 343 365 366 367 368 371 384 431 447 449 
  450 469 470 479 )

StatementExpression ::= ClassInstanceCreationExpression . (294)
PrimaryNoNewArray ::= ClassInstanceCreationExpression . (340)

SEMICOLON      Reduce 294
COMMA          Reduce 294
RPAREN         Reduce 294
PLUS_PLUS      Reduce 340
LBRACKET       Reduce 340
DOT            Reduce 340
MINUS_MINUS    Reduce 340

Default reduction to rule  340


STATE 47 -----------------------------------------------------------------------
( 4 12 13 25 52 59 100 133 250 252 253 343 365 366 367 368 371 384 431 447 449 
  450 469 470 479 )

StatementExpression ::= MethodInvocation . (293)
PrimaryNoNewArray ::= MethodInvocation . (342)

SEMICOLON      Reduce 293
COMMA          Reduce 293
RPAREN         Reduce 293
PLUS_PLUS      Reduce 342
LBRACKET       Reduce 342
DOT            Reduce 342
MINUS_MINUS    Reduce 342

Default reduction to rule  342


STATE 48 -----------------------------------------------------------------------
( 4 12 13 25 52 59 100 133 250 252 253 343 365 366 367 368 371 384 431 447 449 
  450 469 470 479 )

StatementExpression ::= PostDecrementExpression . (292)
PostfixExpression ::= PostDecrementExpression . (380)

SEMICOLON      Reduce 292
COMMA          Reduce 292
RPAREN         Reduce 292
PLUS_PLUS      Reduce 380
MINUS_MINUS    Reduce 380

Default reduction to rule  292


STATE 49 -----------------------------------------------------------------------
( 4 12 13 25 52 59 100 133 250 252 253 343 365 366 367 368 371 384 431 447 449 
  450 469 470 479 )

StatementExpression ::= PostIncrementExpression . (291)
PostfixExpression ::= PostIncrementExpression . (379)

SEMICOLON      Reduce 291
COMMA          Reduce 291
RPAREN         Reduce 291
PLUS_PLUS      Reduce 379
MINUS_MINUS    Reduce 379

Default reduction to rule  291


STATE 50 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

AssertStatement ::= assert  .Expression SEMICOLON 
AssertStatement ::= assert  .Expression COLON Expression SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   141
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 51 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

SwitchStatement ::= switch  .LPAREN Expression RPAREN SwitchBlock 

LPAREN    Shift  142



STATE 52 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

DoStatement ::= do  .Statement while LPAREN Expression RPAREN SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  22
while                                   Shift  23
if                                      Shift  24
LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58

Statement                               Goto   143
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
identifier                              Goto   36
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264



STATE 53 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

BreakStatement ::= break  .identifieropt SEMICOLON 

identifier ::= .IDENTIFIER 
identifieropt ::= . (452)
identifieropt ::= .identifier 

IDENTIFIER       Sh/Rd  3

identifieropt    Goto   144
identifier       Gt/Rd  453

SEMICOLON        Reduce 452

Default reduction to rule  452


STATE 54 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

ContinueStatement ::= continue  .identifieropt SEMICOLON 

identifier ::= .IDENTIFIER 
identifieropt ::= . (452)
identifieropt ::= .identifier 

IDENTIFIER       Sh/Rd  3

identifieropt    Goto   145
identifier       Gt/Rd  453

SEMICOLON        Reduce 452

Default reduction to rule  452


STATE 55 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

ReturnStatement ::= return  .Expressionopt SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
Expressionopt ::= . (456)
Expressionopt ::= .Expression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expressionopt                      Goto   146
Expression                         Gt/Rd  457
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
LeftHandSide                       Goto   27
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Goto   39
MethodInvocation                   Gt/Rd  342
FieldAccess                        Goto   40
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   44
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122
AssignmentExpression               Gt/Rd  446

SEMICOLON                          Reduce 456

Default reduction to rule  456


STATE 56 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

SynchronizedStatement ::= synchronized  .LPAREN Expression RPAREN Block 

LPAREN    Shift  147



STATE 57 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

ThrowStatement ::= throw  .Expression SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   148
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 58 -----------------------------------------------------------------------
( 4 12 13 25 52 59 133 252 253 343 365 367 371 384 431 447 449 450 470 479 )

TryStatement ::= try  .Block Catches 
TryStatement ::= try  .Block Catchesopt Finally 

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE    Shift  25

Block     Goto   149



STATE 59 -----------------------------------------------------------------------
( 4 12 13 25 343 )

BlockStatements ::= BlockStatements  .BlockStatement 
BlockStatementsopt ::= BlockStatements . (499)

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

try                                     Shift  58
throw                                   Shift  57
synchronized                            Shift  56
return                                  Shift  55
continue                                Shift  54
break                                   Shift  53
do                                      Shift  52
switch                                  Shift  51
assert                                  Shift  50
MINUS_MINUS                             Shift  42
PLUS_PLUS                               Shift  41
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
false                                   Sh/Rd  353
true                                    Sh/Rd  352
double                                  Sh/Rd  22
float                                   Sh/Rd  21
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
boolean                                 Sh/Rd  13
new                                     Shift  37
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
IDENTIFIER                              Sh/Rd  3
SEMICOLON                               Sh/Rd  284
LBRACE                                  Shift  25
if                                      Shift  24
while                                   Shift  23
for                                     Shift  22
strictfp                                Sh/Rd  86
static                                  Sh/Rd  84
abstract                                Sh/Rd  83
private                                 Sh/Rd  82
protected                               Sh/Rd  81
public                                  Sh/Rd  80
AT                                      Shift  7
final                                   Shift  18

BlockStatement                          Gt/Rd  252
Statement                               Gt/Rd  255
ClassDeclaration                        Gt/Rd  254
LocalVariableDeclarationStatement       Gt/Rd  253
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PostfixExpression                       Goto   43
ArrayCreationExpression                 Gt/Rd  333
BooleanLiteral                          Gt/Rd  348
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
ClassType                               Gt/Rd  26
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
NumericType                             Gt/Rd  12
TypeName                                Goto   35
MethodName                              Goto   33
PrimaryNoNewArray                       Goto   38
ExpressionName                          Goto   44
ArrayAccess                             Goto   39
MethodInvocation                        Goto   47
FieldAccess                             Goto   40
ClassInstanceCreationExpression         Goto   46
Type                                    Goto   34
Literal                                 Gt/Rd  334
ClassName                               Goto   31
Primary                                 Goto   45
AmbiguousName                           Goto   30
LeftHandSide                            Goto   27
StatementExpression                     Goto   26
identifier                              Goto   36
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
ClassModifier                           Gt/Rd  77
ClassModifiers                          Goto   20
ClassModifiersopt                       Goto   21
EnumDeclaration                         Gt/Rd  75
NormalClassDeclaration                  Gt/Rd  74
VariableModifiersopt                    Goto   17
VariableModifier                        Gt/Rd  136
Annotation                              Goto   19
SingleElementAnnotation                 Gt/Rd  233
MarkerAnnotation                        Gt/Rd  232
NormalAnnotation                        Gt/Rd  231
Annotations                             Goto   15
VariableModifiers                       Goto   16
LocalVariableDeclaration                Goto   14

enum                                    Reduce 522
class                                   Reduce 522
EOF_TOKEN                               Reduce 499
EndJava                                 Reduce 499
EndAction                               Reduce 499
RBRACE                                  Reduce 499

Default reduction to rule  499


STATE 60 -----------------------------------------------------------------------
( 5 78 417 443 )

ConstructorModifiers ::= ConstructorModifiers  .ConstructorModifier 
ConstructorModifiersopt ::= ConstructorModifiers . (503)

ConstructorModifier ::= .Annotations 
ConstructorModifier ::= .public 
ConstructorModifier ::= .protected 
ConstructorModifier ::= .private 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

private                    Sh/Rd  170
protected                  Sh/Rd  169
public                     Sh/Rd  168
AT                         Shift  7

ConstructorModifier        Gt/Rd  166
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   150
Annotation                 Gt/Rd  229

IDENTIFIER                 Reduce 503
LESS                       Reduce 503

Default reduction to rule  503


STATE 61 -----------------------------------------------------------------------
( 5 78 417 443 )

ConstructorDeclaration ::= ConstructorModifiersopt  .ConstructorDeclarator 
                           Throwsopt ConstructorBody 

TypeParameters ::= .LESS TypeParameterList GREATER 
ConstructorDeclarator ::= .TypeParametersopt SimpleTypeName LPAREN 
                          FormalParameterListopt RPAREN 
TypeParametersopt ::= . (520)
TypeParametersopt ::= .TypeParameters 

LESS                     Shift  153

ConstructorDeclarator    Goto   151
TypeParametersopt        Goto   152
TypeParameters           Gt/Rd  521

IDENTIFIER               Reduce 520

Default reduction to rule  520


STATE 62 -----------------------------------------------------------------------
( 5 78 417 443 )

FieldDeclaration ::= FieldModifiersopt  .Type VariableDeclarators SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ReferenceType           Gt/Rd  11
PrimitiveType           Gt/Rd  10
ClassType               Gt/Rd  26
TypeName                Goto   95
identifier              Goto   96
Type                    Goto   154
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 63 -----------------------------------------------------------------------
( 5 78 417 443 )

FieldModifiers ::= FieldModifiers  .FieldModifier 
FieldModifiersopt ::= FieldModifiers . (513)

FieldModifier ::= .Annotation 
FieldModifier ::= .public 
FieldModifier ::= .protected 
FieldModifier ::= .private 
FieldModifier ::= .static 
FieldModifier ::= .final 
FieldModifier ::= .transient 
FieldModifier ::= .volatile 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

volatile                   Sh/Rd  124
transient                  Sh/Rd  123
final                      Sh/Rd  122
static                     Sh/Rd  121
private                    Sh/Rd  120
protected                  Sh/Rd  119
public                     Sh/Rd  118
AT                         Shift  7

FieldModifier              Gt/Rd  116
Annotation                 Gt/Rd  117
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

IDENTIFIER                 Reduce 513
short                      Reduce 513
long                       Reduce 513
int                        Reduce 513
float                      Reduce 513
double                     Reduce 513
char                       Reduce 513
byte                       Reduce 513
boolean                    Reduce 513

Default reduction to rule  513


STATE 64 -----------------------------------------------------------------------
( 5 78 417 443 )

MethodDeclaration ::= MethodHeader  .MethodBody 

MethodBody ::= .Block 
MethodBody ::= .SEMICOLON 
Block ::= .LBRACE BlockStatementsopt RBRACE 

SEMICOLON     Sh/Rd  159
LBRACE        Shift  25

MethodBody    Gt/Rd  125
Block         Gt/Rd  158



STATE 65 -----------------------------------------------------------------------
( 5 78 417 443 )

MethodModifier ::= Annotations . (143)
ConstructorModifier ::= Annotations . (167)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

AT                         Shift  7

Annotation                 Gt/Rd  230
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

void                       Reduce 143
synchronized               Reduce 143
strictfp                   Reduce 143
static                     Reduce 143
short                      Reduce 143
native                     Reduce 143
long                       Reduce 143
int                        Reduce 143
float                      Reduce 143
final                      Reduce 143
double                     Reduce 143
char                       Reduce 143
byte                       Reduce 143
boolean                    Reduce 143
abstract                   Reduce 143
IDENTIFIER                 Reduce 143
public                     Reduce 143
protected                  Reduce 143
private                    Reduce 143
LESS                       Reduce 143

Default reduction to rule  143


STATE 66 -----------------------------------------------------------------------
( 5 78 417 443 )

MethodModifiers ::= MethodModifiers  .MethodModifier 
MethodModifiersopt ::= MethodModifiers . (511)

MethodModifier ::= .Annotations 
MethodModifier ::= .public 
MethodModifier ::= .protected 
MethodModifier ::= .private 
MethodModifier ::= .abstract 
MethodModifier ::= .static 
MethodModifier ::= .final 
MethodModifier ::= .synchronized 
MethodModifier ::= .native 
MethodModifier ::= .strictfp 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

strictfp                   Sh/Rd  152
native                     Sh/Rd  151
synchronized               Sh/Rd  150
final                      Sh/Rd  149
static                     Sh/Rd  148
abstract                   Sh/Rd  147
private                    Sh/Rd  146
protected                  Sh/Rd  145
public                     Sh/Rd  144
AT                         Shift  7

MethodModifier             Gt/Rd  142
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   155
Annotation                 Gt/Rd  229

IDENTIFIER                 Reduce 511
void                       Reduce 511
short                      Reduce 511
long                       Reduce 511
int                        Reduce 511
float                      Reduce 511
double                     Reduce 511
char                       Reduce 511
byte                       Reduce 511
boolean                    Reduce 511
LESS                       Reduce 511

Default reduction to rule  511


STATE 67 -----------------------------------------------------------------------
( 5 78 417 443 )

MethodHeader ::= MethodModifiersopt  .TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 

TypeParameters ::= .LESS TypeParameterList GREATER 
TypeParametersopt ::= . (520)
TypeParametersopt ::= .TypeParameters 

LESS                 Shift  153

TypeParametersopt    Goto   156
TypeParameters       Gt/Rd  521

IDENTIFIER           Reduce 520
void                 Reduce 520
short                Reduce 520
long                 Reduce 520
int                  Reduce 520
float                Reduce 520
double               Reduce 520
char                 Reduce 520
byte                 Reduce 520
boolean              Reduce 520

Default reduction to rule  520


STATE 68 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= final . (85)
FieldModifier ::= final . (122)
MethodModifier ::= final . (149)

enum            Reduce 85
class           Reduce 85
volatile        Reduce 122
transient       Reduce 122
IDENTIFIER      Reduce 122
void            Reduce 149
synchronized    Reduce 149
strictfp        Reduce 85
static          Reduce 85
short           Reduce 122
public          Reduce 85
protected       Reduce 85
private         Reduce 85
native          Reduce 149
long            Reduce 122
int             Reduce 122
float           Reduce 122
final           Reduce 85
double          Reduce 122
char            Reduce 122
byte            Reduce 122
boolean         Reduce 122
abstract        Reduce 85
LESS            Reduce 149
AT              Reduce 85

Default reduction to rule  122


STATE 69 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= strictfp . (86)
MethodModifier ::= strictfp . (152)
InterfaceModifier ::= strictfp . (193)

enum            Reduce 86
class           Reduce 86
IDENTIFIER      Reduce 152
void            Reduce 152
synchronized    Reduce 152
short           Reduce 152
native          Reduce 152
long            Reduce 152
int             Reduce 152
float           Reduce 152
final           Reduce 86
double          Reduce 152
char            Reduce 152
byte            Reduce 152
boolean         Reduce 152
LESS            Reduce 152
strictfp        Reduce 86
static          Reduce 86
public          Reduce 86
protected       Reduce 86
private         Reduce 86
interface       Reduce 193
abstract        Reduce 86
AT              Reduce 86

Default reduction to rule  152


STATE 70 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= static . (84)
FieldModifier ::= static . (121)
MethodModifier ::= static . (148)
StaticInitializer ::= static  .Block 
InterfaceModifier ::= static . (192)

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE          Shift  25

Block           Gt/Rd  161

enum            Reduce 84
class           Reduce 84
volatile        Reduce 121
transient       Reduce 121
IDENTIFIER      Reduce 121
void            Reduce 148
synchronized    Reduce 148
short           Reduce 121
native          Reduce 148
long            Reduce 121
int             Reduce 121
float           Reduce 121
final           Reduce 84
double          Reduce 121
char            Reduce 121
byte            Reduce 121
boolean         Reduce 121
LESS            Reduce 148
strictfp        Reduce 84
static          Reduce 84
public          Reduce 84
protected       Reduce 84
private         Reduce 84
interface       Reduce 192
abstract        Reduce 84
AT              Reduce 84

Default reduction to rule  121


STATE 71 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= abstract . (83)
MethodModifier ::= abstract . (147)
InterfaceModifier ::= abstract . (191)

enum            Reduce 83
class           Reduce 83
IDENTIFIER      Reduce 147
void            Reduce 147
synchronized    Reduce 147
short           Reduce 147
native          Reduce 147
long            Reduce 147
int             Reduce 147
float           Reduce 147
final           Reduce 83
double          Reduce 147
char            Reduce 147
byte            Reduce 147
boolean         Reduce 147
LESS            Reduce 147
strictfp        Reduce 83
static          Reduce 83
public          Reduce 83
protected       Reduce 83
private         Reduce 83
interface       Reduce 191
abstract        Reduce 83
AT              Reduce 83

Default reduction to rule  147


STATE 72 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= private . (82)
FieldModifier ::= private . (120)
MethodModifier ::= private . (146)
ConstructorModifier ::= private . (170)
InterfaceModifier ::= private . (190)

enum            Reduce 82
class           Reduce 82
volatile        Reduce 120
transient       Reduce 120
void            Reduce 146
synchronized    Reduce 146
short           Reduce 120
native          Reduce 146
long            Reduce 120
int             Reduce 120
float           Reduce 120
final           Reduce 82
double          Reduce 120
char            Reduce 120
byte            Reduce 120
boolean         Reduce 120
IDENTIFIER      Reduce 120
LESS            Reduce 146
strictfp        Reduce 82
static          Reduce 82
public          Reduce 82
protected       Reduce 82
private         Reduce 82
interface       Reduce 190
abstract        Reduce 82
AT              Reduce 82

Default reduction to rule  120


STATE 73 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= protected . (81)
FieldModifier ::= protected . (119)
MethodModifier ::= protected . (145)
ConstructorModifier ::= protected . (169)
InterfaceModifier ::= protected . (189)

enum            Reduce 81
class           Reduce 81
volatile        Reduce 119
transient       Reduce 119
void            Reduce 145
synchronized    Reduce 145
short           Reduce 119
native          Reduce 145
long            Reduce 119
int             Reduce 119
float           Reduce 119
final           Reduce 81
double          Reduce 119
char            Reduce 119
byte            Reduce 119
boolean         Reduce 119
IDENTIFIER      Reduce 119
LESS            Reduce 145
strictfp        Reduce 81
static          Reduce 81
public          Reduce 81
protected       Reduce 81
private         Reduce 81
interface       Reduce 189
abstract        Reduce 81
AT              Reduce 81

Default reduction to rule  119


STATE 74 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= public . (80)
FieldModifier ::= public . (118)
MethodModifier ::= public . (144)
ConstructorModifier ::= public . (168)
InterfaceModifier ::= public . (188)

enum            Reduce 80
class           Reduce 80
volatile        Reduce 118
transient       Reduce 118
void            Reduce 144
synchronized    Reduce 144
short           Reduce 118
native          Reduce 144
long            Reduce 118
int             Reduce 118
float           Reduce 118
final           Reduce 80
double          Reduce 118
char            Reduce 118
byte            Reduce 118
boolean         Reduce 118
IDENTIFIER      Reduce 118
LESS            Reduce 144
strictfp        Reduce 80
static          Reduce 80
public          Reduce 80
protected       Reduce 80
private         Reduce 80
interface       Reduce 188
abstract        Reduce 80
AT              Reduce 80

Default reduction to rule  118


STATE 75 -----------------------------------------------------------------------
( 5 78 417 443 )

ClassModifier ::= Annotation . (79)
FieldModifier ::= Annotation . (117)
InterfaceModifier ::= Annotation . (187)
Annotations ::= Annotation . (229)

enum            Reduce 79
class           Reduce 79
volatile        Reduce 117
transient       Reduce 117
interface       Reduce 187
IDENTIFIER      Reduce 117
void            Reduce 229
synchronized    Reduce 229
strictfp        Reduce 79
static          Reduce 79
short           Reduce 117
public          Reduce 79
protected       Reduce 79
private         Reduce 79
native          Reduce 229
long            Reduce 117
int             Reduce 117
float           Reduce 117
final           Reduce 79
double          Reduce 117
char            Reduce 117
byte            Reduce 117
boolean         Reduce 117
abstract        Reduce 79
LESS            Reduce 229
AT              Reduce 79

Default reduction to rule  117


STATE 76 -----------------------------------------------------------------------
( 5 9 78 88 354 411 412 417 441 443 )

InterfaceModifiers ::= InterfaceModifiers  .InterfaceModifier 
InterfaceModifiersopt ::= InterfaceModifiers . (485)

InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

strictfp                   Sh/Rd  193
static                     Sh/Rd  192
abstract                   Sh/Rd  191
private                    Sh/Rd  190
protected                  Sh/Rd  189
public                     Sh/Rd  188
AT                         Shift  7

InterfaceModifier          Gt/Rd  186
Annotation                 Gt/Rd  187
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

interface                  Reduce 485

Default reduction to rule  485


STATE 77 -----------------------------------------------------------------------
( 5 9 78 88 354 411 412 417 441 443 )

NormalInterfaceDeclaration ::= InterfaceModifiersopt  .interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
AnnotationTypeDeclaration ::= InterfaceModifiersopt  .AT interface identifier 
                              AnnotationTypeBody 

AT           Shift  157
interface    Shift  158



STATE 78 -----------------------------------------------------------------------
( 5 417 443 )

ClassBodyDeclarations ::= ClassBodyDeclarations  .ClassBodyDeclaration 
ClassBodyDeclarationsopt ::= ClassBodyDeclarations . (515)

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .InstanceInitializer 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiers ::= .FieldModifier 
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifier ::= .Annotation 
FieldModifier ::= .public 
FieldModifier ::= .protected 
FieldModifier ::= .private 
FieldModifier ::= .static 
FieldModifier ::= .final 
FieldModifier ::= .transient 
FieldModifier ::= .volatile 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiers ::= .MethodModifier 
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifier ::= .Annotations 
MethodModifier ::= .public 
MethodModifier ::= .protected 
MethodModifier ::= .private 
MethodModifier ::= .abstract 
MethodModifier ::= .static 
MethodModifier ::= .final 
MethodModifier ::= .synchronized 
MethodModifier ::= .native 
MethodModifier ::= .strictfp 
InstanceInitializer ::= .Block 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifier ::= .Annotations 
ConstructorModifier ::= .public 
ConstructorModifier ::= .protected 
ConstructorModifier ::= .private 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ConstructorModifiersopt ::= . (502)
ConstructorModifiersopt ::= .ConstructorModifiers 
MethodModifiersopt ::= . (510)
MethodModifiersopt ::= .MethodModifiers 
FieldModifiersopt ::= . (512)
FieldModifiersopt ::= .FieldModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

LBRACE                        Shift  25
AT                            Shift  7
volatile                      Sh/Rd  124
transient                     Sh/Rd  123
native                        Sh/Rd  151
synchronized                  Sh/Rd  150
final                         Shift  68
strictfp                      Shift  69
static                        Shift  70
abstract                      Shift  71
private                       Shift  72
protected                     Shift  73
public                        Shift  74
SEMICOLON                     Sh/Rd  105

ClassBodyDeclaration          Gt/Rd  96
ConstructorDeclaration        Gt/Rd  100
StaticInitializer             Gt/Rd  99
InstanceInitializer           Gt/Rd  98
ClassMemberDeclaration        Gt/Rd  97
ConstructorModifiers          Goto   60
ConstructorModifier           Gt/Rd  165
ConstructorModifiersopt       Goto   61
Block                         Gt/Rd  160
FieldModifiersopt             Goto   62
FieldModifier                 Gt/Rd  115
SingleElementAnnotation       Gt/Rd  233
MarkerAnnotation              Gt/Rd  232
NormalAnnotation              Gt/Rd  231
FieldModifiers                Goto   63
MethodHeader                  Goto   64
Annotations                   Goto   65
MethodModifiers               Goto   66
MethodModifier                Gt/Rd  141
MethodModifiersopt            Goto   67
EnumDeclaration               Gt/Rd  75
NormalClassDeclaration        Gt/Rd  74
ClassModifiers                Goto   20
ClassModifier                 Gt/Rd  77
ClassModifiersopt             Goto   21
AnnotationTypeDeclaration     Gt/Rd  183
NormalInterfaceDeclaration    Gt/Rd  182
Annotation                    Goto   75
InterfaceModifiers            Goto   76
InterfaceModifier             Gt/Rd  185
InterfaceModifiersopt         Goto   77
InterfaceDeclaration          Gt/Rd  104
ClassDeclaration              Gt/Rd  103
MethodDeclaration             Gt/Rd  102
FieldDeclaration              Gt/Rd  101

interface                     Reduce 484
enum                          Reduce 522
class                         Reduce 522
void                          Reduce 510
short                         Reduce 510
long                          Reduce 510
int                           Reduce 510
float                         Reduce 510
double                        Reduce 510
char                          Reduce 510
byte                          Reduce 510
boolean                       Reduce 510
IDENTIFIER                    Reduce 510
LESS                          Reduce 510
EOF_TOKEN                     Reduce 515
RBRACE                        Reduce 515

Default reduction to rule  510


STATE 79 -----------------------------------------------------------------------
( 6 )

PackageDeclaration ::= Annotationsopt package  .PackageName SEMICOLON 

identifier ::= .IDENTIFIER 
PackageName ::= .identifier 
PackageName ::= .PackageName DOT identifier 

IDENTIFIER     Sh/Rd  3

PackageName    Goto   159
identifier     Gt/Rd  47



STATE 80 -----------------------------------------------------------------------
( 7 )

TypeName ::= TypeName  .DOT identifier 
NormalAnnotation ::= AT TypeName  .LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= AT TypeName . (245)
SingleElementAnnotation ::= AT TypeName  .LPAREN ElementValue RPAREN 

LPAREN          Shift  160
DOT             Shift  161

IDENTIFIER      Reduce 245
volatile        Reduce 245
void            Reduce 245
transient       Reduce 245
synchronized    Reduce 245
strictfp        Reduce 245
static          Reduce 245
short           Reduce 245
public          Reduce 245
protected       Reduce 245
private         Reduce 245
package         Reduce 245
native          Reduce 245
long            Reduce 245
interface       Reduce 245
int             Reduce 245
float           Reduce 245
final           Reduce 245
enum            Reduce 245
double          Reduce 245
class           Reduce 245
char            Reduce 245
byte            Reduce 245
boolean         Reduce 245
abstract        Reduce 245
LESS            Reduce 245
RBRACE          Reduce 245
AT              Reduce 245
SEMICOLON       Reduce 245
COMMA           Reduce 245
RPAREN          Reduce 245

Default reduction to rule  245


STATE 81 -----------------------------------------------------------------------
( 9 88 354 411 412 441 )

ClassModifier ::= strictfp . (86)
InterfaceModifier ::= strictfp . (193)

final        Reduce 86
enum         Reduce 86
class        Reduce 86
strictfp     Reduce 86
static       Reduce 86
public       Reduce 86
protected    Reduce 86
private      Reduce 86
interface    Reduce 193
abstract     Reduce 86
AT           Reduce 86

Default reduction to rule  86


STATE 82 -----------------------------------------------------------------------
( 9 88 )

ClassModifier ::= static . (84)
InterfaceModifier ::= static . (192)

final        Reduce 84
enum         Reduce 84
class        Reduce 84
strictfp     Reduce 84
static       Reduce 84
public       Reduce 84
protected    Reduce 84
private      Reduce 84
interface    Reduce 192
abstract     Reduce 84
AT           Reduce 84

Default reduction to rule  84


STATE 83 -----------------------------------------------------------------------
( 9 88 )

ClassModifier ::= abstract . (83)
InterfaceModifier ::= abstract . (191)

final        Reduce 83
enum         Reduce 83
class        Reduce 83
strictfp     Reduce 83
static       Reduce 83
public       Reduce 83
protected    Reduce 83
private      Reduce 83
interface    Reduce 191
abstract     Reduce 83
AT           Reduce 83

Default reduction to rule  83


STATE 84 -----------------------------------------------------------------------
( 9 88 354 411 412 441 )

ClassModifier ::= private . (82)
InterfaceModifier ::= private . (190)

final        Reduce 82
enum         Reduce 82
class        Reduce 82
strictfp     Reduce 82
static       Reduce 82
public       Reduce 82
protected    Reduce 82
private      Reduce 82
interface    Reduce 190
abstract     Reduce 82
AT           Reduce 82

Default reduction to rule  82


STATE 85 -----------------------------------------------------------------------
( 9 88 354 411 412 441 )

ClassModifier ::= protected . (81)
InterfaceModifier ::= protected . (189)

final        Reduce 81
enum         Reduce 81
class        Reduce 81
strictfp     Reduce 81
static       Reduce 81
public       Reduce 81
protected    Reduce 81
private      Reduce 81
interface    Reduce 189
abstract     Reduce 81
AT           Reduce 81

Default reduction to rule  81


STATE 86 -----------------------------------------------------------------------
( 9 88 )

ClassModifier ::= public . (80)
InterfaceModifier ::= public . (188)

final        Reduce 80
enum         Reduce 80
class        Reduce 80
strictfp     Reduce 80
static       Reduce 80
public       Reduce 80
protected    Reduce 80
private      Reduce 80
interface    Reduce 188
abstract     Reduce 80
AT           Reduce 80

Default reduction to rule  80


STATE 87 -----------------------------------------------------------------------
( 9 88 )

ClassModifier ::= Annotation . (79)
InterfaceModifier ::= Annotation . (187)

final        Reduce 79
enum         Reduce 79
class        Reduce 79
strictfp     Reduce 79
static       Reduce 79
public       Reduce 79
protected    Reduce 79
private      Reduce 79
interface    Reduce 187
abstract     Reduce 79
AT           Reduce 79

Default reduction to rule  79


STATE 88 -----------------------------------------------------------------------
( 9 )

TypeDeclarations ::= TypeDeclarations  .TypeDeclaration 
TypeDeclarationsopt ::= TypeDeclarations . (527)

TypeDeclaration ::= .ClassDeclaration 
TypeDeclaration ::= .InterfaceDeclaration 
TypeDeclaration ::= .SEMICOLON 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

SEMICOLON                     Sh/Rd  73
AT                            Shift  7
strictfp                      Shift  81
final                         Sh/Rd  85
static                        Shift  82
abstract                      Shift  83
private                       Shift  84
protected                     Shift  85
public                        Shift  86

TypeDeclaration               Gt/Rd  61
InterfaceDeclaration          Gt/Rd  72
ClassDeclaration              Gt/Rd  71
InterfaceModifier             Gt/Rd  185
InterfaceModifiers            Goto   76
InterfaceModifiersopt         Goto   77
AnnotationTypeDeclaration     Gt/Rd  183
NormalInterfaceDeclaration    Gt/Rd  182
ClassModifier                 Gt/Rd  77
SingleElementAnnotation       Gt/Rd  233
MarkerAnnotation              Gt/Rd  232
NormalAnnotation              Gt/Rd  231
Annotation                    Goto   87
ClassModifiers                Goto   20
ClassModifiersopt             Goto   21
EnumDeclaration               Gt/Rd  75
NormalClassDeclaration        Gt/Rd  74

enum                          Reduce 522
class                         Reduce 522
interface                     Reduce 484
EOF_TOKEN                     Reduce 527

Default reduction to rule  522


STATE 89 -----------------------------------------------------------------------
( 10 )

SingleStaticImportDeclaration ::= import static  .TypeName DOT identifier 
                                  SEMICOLON 
StaticImportOnDemandDeclaration ::= import static  .TypeName DOT MULTIPLY 
                                    SEMICOLON 

identifier ::= .IDENTIFIER 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 

IDENTIFIER    Sh/Rd  3

TypeName      Goto   162
identifier    Gt/Rd  29



STATE 90 -----------------------------------------------------------------------
( 10 )

TypeName ::= TypeName  .DOT identifier 
SingleTypeImportDeclaration ::= import TypeName  .SEMICOLON 

SEMICOLON    Sh/Rd  67
DOT          Shift  161



STATE 91 -----------------------------------------------------------------------
( 10 )

PackageOrTypeName ::= PackageOrTypeName  .DOT identifier 
TypeImportOnDemandDeclaration ::= import PackageOrTypeName  .DOT MULTIPLY 
                                  SEMICOLON 

DOT    Shift  163



STATE 92 -----------------------------------------------------------------------
( 10 )

TypeName ::= identifier . (29)
PackageOrTypeName ::= identifier . (53)

SEMICOLON    Reduce 29
DOT          Reduce 29

Default reduction to rule  29


STATE 93 -----------------------------------------------------------------------
( 12 )

LPGUserAction ::= BeginJava BlockStatementsopt  .EndJava 

EndJava    Sh/Rd  6



STATE 94 -----------------------------------------------------------------------
( 13 )

LPGUserAction ::= BeginAction BlockStatementsopt  .EndAction 

EndAction    Sh/Rd  5



STATE 95 -----------------------------------------------------------------------
( 17 37 62 132 136 156 171 182 224 280 281 282 299 314 342 347 349 399 405 459 )

ClassType ::= TypeName  .TypeArgumentsopt 
TypeName ::= TypeName  .DOT identifier 

TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

DOT                 Shift  161
LESS                Shift  132

TypeArgumentsopt    Gt/Rd  27
TypeArguments       Gt/Rd  539

IDENTIFIER          Reduce 538
void                Reduce 538
strictfp            Reduce 538
static              Reduce 538
short               Reduce 538
public              Reduce 538
protected           Reduce 538
private             Reduce 538
long                Reduce 538
interface           Reduce 538
int                 Reduce 538
instanceof          Reduce 538
implements          Reduce 538
float               Reduce 538
final               Reduce 538
enum                Reduce 538
double              Reduce 538
class               Reduce 538
char                Reduce 538
byte                Reduce 538
boolean             Reduce 538
abstract            Reduce 538
ELLIPSIS            Reduce 538
GREATER             Reduce 538
EQUAL_EQUAL         Reduce 538
LESS_EQUAL          Reduce 538
RBRACE              Reduce 538
OR_OR               Reduce 538
LBRACE              Reduce 538
XOR                 Reduce 538
RBRACKET            Reduce 538
LBRACKET            Reduce 538
AT                  Reduce 538
QUESTION            Reduce 538
SEMICOLON           Reduce 538
COLON               Reduce 538
COMMA               Reduce 538
RPAREN              Reduce 538
LPAREN              Reduce 538
AND_AND             Reduce 538
AND                 Reduce 538
NOT_EQUAL           Reduce 538
OR                  Reduce 538

Default reduction to rule  538


STATE 96 -----------------------------------------------------------------------
( 17 62 132 156 171 182 224 280 281 282 342 347 349 399 405 459 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)

DOT            Reduce 29
IDENTIFIER     Reduce 29
void           Reduce 29
strictfp       Reduce 29
static         Reduce 29
short          Reduce 29
public         Reduce 29
protected      Reduce 29
private        Reduce 29
long           Reduce 29
interface      Reduce 29
int            Reduce 29
instanceof     Reduce 29
float          Reduce 29
final          Reduce 29
enum           Reduce 29
double         Reduce 29
class          Reduce 29
char           Reduce 29
byte           Reduce 29
boolean        Reduce 29
abstract       Reduce 29
ELLIPSIS       Reduce 29
GREATER        Reduce 29
EQUAL_EQUAL    Reduce 29
LESS_EQUAL     Reduce 29
LESS           Reduce 29
RBRACE         Reduce 29
OR_OR          Reduce 29
LBRACE         Reduce 29
XOR            Reduce 29
RBRACKET       Reduce 29
LBRACKET       Reduce 29
AT             Reduce 29
QUESTION       Reduce 29
SEMICOLON      Reduce 29
COLON          Reduce 29
COMMA          Reduce 29
RPAREN         Reduce 29
AND_AND        Reduce 29
AND            Reduce 29
NOT_EQUAL      Reduce 29
OR             Reduce 29

Default reduction to rule  29


STATE 97 -----------------------------------------------------------------------
( 17 )

ArrayType ::= Type  .LBRACKET RBRACKET 
LocalVariableDeclaration ::= VariableModifiersopt Type  .VariableDeclarators 

identifier ::= .IDENTIFIER 
VariableDeclarators ::= .VariableDeclarator 
VariableDeclarators ::= .VariableDeclarators COMMA VariableDeclarator 
VariableDeclarator ::= .VariableDeclaratorId 
VariableDeclarator ::= .VariableDeclaratorId EQUAL VariableInitializer 
VariableDeclaratorId ::= .identifier 
VariableDeclaratorId ::= .VariableDeclaratorId LBRACKET RBRACKET 

LBRACKET                Shift  130
IDENTIFIER              Sh/Rd  3

VariableDeclarators     Goto   164
VariableDeclarator      Gt/Rd  107
identifier              Gt/Rd  111
VariableDeclaratorId    Goto   165



STATE 98 -----------------------------------------------------------------------
( 21 )

EnumDeclaration ::= ClassModifiersopt enum  .identifier Interfacesopt EnumBody 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   166



STATE 99 -----------------------------------------------------------------------
( 21 )

NormalClassDeclaration ::= ClassModifiersopt class  .identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   167



STATE 100 ----------------------------------------------------------------------
( 22 )

BasicForStatement ::= for LPAREN  .ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= for LPAREN  .FormalParameter COLON Expression RPAREN 
                         Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForInit ::= .StatementExpressionList 
ForInit ::= .LocalVariableDeclaration 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForInitopt ::= . (458)
ForInitopt ::= .ForInit 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 

IDENTIFIER                         Sh/Rd  3
LPAREN                             Shift  28
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
AT                                 Shift  7
final                              Sh/Rd  138

FormalParameter                    Goto   168
ForInitopt                         Goto   169
ForInit                            Gt/Rd  459
StatementExpression                Gt/Rd  318
LeftHandSide                       Goto   27
Literal                            Gt/Rd  334
AmbiguousName                      Goto   30
ClassName                          Goto   31
MethodName                         Goto   33
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
PostfixExpression                  Goto   43
ExpressionName                     Goto   44
Primary                            Goto   45
ClassInstanceCreationExpression    Goto   46
MethodInvocation                   Goto   47
PostDecrementExpression            Goto   48
PostIncrementExpression            Goto   49
PreDecrementExpression             Gt/Rd  290
PreIncrementExpression             Gt/Rd  289
Assignment                         Gt/Rd  288
VariableModifier                   Gt/Rd  136
Annotation                         Gt/Rd  229
SingleElementAnnotation            Gt/Rd  233
MarkerAnnotation                   Gt/Rd  232
NormalAnnotation                   Gt/Rd  231
Annotations                        Goto   15
VariableModifiers                  Goto   16
LocalVariableDeclaration           Gt/Rd  316
StatementExpressionList            Goto   170
VariableModifiersopt               Goto   171

SEMICOLON                          Reduce 458

Default reduction to rule  458


STATE 101 ----------------------------------------------------------------------
( 23 )

WhileStatement ::= while LPAREN  .Expression RPAREN Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   172
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 102 ----------------------------------------------------------------------
( 24 )

IfThenStatement ::= if LPAREN  .Expression RPAREN Statement 
IfThenElseStatement ::= if LPAREN  .Expression RPAREN StatementNoShortIf else 
                        Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   173
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 103 ----------------------------------------------------------------------
( 25 )

Block ::= LBRACE BlockStatementsopt  .RBRACE 

RBRACE    Sh/Rd  250



STATE 104 ----------------------------------------------------------------------
( 27 )

Assignment ::= LeftHandSide AssignmentOperator  .AssignmentExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

AssignmentExpression               Gt/Rd  430
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
LeftHandSide                       Goto   27
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Goto   39
MethodInvocation                   Gt/Rd  342
FieldAccess                        Goto   40
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   44
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122



STATE 105 ----------------------------------------------------------------------
( 27 )

AssignmentOperator ::= GREATER  .GREATER EQUAL 
AssignmentOperator ::= GREATER  .GREATER GREATER EQUAL 

GREATER    Shift  174



STATE 106 ----------------------------------------------------------------------
( 28 110 )

PrimaryNoNewArray ::= LPAREN Expression  .RPAREN 

RPAREN    Sh/Rd  339



STATE 107 ----------------------------------------------------------------------
( 28 41 42 50 55 57 101 102 104 107 108 110 112 113 128 137 139 142 147 160 
  177 178 179 180 181 183 184 185 187 188 189 190 191 192 193 194 195 208 216 
  238 244 248 249 255 263 266 278 284 291 304 324 326 328 330 331 336 337 359 
  369 370 377 383 423 425 434 435 445 448 464 477 )

UnaryExpressionNotPlusMinus ::= NOT  .UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  392
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 108 ----------------------------------------------------------------------
( 28 41 42 50 55 57 101 102 104 107 108 110 112 113 128 137 139 142 147 160 
  177 178 179 180 181 183 184 185 187 188 189 190 191 192 193 194 195 208 216 
  238 244 248 249 255 263 266 278 284 291 304 324 326 328 330 331 336 337 359 
  369 370 377 383 423 425 434 435 445 448 464 477 )

UnaryExpressionNotPlusMinus ::= TWIDDLE  .UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  391
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 109 ----------------------------------------------------------------------
( 28 41 42 50 55 57 100 101 102 104 107 108 110 112 113 128 137 139 142 147 
  177 178 179 180 181 183 184 185 187 188 189 190 191 192 193 194 195 208 216 
  238 244 248 249 250 255 263 266 278 284 291 295 304 324 326 328 330 331 336 
  337 359 366 368 369 370 377 423 425 434 435 445 448 464 469 477 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)

IDENTIFIER          Reduce 49
void                Reduce 49
strictfp            Reduce 49
static              Reduce 49
short               Reduce 49
public              Reduce 49
protected           Reduce 49
private             Reduce 49
long                Reduce 49
interface           Reduce 49
int                 Reduce 49
instanceof          Reduce 49
float               Reduce 49
final               Reduce 49
enum                Reduce 49
double              Reduce 49
class               Reduce 49
char                Reduce 49
byte                Reduce 49
boolean             Reduce 49
abstract            Reduce 49
GREATER             Reduce 49
EQUAL_EQUAL         Reduce 49
EQUAL               Reduce 49
LESS_EQUAL          Reduce 49
LEFT_SHIFT_EQUAL    Reduce 49
LEFT_SHIFT          Reduce 49
LESS                Reduce 29
PLUS_EQUAL          Reduce 49
PLUS_PLUS           Reduce 49
PLUS                Reduce 49
RBRACE              Reduce 49
OR_EQUAL            Reduce 49
OR_OR               Reduce 49
XOR_EQUAL           Reduce 49
XOR                 Reduce 49
RBRACKET            Reduce 49
LBRACKET            Reduce 29
AT                  Reduce 49
QUESTION            Reduce 49
SEMICOLON           Reduce 49
COLON               Reduce 49
DIVIDE_EQUAL        Reduce 49
DIVIDE              Reduce 49
COMMA               Reduce 49
MULTIPLY_EQUAL      Reduce 49
MULTIPLY            Reduce 49
RPAREN              Reduce 29
AND_EQUAL           Reduce 49
AND_AND             Reduce 49
AND                 Reduce 49
REMAINDER_EQUAL     Reduce 49
REMAINDER           Reduce 49
NOT_EQUAL           Reduce 49
MINUS_EQUAL         Reduce 49
MINUS               Reduce 49
OR                  Reduce 49
MINUS_MINUS         Reduce 49
LPAREN              Reduce 51
DOT                 Reduce 29

Default reduction to rule  49


STATE 110 ----------------------------------------------------------------------
( 28 41 42 50 55 57 101 102 104 107 108 110 112 113 128 137 139 142 147 160 
  177 178 179 180 181 183 184 185 187 188 189 190 191 192 193 194 195 208 216 
  238 244 248 249 255 263 266 278 284 291 304 324 326 328 330 331 336 337 359 
  369 370 377 383 423 425 434 435 445 448 464 477 )

PrimaryNoNewArray ::= LPAREN  .Expression RPAREN 
CastExpression ::= LPAREN  .PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= LPAREN  .ReferenceType RPAREN UnaryExpressionNotPlusMinus 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   106
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Goto   175
PrimitiveType                      Goto   176
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 111 ----------------------------------------------------------------------
( 28 41 42 50 55 57 101 102 104 107 108 110 112 113 128 137 139 142 147 160 
  177 178 179 180 181 183 184 185 187 188 189 190 191 192 193 194 195 208 216 
  238 244 248 249 255 263 266 278 284 291 304 324 326 328 330 331 336 337 359 
  369 370 377 383 423 425 434 435 445 448 464 477 )

PostIncrementExpression ::= PostfixExpression  .PLUS_PLUS 
PostDecrementExpression ::= PostfixExpression  .MINUS_MINUS 
UnaryExpressionNotPlusMinus ::= PostfixExpression . (390)

MINUS_MINUS    Sh/Rd  382
PLUS_PLUS      Sh/Rd  381

IDENTIFIER     Reduce 390
void           Reduce 390
strictfp       Reduce 390
static         Reduce 390
short          Reduce 390
public         Reduce 390
protected      Reduce 390
private        Reduce 390
long           Reduce 390
interface      Reduce 390
int            Reduce 390
instanceof     Reduce 390
float          Reduce 390
final          Reduce 390
enum           Reduce 390
double         Reduce 390
class          Reduce 390
char           Reduce 390
byte           Reduce 390
boolean        Reduce 390
abstract       Reduce 390
GREATER        Reduce 390
EQUAL_EQUAL    Reduce 390
LESS_EQUAL     Reduce 390
LEFT_SHIFT     Reduce 390
LESS           Reduce 390
PLUS           Reduce 390
RBRACE         Reduce 390
OR_OR          Reduce 390
XOR            Reduce 390
RBRACKET       Reduce 390
AT             Reduce 390
QUESTION       Reduce 390
SEMICOLON      Reduce 390
COLON          Reduce 390
DIVIDE         Reduce 390
COMMA          Reduce 390
MULTIPLY       Reduce 390
RPAREN         Reduce 390
AND_AND        Reduce 390
AND            Reduce 390
REMAINDER      Reduce 390
NOT_EQUAL      Reduce 390
MINUS          Reduce 390
OR             Reduce 390

Default reduction to rule  390


STATE 112 ----------------------------------------------------------------------
( 28 41 42 50 55 57 101 102 104 107 108 110 112 113 128 137 139 142 147 160 
  177 178 179 180 181 183 184 185 187 188 189 190 191 192 193 194 195 208 216 
  238 244 248 249 263 266 278 284 291 304 324 326 328 330 331 336 337 359 369 
  370 377 383 423 425 434 435 445 448 464 477 )

UnaryExpression ::= MINUS  .UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  386
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 113 ----------------------------------------------------------------------
( 28 41 42 50 55 57 101 102 104 107 108 110 112 113 128 137 139 142 147 160 
  177 178 179 180 181 183 184 185 187 188 189 190 191 192 193 194 195 208 216 
  238 244 248 249 263 266 278 284 291 304 324 326 328 330 331 336 337 359 369 
  370 377 383 423 425 434 435 445 448 464 477 )

UnaryExpression ::= PLUS  .UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  385
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 114 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 183 184 185 188 189 190 
  191 192 193 194 195 208 216 238 244 248 249 263 278 284 291 304 328 330 331 
  336 337 359 369 370 377 383 423 425 434 435 445 448 464 477 )

AdditiveExpression ::= AdditiveExpression  .PLUS MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression  .MINUS MultiplicativeExpression 
ShiftExpression ::= AdditiveExpression . (403)

MINUS          Shift  177
PLUS           Shift  178

IDENTIFIER     Reduce 403
void           Reduce 403
strictfp       Reduce 403
static         Reduce 403
short          Reduce 403
public         Reduce 403
protected      Reduce 403
private        Reduce 403
long           Reduce 403
interface      Reduce 403
int            Reduce 403
instanceof     Reduce 403
float          Reduce 403
final          Reduce 403
enum           Reduce 403
double         Reduce 403
class          Reduce 403
char           Reduce 403
byte           Reduce 403
boolean        Reduce 403
abstract       Reduce 403
GREATER        Reduce 403
EQUAL_EQUAL    Reduce 403
LESS_EQUAL     Reduce 403
LEFT_SHIFT     Reduce 403
LESS           Reduce 403
RBRACE         Reduce 403
OR_OR          Reduce 403
XOR            Reduce 403
RBRACKET       Reduce 403
AT             Reduce 403
QUESTION       Reduce 403
SEMICOLON      Reduce 403
COLON          Reduce 403
COMMA          Reduce 403
RPAREN         Reduce 403
AND_AND        Reduce 403
AND            Reduce 403
NOT_EQUAL      Reduce 403
OR             Reduce 403

Default reduction to rule  403


STATE 115 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 183 184 185 187 188 189 
  190 191 192 193 194 195 208 216 238 244 248 249 263 266 278 284 291 304 326 
  328 330 331 336 337 359 369 370 377 383 423 425 434 435 445 448 464 477 )

MultiplicativeExpression ::= MultiplicativeExpression  .MULTIPLY 
                             UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .DIVIDE UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= MultiplicativeExpression . (400)

REMAINDER      Shift  179
DIVIDE         Shift  180
MULTIPLY       Shift  181

IDENTIFIER     Reduce 400
void           Reduce 400
strictfp       Reduce 400
static         Reduce 400
short          Reduce 400
public         Reduce 400
protected      Reduce 400
private        Reduce 400
long           Reduce 400
interface      Reduce 400
int            Reduce 400
instanceof     Reduce 400
float          Reduce 400
final          Reduce 400
enum           Reduce 400
double         Reduce 400
class          Reduce 400
char           Reduce 400
byte           Reduce 400
boolean        Reduce 400
abstract       Reduce 400
GREATER        Reduce 400
EQUAL_EQUAL    Reduce 400
LESS_EQUAL     Reduce 400
LEFT_SHIFT     Reduce 400
LESS           Reduce 400
PLUS           Reduce 400
RBRACE         Reduce 400
OR_OR          Reduce 400
XOR            Reduce 400
RBRACKET       Reduce 400
AT             Reduce 400
QUESTION       Reduce 400
SEMICOLON      Reduce 400
COLON          Reduce 400
COMMA          Reduce 400
RPAREN         Reduce 400
AND_AND        Reduce 400
AND            Reduce 400
NOT_EQUAL      Reduce 400
MINUS          Reduce 400
OR             Reduce 400

Default reduction to rule  400


STATE 116 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 188 191 192 193 194 195 
  208 216 238 244 248 249 278 284 291 304 328 330 331 336 337 359 369 370 377 
  383 423 425 434 435 445 448 464 477 )

RelationalExpression ::= RelationalExpression  .LESS ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression  .LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .instanceof ReferenceType 
EqualityExpression ::= RelationalExpression . (413)

instanceof     Shift  182
LESS_EQUAL     Shift  183
GREATER        Shift  184
LESS           Shift  185

IDENTIFIER     Reduce 413
void           Reduce 413
strictfp       Reduce 413
static         Reduce 413
short          Reduce 413
public         Reduce 413
protected      Reduce 413
private        Reduce 413
long           Reduce 413
interface      Reduce 413
int            Reduce 413
float          Reduce 413
final          Reduce 413
enum           Reduce 413
double         Reduce 413
class          Reduce 413
char           Reduce 413
byte           Reduce 413
boolean        Reduce 413
abstract       Reduce 413
EQUAL_EQUAL    Reduce 413
RBRACE         Reduce 413
OR_OR          Reduce 413
XOR            Reduce 413
RBRACKET       Reduce 413
AT             Reduce 413
QUESTION       Reduce 413
SEMICOLON      Reduce 413
COLON          Reduce 413
COMMA          Reduce 413
RPAREN         Reduce 413
AND_AND        Reduce 413
AND            Reduce 413
NOT_EQUAL      Reduce 413
OR             Reduce 413

Default reduction to rule  413


STATE 117 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 188 189 190 191 192 193 
  194 195 208 216 238 244 248 249 278 284 291 304 328 330 331 336 337 359 369 
  370 377 383 423 425 434 435 445 448 464 477 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= ShiftExpression . (407)

GREATER        Shift  186
LEFT_SHIFT     Shift  187

IDENTIFIER     Reduce 407
void           Reduce 407
strictfp       Reduce 407
static         Reduce 407
short          Reduce 407
public         Reduce 407
protected      Reduce 407
private        Reduce 407
long           Reduce 407
interface      Reduce 407
int            Reduce 407
instanceof     Reduce 407
float          Reduce 407
final          Reduce 407
enum           Reduce 407
double         Reduce 407
class          Reduce 407
char           Reduce 407
byte           Reduce 407
boolean        Reduce 407
abstract       Reduce 407
EQUAL_EQUAL    Reduce 407
LESS_EQUAL     Reduce 407
LESS           Reduce 407
RBRACE         Reduce 407
OR_OR          Reduce 407
XOR            Reduce 407
RBRACKET       Reduce 407
AT             Reduce 407
QUESTION       Reduce 407
SEMICOLON      Reduce 407
COLON          Reduce 407
COMMA          Reduce 407
RPAREN         Reduce 407
AND_AND        Reduce 407
AND            Reduce 407
NOT_EQUAL      Reduce 407
OR             Reduce 407

Default reduction to rule  407


STATE 118 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 191 193 194 195 208 216 
  238 244 248 249 278 284 291 304 328 330 331 336 337 359 369 370 377 383 423 
  425 434 435 445 448 464 477 )

AndExpression ::= AndExpression  .AND EqualityExpression 
ExclusiveOrExpression ::= AndExpression . (418)

AND           Shift  188

IDENTIFIER    Reduce 418
void          Reduce 418
strictfp      Reduce 418
static        Reduce 418
short         Reduce 418
public        Reduce 418
protected     Reduce 418
private       Reduce 418
long          Reduce 418
interface     Reduce 418
int           Reduce 418
float         Reduce 418
final         Reduce 418
enum          Reduce 418
double        Reduce 418
class         Reduce 418
char          Reduce 418
byte          Reduce 418
boolean       Reduce 418
abstract      Reduce 418
LESS          Reduce 418
RBRACE        Reduce 418
OR_OR         Reduce 418
XOR           Reduce 418
RBRACKET      Reduce 418
AT            Reduce 418
QUESTION      Reduce 418
SEMICOLON     Reduce 418
COLON         Reduce 418
COMMA         Reduce 418
RPAREN        Reduce 418
AND_AND       Reduce 418
OR            Reduce 418

Default reduction to rule  418


STATE 119 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 191 192 193 194 195 208 
  216 238 244 248 249 278 284 291 304 328 330 331 336 337 359 369 370 377 383 
  423 425 434 435 445 448 464 477 )

EqualityExpression ::= EqualityExpression  .EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= EqualityExpression  .NOT_EQUAL RelationalExpression 
AndExpression ::= EqualityExpression . (416)

NOT_EQUAL      Shift  189
EQUAL_EQUAL    Shift  190

IDENTIFIER     Reduce 416
void           Reduce 416
strictfp       Reduce 416
static         Reduce 416
short          Reduce 416
public         Reduce 416
protected      Reduce 416
private        Reduce 416
long           Reduce 416
interface      Reduce 416
int            Reduce 416
float          Reduce 416
final          Reduce 416
enum           Reduce 416
double         Reduce 416
class          Reduce 416
char           Reduce 416
byte           Reduce 416
boolean        Reduce 416
abstract       Reduce 416
LESS           Reduce 416
RBRACE         Reduce 416
OR_OR          Reduce 416
XOR            Reduce 416
RBRACKET       Reduce 416
AT             Reduce 416
QUESTION       Reduce 416
SEMICOLON      Reduce 416
COLON          Reduce 416
COMMA          Reduce 416
RPAREN         Reduce 416
AND_AND        Reduce 416
AND            Reduce 416
OR             Reduce 416

Default reduction to rule  416


STATE 120 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 193 194 208 216 238 244 
  248 249 278 284 291 304 328 330 331 336 337 359 369 370 377 383 423 425 434 
  435 445 448 464 477 )

InclusiveOrExpression ::= InclusiveOrExpression  .OR ExclusiveOrExpression 
ConditionalAndExpression ::= InclusiveOrExpression . (422)

OR            Shift  191

IDENTIFIER    Reduce 422
void          Reduce 422
strictfp      Reduce 422
static        Reduce 422
short         Reduce 422
public        Reduce 422
protected     Reduce 422
private       Reduce 422
long          Reduce 422
interface     Reduce 422
int           Reduce 422
float         Reduce 422
final         Reduce 422
enum          Reduce 422
double        Reduce 422
class         Reduce 422
char          Reduce 422
byte          Reduce 422
boolean       Reduce 422
abstract      Reduce 422
LESS          Reduce 422
RBRACE        Reduce 422
OR_OR         Reduce 422
RBRACKET      Reduce 422
AT            Reduce 422
QUESTION      Reduce 422
SEMICOLON     Reduce 422
COLON         Reduce 422
COMMA         Reduce 422
RPAREN        Reduce 422
AND_AND       Reduce 422

Default reduction to rule  422


STATE 121 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 193 194 195 208 216 238 
  244 248 249 278 284 291 304 328 330 331 336 337 359 369 370 377 383 423 425 
  434 435 445 448 464 477 )

ExclusiveOrExpression ::= ExclusiveOrExpression  .XOR AndExpression 
InclusiveOrExpression ::= ExclusiveOrExpression . (420)

XOR           Shift  192

IDENTIFIER    Reduce 420
void          Reduce 420
strictfp      Reduce 420
static        Reduce 420
short         Reduce 420
public        Reduce 420
protected     Reduce 420
private       Reduce 420
long          Reduce 420
interface     Reduce 420
int           Reduce 420
float         Reduce 420
final         Reduce 420
enum          Reduce 420
double        Reduce 420
class         Reduce 420
char          Reduce 420
byte          Reduce 420
boolean       Reduce 420
abstract      Reduce 420
LESS          Reduce 420
RBRACE        Reduce 420
OR_OR         Reduce 420
RBRACKET      Reduce 420
AT            Reduce 420
QUESTION      Reduce 420
SEMICOLON     Reduce 420
COLON         Reduce 420
COMMA         Reduce 420
RPAREN        Reduce 420
AND_AND       Reduce 420
OR            Reduce 420

Default reduction to rule  420


STATE 122 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 193 208 216 238 244 248 
  249 278 284 291 304 328 330 331 336 337 359 369 370 377 383 423 425 434 435 
  445 448 464 477 )

ConditionalOrExpression ::= ConditionalOrExpression  .OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= ConditionalOrExpression . (426)
ConditionalExpression ::= ConditionalOrExpression  .QUESTION Expression COLON 
                          ConditionalExpression 

QUESTION      Shift  193
OR_OR         Shift  194

IDENTIFIER    Reduce 426
void          Reduce 426
strictfp      Reduce 426
static        Reduce 426
short         Reduce 426
public        Reduce 426
protected     Reduce 426
private       Reduce 426
long          Reduce 426
interface     Reduce 426
int           Reduce 426
float         Reduce 426
final         Reduce 426
enum          Reduce 426
double        Reduce 426
class         Reduce 426
char          Reduce 426
byte          Reduce 426
boolean       Reduce 426
abstract      Reduce 426
LESS          Reduce 426
RBRACE        Reduce 426
RBRACKET      Reduce 426
AT            Reduce 426
SEMICOLON     Reduce 426
COLON         Reduce 426
COMMA         Reduce 426
RPAREN        Reduce 426

Default reduction to rule  426


STATE 123 ----------------------------------------------------------------------
( 28 50 55 57 101 102 104 110 128 137 139 142 147 160 193 208 216 238 244 248 
  249 278 284 291 304 328 330 331 336 337 359 369 370 377 383 423 425 434 435 
  445 448 464 477 )

ConditionalAndExpression ::= ConditionalAndExpression  .AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= ConditionalAndExpression . (424)

AND_AND       Shift  195

IDENTIFIER    Reduce 424
void          Reduce 424
strictfp      Reduce 424
static        Reduce 424
short         Reduce 424
public        Reduce 424
protected     Reduce 424
private       Reduce 424
long          Reduce 424
interface     Reduce 424
int           Reduce 424
float         Reduce 424
final         Reduce 424
enum          Reduce 424
double        Reduce 424
class         Reduce 424
char          Reduce 424
byte          Reduce 424
boolean       Reduce 424
abstract      Reduce 424
LESS          Reduce 424
RBRACE        Reduce 424
OR_OR         Reduce 424
RBRACKET      Reduce 424
AT            Reduce 424
QUESTION      Reduce 424
SEMICOLON     Reduce 424
COLON         Reduce 424
COMMA         Reduce 424
RPAREN        Reduce 424

Default reduction to rule  424


STATE 124 ----------------------------------------------------------------------
( 29 )

PrimaryNoNewArray ::= void DOT  .class 

class    Sh/Rd  336



STATE 125 ----------------------------------------------------------------------
( 30 )

ExpressionName ::= AmbiguousName DOT  .identifier 
MethodName ::= AmbiguousName DOT  .identifier 
AmbiguousName ::= AmbiguousName DOT  .identifier 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   196



STATE 126 ----------------------------------------------------------------------
( 31 )

PrimaryNoNewArray ::= ClassName DOT  .this 
FieldAccess ::= ClassName DOT  .super DOT identifier 
MethodInvocation ::= ClassName DOT  .super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 

super    Shift  197
this     Sh/Rd  338



STATE 127 ----------------------------------------------------------------------
( 32 )

FieldAccess ::= super DOT  .identifier 
MethodInvocation ::= super DOT  .TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

IDENTIFIER          Sh/Rd  3
LESS                Shift  132

TypeArgumentsopt    Goto   198
identifier          Gt/Rd  368
TypeArguments       Gt/Rd  539



STATE 128 ----------------------------------------------------------------------
( 33 )

MethodInvocation ::= MethodName LPAREN  .ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   199
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 129 ----------------------------------------------------------------------
( 34 )

PrimaryNoNewArray ::= Type DOT  .class 

class    Sh/Rd  335



STATE 130 ----------------------------------------------------------------------
( 34 97 154 203 230 251 388 393 437 438 )

ArrayType ::= Type LBRACKET  .RBRACKET 

RBRACKET    Sh/Rd  33



STATE 131 ----------------------------------------------------------------------
( 35 )

TypeName ::= TypeName DOT  .identifier 
MethodInvocation ::= TypeName DOT  .TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 

IDENTIFIER       Sh/Rd  3
LESS             Shift  132

TypeArguments    Goto   201
identifier       Gt/Rd  30



STATE 132 ----------------------------------------------------------------------
( 35 37 95 127 131 140 211 215 276 295 312 338 390 )

TypeArguments ::= LESS  .ActualTypeArgumentList GREATER 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ActualTypeArgumentList ::= .ActualTypeArgument 
ActualTypeArgumentList ::= .ActualTypeArgumentList COMMA ActualTypeArgument 
ActualTypeArgument ::= .ReferenceType 
ActualTypeArgument ::= .Wildcard 
Wildcard ::= .QUESTION WildcardBoundsOpt 

IDENTIFIER                Sh/Rd  3
double                    Sh/Rd  22
float                     Sh/Rd  21
char                      Sh/Rd  20
long                      Sh/Rd  19
int                       Sh/Rd  18
short                     Sh/Rd  17
byte                      Sh/Rd  16
boolean                   Sh/Rd  13
QUESTION                  Shift  204

ActualTypeArgumentList    Goto   202
ActualTypeArgument        Gt/Rd  40
ArrayType                 Gt/Rd  25
TypeVariable              Gt/Rd  24
ClassOrInterfaceType      Gt/Rd  23
PrimitiveType             Gt/Rd  10
Type                      Goto   203
TypeName                  Goto   95
identifier                Goto   96
ClassType                 Gt/Rd  26
FloatingPointType         Gt/Rd  15
IntegralType              Gt/Rd  14
NumericType               Gt/Rd  12
Wildcard                  Gt/Rd  43
ReferenceType             Goto   205



STATE 133 ----------------------------------------------------------------------
( 36 )

LabeledStatement ::= identifier COLON  .Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  22
while                                   Shift  23
if                                      Shift  24
LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58

Statement                               Gt/Rd  285
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
identifier                              Goto   36
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264



STATE 134 ----------------------------------------------------------------------
( 37 )

ArrayCreationExpression ::= new ClassOrInterfaceType  .DimExprs Dimsopt 
ArrayCreationExpression ::= new ClassOrInterfaceType  .Dims ArrayInitializer 

DimExprs ::= .DimExpr 
DimExprs ::= .DimExprs DimExpr 
DimExpr ::= .LBRACKET Expression RBRACKET 
Dims ::= .LBRACKET RBRACKET 
Dims ::= .Dims LBRACKET RBRACKET 

LBRACKET    Shift  208

DimExprs    Goto   206
DimExpr     Gt/Rd  362
Dims        Goto   207



STATE 135 ----------------------------------------------------------------------
( 37 )

ArrayCreationExpression ::= new PrimitiveType  .DimExprs Dimsopt 
ArrayCreationExpression ::= new PrimitiveType  .Dims ArrayInitializer 

DimExprs ::= .DimExpr 
DimExprs ::= .DimExprs DimExpr 
DimExpr ::= .LBRACKET Expression RBRACKET 
Dims ::= .LBRACKET RBRACKET 
Dims ::= .Dims LBRACKET RBRACKET 

LBRACKET    Shift  208

DimExprs    Goto   209
DimExpr     Gt/Rd  362
Dims        Goto   210



STATE 136 ----------------------------------------------------------------------
( 37 )

ClassInstanceCreationExpression ::= new TypeArgumentsopt  .ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 

identifier ::= .IDENTIFIER 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 

IDENTIFIER              Sh/Rd  3

ClassOrInterfaceType    Goto   211
ClassType               Gt/Rd  26
identifier              Gt/Rd  29
TypeName                Goto   95



STATE 137 ----------------------------------------------------------------------
( 38 )

ArrayAccess ::= PrimaryNoNewArray LBRACKET  .Expression RBRACKET 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   212
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 138 ----------------------------------------------------------------------
( 41 42 107 108 112 113 160 177 178 179 180 181 183 184 185 187 188 189 190 
  191 192 194 195 238 255 263 266 304 324 326 328 359 477 )

ArrayAccess ::= ExpressionName  .LBRACKET Expression RBRACKET 
PostfixExpression ::= ExpressionName . (378)

LBRACKET       Shift  139

IDENTIFIER     Reduce 378
void           Reduce 378
strictfp       Reduce 378
static         Reduce 378
short          Reduce 378
public         Reduce 378
protected      Reduce 378
private        Reduce 378
long           Reduce 378
interface      Reduce 378
int            Reduce 378
instanceof     Reduce 378
float          Reduce 378
final          Reduce 378
enum           Reduce 378
double         Reduce 378
class          Reduce 378
char           Reduce 378
byte           Reduce 378
boolean        Reduce 378
abstract       Reduce 378
GREATER        Reduce 378
EQUAL_EQUAL    Reduce 378
LESS_EQUAL     Reduce 378
LEFT_SHIFT     Reduce 378
LESS           Reduce 378
PLUS_PLUS      Reduce 378
PLUS           Reduce 378
RBRACE         Reduce 378
OR_OR          Reduce 378
XOR            Reduce 378
RBRACKET       Reduce 378
AT             Reduce 378
QUESTION       Reduce 378
SEMICOLON      Reduce 378
COLON          Reduce 378
DIVIDE         Reduce 378
COMMA          Reduce 378
MULTIPLY       Reduce 378
RPAREN         Reduce 378
AND_AND        Reduce 378
AND            Reduce 378
REMAINDER      Reduce 378
NOT_EQUAL      Reduce 378
MINUS          Reduce 378
OR             Reduce 378
MINUS_MINUS    Reduce 378

Default reduction to rule  378


STATE 139 ----------------------------------------------------------------------
( 44 138 344 )

ArrayAccess ::= ExpressionName LBRACKET  .Expression RBRACKET 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   213
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 140 ----------------------------------------------------------------------
( 45 )

ClassInstanceCreationExpression ::= Primary DOT  .new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary DOT  .identifier 
MethodInvocation ::= Primary DOT  .TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

new                 Shift  215
IDENTIFIER          Sh/Rd  3
LESS                Shift  132

TypeArgumentsopt    Goto   214
identifier          Gt/Rd  367
TypeArguments       Gt/Rd  539



STATE 141 ----------------------------------------------------------------------
( 50 )

AssertStatement ::= assert Expression  .SEMICOLON 
AssertStatement ::= assert Expression  .COLON Expression SEMICOLON 

COLON        Shift  216
SEMICOLON    Sh/Rd  295



STATE 142 ----------------------------------------------------------------------
( 51 )

SwitchStatement ::= switch LPAREN  .Expression RPAREN SwitchBlock 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   217
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 143 ----------------------------------------------------------------------
( 52 )

DoStatement ::= do Statement  .while LPAREN Expression RPAREN SEMICOLON 

while    Shift  218



STATE 144 ----------------------------------------------------------------------
( 53 )

BreakStatement ::= break identifieropt  .SEMICOLON 

SEMICOLON    Sh/Rd  321



STATE 145 ----------------------------------------------------------------------
( 54 )

ContinueStatement ::= continue identifieropt  .SEMICOLON 

SEMICOLON    Sh/Rd  322



STATE 146 ----------------------------------------------------------------------
( 55 )

ReturnStatement ::= return Expressionopt  .SEMICOLON 

SEMICOLON    Sh/Rd  323



STATE 147 ----------------------------------------------------------------------
( 56 )

SynchronizedStatement ::= synchronized LPAREN  .Expression RPAREN Block 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   219
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 148 ----------------------------------------------------------------------
( 57 )

ThrowStatement ::= throw Expression  .SEMICOLON 

SEMICOLON    Sh/Rd  324



STATE 149 ----------------------------------------------------------------------
( 58 )

TryStatement ::= try Block  .Catches 
TryStatement ::= try Block  .Catchesopt Finally 

Catches ::= .CatchClause 
Catches ::= .Catches CatchClause 
CatchClause ::= .catch LPAREN FormalParameter RPAREN Block 
Catchesopt ::= . (450)
Catchesopt ::= .Catches 

catch          Shift  221

Catchesopt     Goto   220
CatchClause    Gt/Rd  328
Catches        Goto   222

finally        Reduce 450

Default reduction to rule  450


STATE 150 ----------------------------------------------------------------------
( 60 )

ConstructorModifier ::= Annotations . (167)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

AT                         Shift  7

Annotation                 Gt/Rd  230
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

IDENTIFIER                 Reduce 167
public                     Reduce 167
protected                  Reduce 167
private                    Reduce 167
LESS                       Reduce 167

Default reduction to rule  167


STATE 151 ----------------------------------------------------------------------
( 61 )

ConstructorDeclaration ::= ConstructorModifiersopt ConstructorDeclarator  .
                           Throwsopt ConstructorBody 

Throws ::= .throws ExceptionTypeList 
Throwsopt ::= . (508)
Throwsopt ::= .Throws 

throws       Shift  224

Throwsopt    Goto   223
Throws       Gt/Rd  509

LBRACE       Reduce 508

Default reduction to rule  508


STATE 152 ----------------------------------------------------------------------
( 61 )

ConstructorDeclarator ::= TypeParametersopt  .SimpleTypeName LPAREN 
                          FormalParameterListopt RPAREN 

identifier ::= .IDENTIFIER 
SimpleTypeName ::= .identifier 

IDENTIFIER        Sh/Rd  3

SimpleTypeName    Goto   225
identifier        Gt/Rd  164



STATE 153 ----------------------------------------------------------------------
( 61 67 167 232 440 )

TypeParameters ::= LESS  .TypeParameterList GREATER 

identifier ::= .IDENTIFIER 
TypeVariable ::= .identifier 
TypeParameter ::= .TypeVariable TypeBoundopt 
TypeParameterList ::= .TypeParameter 
TypeParameterList ::= .TypeParameterList COMMA TypeParameter 

IDENTIFIER           Sh/Rd  3

TypeParameterList    Goto   226
TypeParameter        Gt/Rd  88
identifier           Gt/Rd  32
TypeVariable         Goto   227



STATE 154 ----------------------------------------------------------------------
( 62 )

ArrayType ::= Type  .LBRACKET RBRACKET 
FieldDeclaration ::= FieldModifiersopt Type  .VariableDeclarators SEMICOLON 

identifier ::= .IDENTIFIER 
VariableDeclarators ::= .VariableDeclarator 
VariableDeclarators ::= .VariableDeclarators COMMA VariableDeclarator 
VariableDeclarator ::= .VariableDeclaratorId 
VariableDeclarator ::= .VariableDeclaratorId EQUAL VariableInitializer 
VariableDeclaratorId ::= .identifier 
VariableDeclaratorId ::= .VariableDeclaratorId LBRACKET RBRACKET 

LBRACKET                Shift  130
IDENTIFIER              Sh/Rd  3

VariableDeclarators     Goto   228
VariableDeclarator      Gt/Rd  107
identifier              Gt/Rd  111
VariableDeclaratorId    Goto   165



STATE 155 ----------------------------------------------------------------------
( 66 )

MethodModifier ::= Annotations . (143)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

AT                         Shift  7

Annotation                 Gt/Rd  230
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

IDENTIFIER                 Reduce 143
void                       Reduce 143
synchronized               Reduce 143
strictfp                   Reduce 143
static                     Reduce 143
short                      Reduce 143
public                     Reduce 143
protected                  Reduce 143
private                    Reduce 143
native                     Reduce 143
long                       Reduce 143
int                        Reduce 143
float                      Reduce 143
final                      Reduce 143
double                     Reduce 143
char                       Reduce 143
byte                       Reduce 143
boolean                    Reduce 143
abstract                   Reduce 143
LESS                       Reduce 143

Default reduction to rule  143


STATE 156 ----------------------------------------------------------------------
( 67 )

MethodHeader ::= MethodModifiersopt TypeParametersopt  .ResultType 
                 MethodDeclarator Throwsopt 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ResultType ::= .Type 
ResultType ::= .void 

void                    Sh/Rd  128
boolean                 Sh/Rd  13
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
double                  Sh/Rd  22
float                   Sh/Rd  21
IDENTIFIER              Sh/Rd  3

ResultType              Goto   229
NumericType             Gt/Rd  12
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
Type                    Goto   230
TypeName                Goto   95
identifier              Goto   96
ClassType               Gt/Rd  26
ReferenceType           Gt/Rd  11
PrimitiveType           Gt/Rd  10



STATE 157 ----------------------------------------------------------------------
( 77 )

AnnotationTypeDeclaration ::= InterfaceModifiersopt AT  .interface identifier 
                              AnnotationTypeBody 

interface    Shift  231



STATE 158 ----------------------------------------------------------------------
( 77 )

NormalInterfaceDeclaration ::= InterfaceModifiersopt interface  .identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   232



STATE 159 ----------------------------------------------------------------------
( 79 )

PackageName ::= PackageName  .DOT identifier 
PackageDeclaration ::= Annotationsopt package PackageName  .SEMICOLON 

SEMICOLON    Sh/Rd  62
DOT          Shift  233



STATE 160 ----------------------------------------------------------------------
( 80 )

NormalAnnotation ::= AT TypeName LPAREN  .ElementValuePairsopt RPAREN 
SingleElementAnnotation ::= AT TypeName LPAREN  .ElementValue RPAREN 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
ElementValuePairs ::= .ElementValuePair 
ElementValuePairs ::= .ElementValuePairs COMMA ElementValuePair 
ElementValuePair ::= .SimpleName EQUAL ElementValue 
SimpleName ::= .identifier 
ElementValue ::= .ConditionalExpression 
ElementValue ::= .Annotation 
ElementValue ::= .ElementValueArrayInitializer 
ElementValueArrayInitializer ::= .LBRACE ElementValuesopt Commaopt RBRACE 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
ElementValuePairsopt ::= . (470)
ElementValuePairsopt ::= .ElementValuePairs 

IDENTIFIER                         Sh/Rd  3
LBRACE                             Shift  238
AT                                 Shift  7
MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41

ElementValue                       Goto   234
ElementValuePairsopt               Goto   235
SimpleName                         Goto   236
ElementValuePairs                  Goto   237
ElementValuePair                   Gt/Rd  235
ElementValueArrayInitializer       Gt/Rd  241
Annotation                         Gt/Rd  240
ConditionalExpression              Gt/Rd  239
SingleElementAnnotation            Gt/Rd  233
MarkerAnnotation                   Gt/Rd  232
NormalAnnotation                   Gt/Rd  231
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   239
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122

RPAREN                             Reduce 470

Default reduction to rule  470


STATE 161 ----------------------------------------------------------------------
( 80 90 95 312 )

TypeName ::= TypeName DOT  .identifier 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Gt/Rd  30



STATE 162 ----------------------------------------------------------------------
( 89 )

TypeName ::= TypeName  .DOT identifier 
SingleStaticImportDeclaration ::= import static TypeName  .DOT identifier 
                                  SEMICOLON 
StaticImportOnDemandDeclaration ::= import static TypeName  .DOT MULTIPLY 
                                    SEMICOLON 

DOT    Shift  240



STATE 163 ----------------------------------------------------------------------
( 91 )

PackageOrTypeName ::= PackageOrTypeName DOT  .identifier 
TypeImportOnDemandDeclaration ::= import PackageOrTypeName DOT  .MULTIPLY 
                                  SEMICOLON 

identifier ::= .IDENTIFIER 

MULTIPLY      Shift  241
IDENTIFIER    Sh/Rd  3

identifier    Gt/Rd  54



STATE 164 ----------------------------------------------------------------------
( 97 251 )

VariableDeclarators ::= VariableDeclarators  .COMMA VariableDeclarator 
LocalVariableDeclaration ::= VariableModifiersopt Type VariableDeclarators .
                              (257)

COMMA        Shift  242

SEMICOLON    Reduce 257

Default reduction to rule  257


STATE 165 ----------------------------------------------------------------------
( 97 154 242 438 )

VariableDeclarator ::= VariableDeclaratorId . (109)
VariableDeclarator ::= VariableDeclaratorId  .EQUAL VariableInitializer 
VariableDeclaratorId ::= VariableDeclaratorId  .LBRACKET RBRACKET 

LBRACKET      Shift  243
EQUAL         Shift  244

IDENTIFIER    Reduce 109
void          Reduce 109
strictfp      Reduce 109
static        Reduce 109
short         Reduce 109
public        Reduce 109
protected     Reduce 109
private       Reduce 109
long          Reduce 109
interface     Reduce 109
int           Reduce 109
float         Reduce 109
final         Reduce 109
enum          Reduce 109
double        Reduce 109
class         Reduce 109
char          Reduce 109
byte          Reduce 109
boolean       Reduce 109
abstract      Reduce 109
LESS          Reduce 109
RBRACE        Reduce 109
AT            Reduce 109
SEMICOLON     Reduce 109
COMMA         Reduce 109

Default reduction to rule  109


STATE 166 ----------------------------------------------------------------------
( 98 )

EnumDeclaration ::= ClassModifiersopt enum identifier  .Interfacesopt EnumBody 

Interfaces ::= .implements InterfaceTypeList 
Interfacesopt ::= . (516)
Interfacesopt ::= .Interfaces 

implements       Shift  246

Interfacesopt    Goto   245
Interfaces       Gt/Rd  517

LBRACE           Reduce 516

Default reduction to rule  516


STATE 167 ----------------------------------------------------------------------
( 99 )

NormalClassDeclaration ::= ClassModifiersopt class identifier  .
                           TypeParametersopt Superopt Interfacesopt ClassBody 

TypeParameters ::= .LESS TypeParameterList GREATER 
TypeParametersopt ::= . (520)
TypeParametersopt ::= .TypeParameters 

LESS                 Shift  153

TypeParametersopt    Goto   247
TypeParameters       Gt/Rd  521

implements           Reduce 520
extends              Reduce 520
LBRACE               Reduce 520

Default reduction to rule  520


STATE 168 ----------------------------------------------------------------------
( 100 368 )

EnhancedForStatement ::= for LPAREN FormalParameter  .COLON Expression RPAREN 
                         Statement 

COLON    Shift  248



STATE 169 ----------------------------------------------------------------------
( 100 )

BasicForStatement ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 

SEMICOLON    Shift  249



STATE 170 ----------------------------------------------------------------------
( 100 368 )

ForInit ::= StatementExpressionList . (315)
StatementExpressionList ::= StatementExpressionList  .COMMA StatementExpression 

COMMA        Shift  250

SEMICOLON    Reduce 315

Default reduction to rule  315


STATE 171 ----------------------------------------------------------------------
( 100 368 )

FormalParameter ::= VariableModifiersopt  .Type VariableDeclaratorId 
LocalVariableDeclaration ::= VariableModifiersopt  .Type VariableDeclarators 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ReferenceType           Gt/Rd  11
PrimitiveType           Gt/Rd  10
ClassType               Gt/Rd  26
TypeName                Goto   95
identifier              Goto   96
Type                    Goto   251
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 172 ----------------------------------------------------------------------
( 101 )

WhileStatement ::= while LPAREN Expression  .RPAREN Statement 

RPAREN    Shift  252



STATE 173 ----------------------------------------------------------------------
( 102 )

IfThenStatement ::= if LPAREN Expression  .RPAREN Statement 
IfThenElseStatement ::= if LPAREN Expression  .RPAREN StatementNoShortIf else 
                        Statement 

RPAREN    Shift  253



STATE 174 ----------------------------------------------------------------------
( 105 )

AssignmentOperator ::= GREATER GREATER  .EQUAL 
AssignmentOperator ::= GREATER GREATER  .GREATER EQUAL 

GREATER    Shift  254
EQUAL      Sh/Rd  441



STATE 175 ----------------------------------------------------------------------
( 110 )

Type ::= ReferenceType . (11)
CastExpression ::= LPAREN ReferenceType  .RPAREN UnaryExpressionNotPlusMinus 

RPAREN      Shift  255

LBRACKET    Reduce 11
DOT         Reduce 11

Default reduction to rule  11


STATE 176 ----------------------------------------------------------------------
( 110 )

Type ::= PrimitiveType . (10)
CastExpression ::= LPAREN PrimitiveType  .Dimsopt RPAREN UnaryExpression 

Dims ::= .LBRACKET RBRACKET 
Dims ::= .Dims LBRACKET RBRACKET 
Dimsopt ::= . (448)
Dimsopt ::= .Dims 

LBRACKET    Shift  258

Dimsopt     Goto   256
Dims        Goto   257

RPAREN      Reduce 448
DOT         Reduce 10

Default reduction to rule  10


STATE 177 ----------------------------------------------------------------------
( 114 267 327 372 )

AdditiveExpression ::= AdditiveExpression MINUS  .MultiplicativeExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

MultiplicativeExpression           Goto   259
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383



STATE 178 ----------------------------------------------------------------------
( 114 267 327 372 )

AdditiveExpression ::= AdditiveExpression PLUS  .MultiplicativeExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

MultiplicativeExpression           Goto   260
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383



STATE 179 ----------------------------------------------------------------------
( 115 259 260 )

MultiplicativeExpression ::= MultiplicativeExpression REMAINDER  .
                             UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  399
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 180 ----------------------------------------------------------------------
( 115 259 260 )

MultiplicativeExpression ::= MultiplicativeExpression DIVIDE  .UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  398
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 181 ----------------------------------------------------------------------
( 115 259 260 )

MultiplicativeExpression ::= MultiplicativeExpression MULTIPLY  .
                             UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  397
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 182 ----------------------------------------------------------------------
( 116 269 270 )

RelationalExpression ::= RelationalExpression instanceof  .ReferenceType 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
ReferenceType           Goto   261
PrimitiveType           Gt/Rd  10
Type                    Goto   203
TypeName                Goto   95
identifier              Goto   96
ClassType               Gt/Rd  26
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 183 ----------------------------------------------------------------------
( 116 269 270 )

RelationalExpression ::= RelationalExpression LESS_EQUAL  .ShiftExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ShiftExpression                    Goto   262
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115



STATE 184 ----------------------------------------------------------------------
( 116 269 270 )

RelationalExpression ::= RelationalExpression GREATER  .ShiftExpression 
RelationalExpression ::= RelationalExpression GREATER  .EQUAL ShiftExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 

EQUAL                              Shift  263
PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ShiftExpression                    Goto   264
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115



STATE 185 ----------------------------------------------------------------------
( 116 269 270 )

RelationalExpression ::= RelationalExpression LESS  .ShiftExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ShiftExpression                    Goto   265
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115



STATE 186 ----------------------------------------------------------------------
( 117 262 264 265 325 )

ShiftExpression ::= ShiftExpression GREATER  .GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression GREATER  .GREATER GREATER 
                    AdditiveExpression 

GREATER    Shift  266



STATE 187 ----------------------------------------------------------------------
( 117 262 264 265 325 )

ShiftExpression ::= ShiftExpression LEFT_SHIFT  .AdditiveExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

AdditiveExpression                 Goto   267
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396



STATE 188 ----------------------------------------------------------------------
( 118 272 )

AndExpression ::= AndExpression AND  .EqualityExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

EqualityExpression                 Goto   268
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117



STATE 189 ----------------------------------------------------------------------
( 119 268 )

EqualityExpression ::= EqualityExpression NOT_EQUAL  .RelationalExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

RelationalExpression               Goto   269
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114



STATE 190 ----------------------------------------------------------------------
( 119 268 )

EqualityExpression ::= EqualityExpression EQUAL_EQUAL  .RelationalExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

RelationalExpression               Goto   270
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114



STATE 191 ----------------------------------------------------------------------
( 120 275 )

InclusiveOrExpression ::= InclusiveOrExpression OR  .ExclusiveOrExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ExclusiveOrExpression              Goto   271
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119



STATE 192 ----------------------------------------------------------------------
( 121 271 )

ExclusiveOrExpression ::= ExclusiveOrExpression XOR  .AndExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

AndExpression                      Goto   272
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116



STATE 193 ----------------------------------------------------------------------
( 122 )

ConditionalExpression ::= ConditionalOrExpression QUESTION  .Expression COLON 
                          ConditionalExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   273
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 194 ----------------------------------------------------------------------
( 122 )

ConditionalOrExpression ::= ConditionalOrExpression OR_OR  .
                            ConditionalAndExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ConditionalAndExpression           Goto   274
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121



STATE 195 ----------------------------------------------------------------------
( 123 274 )

ConditionalAndExpression ::= ConditionalAndExpression AND_AND  .
                             InclusiveOrExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

InclusiveOrExpression              Goto   275
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118



STATE 196 ----------------------------------------------------------------------
( 125 )

ExpressionName ::= AmbiguousName DOT identifier . (50)
MethodName ::= AmbiguousName DOT identifier . (52)
AmbiguousName ::= AmbiguousName DOT identifier . (56)

IDENTIFIER          Reduce 50
void                Reduce 50
strictfp            Reduce 50
static              Reduce 50
short               Reduce 50
public              Reduce 50
protected           Reduce 50
private             Reduce 50
long                Reduce 50
interface           Reduce 50
int                 Reduce 50
instanceof          Reduce 50
float               Reduce 50
final               Reduce 50
enum                Reduce 50
double              Reduce 50
class               Reduce 50
char                Reduce 50
byte                Reduce 50
boolean             Reduce 50
abstract            Reduce 50
GREATER             Reduce 50
EQUAL_EQUAL         Reduce 50
EQUAL               Reduce 50
LESS_EQUAL          Reduce 50
LEFT_SHIFT_EQUAL    Reduce 50
LEFT_SHIFT          Reduce 50
LESS                Reduce 50
PLUS_EQUAL          Reduce 50
PLUS_PLUS           Reduce 50
PLUS                Reduce 50
RBRACE              Reduce 50
OR_EQUAL            Reduce 50
OR_OR               Reduce 50
XOR_EQUAL           Reduce 50
XOR                 Reduce 50
RBRACKET            Reduce 50
LBRACKET            Reduce 50
AT                  Reduce 50
QUESTION            Reduce 50
SEMICOLON           Reduce 50
COLON               Reduce 50
DIVIDE_EQUAL        Reduce 50
DIVIDE              Reduce 50
COMMA               Reduce 50
MULTIPLY_EQUAL      Reduce 50
MULTIPLY            Reduce 50
RPAREN              Reduce 50
AND_EQUAL           Reduce 50
AND_AND             Reduce 50
AND                 Reduce 50
REMAINDER_EQUAL     Reduce 50
REMAINDER           Reduce 50
NOT_EQUAL           Reduce 50
MINUS_EQUAL         Reduce 50
MINUS               Reduce 50
OR                  Reduce 50
MINUS_MINUS         Reduce 50
LPAREN              Reduce 52
DOT                 Reduce 56

Default reduction to rule  50


STATE 197 ----------------------------------------------------------------------
( 126 )

FieldAccess ::= ClassName DOT super  .DOT identifier 
MethodInvocation ::= ClassName DOT super  .DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 

DOT    Shift  276



STATE 198 ----------------------------------------------------------------------
( 127 )

MethodInvocation ::= super DOT TypeArgumentsopt  .identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   277



STATE 199 ----------------------------------------------------------------------
( 128 )

MethodInvocation ::= MethodName LPAREN ArgumentListopt  .RPAREN 

RPAREN    Sh/Rd  370



STATE 200 ----------------------------------------------------------------------
( 128 330 331 336 337 423 425 434 435 445 464 )

ArgumentList ::= ArgumentList  .COMMA Expression 
ArgumentListopt ::= ArgumentList . (497)

COMMA     Shift  278

RPAREN    Reduce 497

Default reduction to rule  497


STATE 201 ----------------------------------------------------------------------
( 131 )

MethodInvocation ::= TypeName DOT TypeArguments  .identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   279



STATE 202 ----------------------------------------------------------------------
( 132 )

TypeArguments ::= LESS ActualTypeArgumentList  .GREATER 
ActualTypeArgumentList ::= ActualTypeArgumentList  .COMMA ActualTypeArgument 

COMMA      Shift  280
GREATER    Sh/Rd  39



STATE 203 ----------------------------------------------------------------------
( 132 182 280 281 282 )

ArrayType ::= Type  .LBRACKET RBRACKET 

LBRACKET    Shift  130



STATE 204 ----------------------------------------------------------------------
( 132 280 )

Wildcard ::= QUESTION  .WildcardBoundsOpt 

WildcardBounds ::= .extends ReferenceType 
WildcardBounds ::= .super ReferenceType 
WildcardBoundsOpt ::= . (532)
WildcardBoundsOpt ::= .WildcardBounds 

super                Shift  281
extends              Shift  282

WildcardBoundsOpt    Gt/Rd  44
WildcardBounds       Gt/Rd  533

GREATER              Reduce 532
COMMA                Reduce 532

Default reduction to rule  532


STATE 205 ----------------------------------------------------------------------
( 132 280 )

Type ::= ReferenceType . (11)
ActualTypeArgument ::= ReferenceType . (42)

LBRACKET    Reduce 11
GREATER     Reduce 42
COMMA       Reduce 42

Default reduction to rule  42


STATE 206 ----------------------------------------------------------------------
( 134 )

ArrayCreationExpression ::= new ClassOrInterfaceType DimExprs  .Dimsopt 
DimExprs ::= DimExprs  .DimExpr 

DimExpr ::= .LBRACKET Expression RBRACKET 
Dims ::= .LBRACKET RBRACKET 
Dims ::= .Dims LBRACKET RBRACKET 
Dimsopt ::= . (448)
Dimsopt ::= .Dims 

LBRACKET       Shift  208

DimExpr        Gt/Rd  363
Dimsopt        Gt/Rd  359
Dims           Goto   257

IDENTIFIER     Reduce 448
void           Reduce 448
strictfp       Reduce 448
static         Reduce 448
short          Reduce 448
public         Reduce 448
protected      Reduce 448
private        Reduce 448
long           Reduce 448
interface      Reduce 448
int            Reduce 448
instanceof     Reduce 448
float          Reduce 448
final          Reduce 448
enum           Reduce 448
double         Reduce 448
class          Reduce 448
char           Reduce 448
byte           Reduce 448
boolean        Reduce 448
abstract       Reduce 448
GREATER        Reduce 448
EQUAL_EQUAL    Reduce 448
LESS_EQUAL     Reduce 448
LEFT_SHIFT     Reduce 448
LESS           Reduce 448
PLUS_PLUS      Reduce 448
PLUS           Reduce 448
RBRACE         Reduce 448
OR_OR          Reduce 448
XOR            Reduce 448
RBRACKET       Reduce 448
AT             Reduce 448
QUESTION       Reduce 448
SEMICOLON      Reduce 448
COLON          Reduce 448
DIVIDE         Reduce 448
DOT            Reduce 448
COMMA          Reduce 448
MULTIPLY       Reduce 448
RPAREN         Reduce 448
AND_AND        Reduce 448
AND            Reduce 448
REMAINDER      Reduce 448
NOT_EQUAL      Reduce 448
MINUS          Reduce 448
OR             Reduce 448
MINUS_MINUS    Reduce 448

Default reduction to rule  448


STATE 207 ----------------------------------------------------------------------
( 134 )

ArrayCreationExpression ::= new ClassOrInterfaceType Dims  .ArrayInitializer 
Dims ::= Dims  .LBRACKET RBRACKET 

ArrayInitializer ::= .LBRACE VariableInitializersopt Commaopt RBRACE 

LBRACKET            Shift  283
LBRACE              Shift  284

ArrayInitializer    Gt/Rd  361



STATE 208 ----------------------------------------------------------------------
( 134 135 206 209 )

DimExpr ::= LBRACKET  .Expression RBRACKET 
Dims ::= LBRACKET  .RBRACKET 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

RBRACKET                           Sh/Rd  365
PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   285
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 209 ----------------------------------------------------------------------
( 135 )

ArrayCreationExpression ::= new PrimitiveType DimExprs  .Dimsopt 
DimExprs ::= DimExprs  .DimExpr 

DimExpr ::= .LBRACKET Expression RBRACKET 
Dims ::= .LBRACKET RBRACKET 
Dims ::= .Dims LBRACKET RBRACKET 
Dimsopt ::= . (448)
Dimsopt ::= .Dims 

LBRACKET       Shift  208

DimExpr        Gt/Rd  363
Dimsopt        Gt/Rd  358
Dims           Goto   257

IDENTIFIER     Reduce 448
void           Reduce 448
strictfp       Reduce 448
static         Reduce 448
short          Reduce 448
public         Reduce 448
protected      Reduce 448
private        Reduce 448
long           Reduce 448
interface      Reduce 448
int            Reduce 448
instanceof     Reduce 448
float          Reduce 448
final          Reduce 448
enum           Reduce 448
double         Reduce 448
class          Reduce 448
char           Reduce 448
byte           Reduce 448
boolean        Reduce 448
abstract       Reduce 448
GREATER        Reduce 448
EQUAL_EQUAL    Reduce 448
LESS_EQUAL     Reduce 448
LEFT_SHIFT     Reduce 448
LESS           Reduce 448
PLUS_PLUS      Reduce 448
PLUS           Reduce 448
RBRACE         Reduce 448
OR_OR          Reduce 448
XOR            Reduce 448
RBRACKET       Reduce 448
AT             Reduce 448
QUESTION       Reduce 448
SEMICOLON      Reduce 448
COLON          Reduce 448
DIVIDE         Reduce 448
DOT            Reduce 448
COMMA          Reduce 448
MULTIPLY       Reduce 448
RPAREN         Reduce 448
AND_AND        Reduce 448
AND            Reduce 448
REMAINDER      Reduce 448
NOT_EQUAL      Reduce 448
MINUS          Reduce 448
OR             Reduce 448
MINUS_MINUS    Reduce 448

Default reduction to rule  448


STATE 210 ----------------------------------------------------------------------
( 135 )

ArrayCreationExpression ::= new PrimitiveType Dims  .ArrayInitializer 
Dims ::= Dims  .LBRACKET RBRACKET 

ArrayInitializer ::= .LBRACE VariableInitializersopt Commaopt RBRACE 

LBRACKET            Shift  283
LBRACE              Shift  284

ArrayInitializer    Gt/Rd  360



STATE 211 ----------------------------------------------------------------------
( 136 )

ClassInstanceCreationExpression ::= new TypeArgumentsopt 
                                    ClassOrInterfaceType  .TypeArgumentsopt 
                                    LPAREN ArgumentListopt RPAREN ClassBodyopt 

TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

LESS                Shift  132

TypeArgumentsopt    Goto   286
TypeArguments       Gt/Rd  539

LPAREN              Reduce 538

Default reduction to rule  538


STATE 212 ----------------------------------------------------------------------
( 137 )

ArrayAccess ::= PrimaryNoNewArray LBRACKET Expression  .RBRACKET 

RBRACKET    Sh/Rd  376



STATE 213 ----------------------------------------------------------------------
( 139 )

ArrayAccess ::= ExpressionName LBRACKET Expression  .RBRACKET 

RBRACKET    Sh/Rd  375



STATE 214 ----------------------------------------------------------------------
( 140 )

MethodInvocation ::= Primary DOT TypeArgumentsopt  .identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   287



STATE 215 ----------------------------------------------------------------------
( 140 390 )

ClassInstanceCreationExpression ::= Primary DOT new  .TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 

TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

LESS                Shift  132

TypeArgumentsopt    Goto   288
TypeArguments       Gt/Rd  539

IDENTIFIER          Reduce 538

Default reduction to rule  538


STATE 216 ----------------------------------------------------------------------
( 141 )

AssertStatement ::= assert Expression COLON  .Expression SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   289
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 217 ----------------------------------------------------------------------
( 142 )

SwitchStatement ::= switch LPAREN Expression  .RPAREN SwitchBlock 

RPAREN    Shift  290



STATE 218 ----------------------------------------------------------------------
( 143 )

DoStatement ::= do Statement while  .LPAREN Expression RPAREN SEMICOLON 

LPAREN    Shift  291



STATE 219 ----------------------------------------------------------------------
( 147 )

SynchronizedStatement ::= synchronized LPAREN Expression  .RPAREN Block 

RPAREN    Shift  292



STATE 220 ----------------------------------------------------------------------
( 149 )

TryStatement ::= try Block Catchesopt  .Finally 

Finally ::= .finally Block 

finally    Shift  293

Finally    Gt/Rd  327



STATE 221 ----------------------------------------------------------------------
( 149 222 )

CatchClause ::= catch  .LPAREN FormalParameter RPAREN Block 

LPAREN    Shift  294



STATE 222 ----------------------------------------------------------------------
( 149 )

TryStatement ::= try Block Catches . (326)
Catches ::= Catches  .CatchClause 
Catchesopt ::= Catches . (451)

CatchClause ::= .catch LPAREN FormalParameter RPAREN Block 

catch                   Shift  221

CatchClause             Gt/Rd  329

IDENTIFIER              Reduce 326
EOF_TOKEN               Reduce 326
while                   Reduce 326
void                    Reduce 326
try                     Reduce 326
true                    Reduce 326
throw                   Reduce 326
this                    Reduce 326
synchronized            Reduce 326
switch                  Reduce 326
super                   Reduce 326
strictfp                Reduce 326
static                  Reduce 326
short                   Reduce 326
return                  Reduce 326
public                  Reduce 326
protected               Reduce 326
private                 Reduce 326
null                    Reduce 326
new                     Reduce 326
long                    Reduce 326
int                     Reduce 326
if                      Reduce 326
for                     Reduce 326
float                   Reduce 326
final                   Reduce 326
false                   Reduce 326
else                    Reduce 326
enum                    Reduce 326
double                  Reduce 326
do                      Reduce 326
default                 Reduce 326
continue                Reduce 326
class                   Reduce 326
char                    Reduce 326
case                    Reduce 326
byte                    Reduce 326
break                   Reduce 326
boolean                 Reduce 326
assert                  Reduce 326
abstract                Reduce 326
EndJava                 Reduce 326
EndAction               Reduce 326
PLUS_PLUS               Reduce 326
RBRACE                  Reduce 326
LBRACE                  Reduce 326
AT                      Reduce 326
SEMICOLON               Reduce 326
LPAREN                  Reduce 326
MINUS_MINUS             Reduce 326
StringLiteral           Reduce 326
CharacterLiteral        Reduce 326
DoubleLiteral           Reduce 326
FloatingPointLiteral    Reduce 326
LongLiteral             Reduce 326
IntegerLiteral          Reduce 326
finally                 Reduce 451

Default reduction to rule  326


STATE 223 ----------------------------------------------------------------------
( 151 )

ConstructorDeclaration ::= ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt  .ConstructorBody 

ConstructorBody ::= .LBRACE ExplicitConstructorInvocationopt BlockStatementsopt 
                    RBRACE 

LBRACE             Shift  295

ConstructorBody    Gt/Rd  162



STATE 224 ----------------------------------------------------------------------
( 151 300 473 )

Throws ::= throws  .ExceptionTypeList 

identifier ::= .IDENTIFIER 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ExceptionTypeList ::= .ExceptionType 
ExceptionTypeList ::= .ExceptionTypeList COMMA ExceptionType 
ExceptionType ::= .ClassType 
ExceptionType ::= .TypeVariable 

IDENTIFIER           Sh/Rd  3

ExceptionTypeList    Goto   296
ExceptionType        Gt/Rd  154
TypeName             Goto   95
identifier           Goto   96
TypeVariable         Gt/Rd  157
ClassType            Gt/Rd  156



STATE 225 ----------------------------------------------------------------------
( 152 )

ConstructorDeclarator ::= TypeParametersopt SimpleTypeName  .LPAREN 
                          FormalParameterListopt RPAREN 

LPAREN    Shift  297



STATE 226 ----------------------------------------------------------------------
( 153 )

TypeParameters ::= LESS TypeParameterList  .GREATER 
TypeParameterList ::= TypeParameterList  .COMMA TypeParameter 

COMMA      Shift  298
GREATER    Sh/Rd  87



STATE 227 ----------------------------------------------------------------------
( 153 298 )

TypeParameter ::= TypeVariable  .TypeBoundopt 

TypeBound ::= .extends ClassOrInterfaceType AdditionalBoundListopt 
TypeBoundopt ::= . (536)
TypeBoundopt ::= .TypeBound 

extends         Shift  299

TypeBoundopt    Gt/Rd  34
TypeBound       Gt/Rd  537

GREATER         Reduce 536
COMMA           Reduce 536

Default reduction to rule  536


STATE 228 ----------------------------------------------------------------------
( 154 )

FieldDeclaration ::= FieldModifiersopt Type VariableDeclarators  .SEMICOLON 
VariableDeclarators ::= VariableDeclarators  .COMMA VariableDeclarator 

COMMA        Shift  242
SEMICOLON    Sh/Rd  106



STATE 229 ----------------------------------------------------------------------
( 156 )

MethodHeader ::= MethodModifiersopt TypeParametersopt ResultType  .
                 MethodDeclarator Throwsopt 

identifier ::= .IDENTIFIER 
MethodDeclarator ::= .identifier LPAREN FormalParameterListopt RPAREN 
MethodDeclarator ::= .MethodDeclarator LBRACKET RBRACKET 

IDENTIFIER          Sh/Rd  3

MethodDeclarator    Goto   300
identifier          Goto   301



STATE 230 ----------------------------------------------------------------------
( 156 459 )

ArrayType ::= Type  .LBRACKET RBRACKET 
ResultType ::= Type . (127)

LBRACKET      Shift  130

IDENTIFIER    Reduce 127

Default reduction to rule  127


STATE 231 ----------------------------------------------------------------------
( 157 )

AnnotationTypeDeclaration ::= InterfaceModifiersopt AT interface  .identifier 
                              AnnotationTypeBody 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   302



STATE 232 ----------------------------------------------------------------------
( 158 )

NormalInterfaceDeclaration ::= InterfaceModifiersopt interface identifier  .
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 

TypeParameters ::= .LESS TypeParameterList GREATER 
TypeParametersopt ::= . (520)
TypeParametersopt ::= .TypeParameters 

LESS                 Shift  153

TypeParametersopt    Goto   303
TypeParameters       Gt/Rd  521

extends              Reduce 520
LBRACE               Reduce 520

Default reduction to rule  520


STATE 233 ----------------------------------------------------------------------
( 159 )

PackageName ::= PackageName DOT  .identifier 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Gt/Rd  48



STATE 234 ----------------------------------------------------------------------
( 160 )

SingleElementAnnotation ::= AT TypeName LPAREN ElementValue  .RPAREN 

RPAREN    Sh/Rd  246



STATE 235 ----------------------------------------------------------------------
( 160 )

NormalAnnotation ::= AT TypeName LPAREN ElementValuePairsopt  .RPAREN 

RPAREN    Sh/Rd  234



STATE 236 ----------------------------------------------------------------------
( 160 305 )

ElementValuePair ::= SimpleName  .EQUAL ElementValue 

EQUAL    Shift  304



STATE 237 ----------------------------------------------------------------------
( 160 )

ElementValuePairs ::= ElementValuePairs  .COMMA ElementValuePair 
ElementValuePairsopt ::= ElementValuePairs . (471)

COMMA     Shift  305

RPAREN    Reduce 471

Default reduction to rule  471


STATE 238 ----------------------------------------------------------------------
( 160 238 304 359 477 )

ElementValueArrayInitializer ::= LBRACE  .ElementValuesopt Commaopt RBRACE 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
ElementValue ::= .ConditionalExpression 
ElementValue ::= .Annotation 
ElementValue ::= .ElementValueArrayInitializer 
ElementValueArrayInitializer ::= .LBRACE ElementValuesopt Commaopt RBRACE 
ElementValues ::= .ElementValue 
ElementValues ::= .ElementValues COMMA ElementValue 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
ElementValuesopt ::= . (468)
ElementValuesopt ::= .ElementValues 

IDENTIFIER                         Sh/Rd  3
LBRACE                             Shift  238
AT                                 Shift  7
MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41

ElementValuesopt                   Goto   306
ElementValueArrayInitializer       Gt/Rd  241
Annotation                         Gt/Rd  240
ConditionalExpression              Gt/Rd  239
SingleElementAnnotation            Gt/Rd  233
MarkerAnnotation                   Gt/Rd  232
NormalAnnotation                   Gt/Rd  231
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122
ElementValues                      Goto   307
ElementValue                       Gt/Rd  243

RBRACE                             Reduce 468
COMMA                              Reduce 468

Default reduction to rule  468


STATE 239 ----------------------------------------------------------------------
( 160 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)
SimpleName ::= identifier . (238)

instanceof     Reduce 49
GREATER        Reduce 49
EQUAL_EQUAL    Reduce 49
LESS_EQUAL     Reduce 49
LEFT_SHIFT     Reduce 49
LESS           Reduce 29
PLUS_PLUS      Reduce 49
PLUS           Reduce 49
OR_OR          Reduce 49
XOR            Reduce 49
LBRACKET       Reduce 29
QUESTION       Reduce 49
DIVIDE         Reduce 49
MULTIPLY       Reduce 49
RPAREN         Reduce 49
AND_AND        Reduce 49
AND            Reduce 49
REMAINDER      Reduce 49
NOT_EQUAL      Reduce 49
MINUS          Reduce 49
OR             Reduce 49
MINUS_MINUS    Reduce 49
LPAREN         Reduce 51
DOT            Reduce 29
EQUAL          Reduce 238

Default reduction to rule  49


STATE 240 ----------------------------------------------------------------------
( 162 )

TypeName ::= TypeName DOT  .identifier 
SingleStaticImportDeclaration ::= import static TypeName DOT  .identifier 
                                  SEMICOLON 
StaticImportOnDemandDeclaration ::= import static TypeName DOT  .MULTIPLY 
                                    SEMICOLON 

identifier ::= .IDENTIFIER 

MULTIPLY      Shift  308
IDENTIFIER    Sh/Rd  3

identifier    Goto   309



STATE 241 ----------------------------------------------------------------------
( 163 )

TypeImportOnDemandDeclaration ::= import PackageOrTypeName DOT MULTIPLY  .
                                  SEMICOLON 

SEMICOLON    Sh/Rd  68



STATE 242 ----------------------------------------------------------------------
( 164 228 458 )

VariableDeclarators ::= VariableDeclarators COMMA  .VariableDeclarator 

identifier ::= .IDENTIFIER 
VariableDeclarator ::= .VariableDeclaratorId 
VariableDeclarator ::= .VariableDeclaratorId EQUAL VariableInitializer 
VariableDeclaratorId ::= .identifier 
VariableDeclaratorId ::= .VariableDeclaratorId LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3

VariableDeclarator      Gt/Rd  108
VariableDeclaratorId    Goto   165
identifier              Gt/Rd  111



STATE 243 ----------------------------------------------------------------------
( 165 317 432 456 )

VariableDeclaratorId ::= VariableDeclaratorId LBRACKET  .RBRACKET 

RBRACKET    Sh/Rd  112



STATE 244 ----------------------------------------------------------------------
( 165 317 )

VariableDeclarator ::= VariableDeclaratorId EQUAL  .VariableInitializer 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
VariableInitializer ::= .Expression 
VariableInitializer ::= .ArrayInitializer 
ArrayInitializer ::= .LBRACE VariableInitializersopt Commaopt RBRACE 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

LBRACE                             Shift  284
MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
IDENTIFIER                         Sh/Rd  3
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41

VariableInitializer                Gt/Rd  110
ArrayInitializer                   Gt/Rd  114
Expression                         Gt/Rd  113
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
LeftHandSide                       Goto   27
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Goto   39
MethodInvocation                   Gt/Rd  342
FieldAccess                        Goto   40
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   44
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122
AssignmentExpression               Gt/Rd  446



STATE 245 ----------------------------------------------------------------------
( 166 )

EnumDeclaration ::= ClassModifiersopt enum identifier Interfacesopt  .EnumBody 

EnumBody ::= .LBRACE EnumConstantsopt Commaopt EnumBodyDeclarationsopt RBRACE 

LBRACE      Shift  310

EnumBody    Gt/Rd  175



STATE 246 ----------------------------------------------------------------------
( 166 313 )

Interfaces ::= implements  .InterfaceTypeList 

identifier ::= .IDENTIFIER 
InterfaceType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
InterfaceTypeList ::= .InterfaceType 
InterfaceTypeList ::= .InterfaceTypeList COMMA InterfaceType 

IDENTIFIER           Sh/Rd  3

InterfaceTypeList    Goto   311
InterfaceType        Gt/Rd  92
identifier           Gt/Rd  29
TypeName             Goto   312



STATE 247 ----------------------------------------------------------------------
( 167 )

NormalClassDeclaration ::= ClassModifiersopt class identifier 
                           TypeParametersopt  .Superopt Interfacesopt ClassBody 

Super ::= .extends ClassType 
Superopt ::= . (518)
Superopt ::= .Super 

extends       Shift  314

Superopt      Goto   313
Super         Gt/Rd  519

implements    Reduce 518
LBRACE        Reduce 518

Default reduction to rule  518


STATE 248 ----------------------------------------------------------------------
( 168 )

EnhancedForStatement ::= for LPAREN FormalParameter COLON  .Expression RPAREN 
                         Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   315
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 249 ----------------------------------------------------------------------
( 169 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON  .Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
Expressionopt ::= . (456)
Expressionopt ::= .Expression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expressionopt                      Goto   316
Expression                         Gt/Rd  457
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
LeftHandSide                       Goto   27
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Goto   39
MethodInvocation                   Gt/Rd  342
FieldAccess                        Goto   40
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   44
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122
AssignmentExpression               Gt/Rd  446

SEMICOLON                          Reduce 456

Default reduction to rule  456


STATE 250 ----------------------------------------------------------------------
( 170 419 )

StatementExpressionList ::= StatementExpressionList COMMA  .StatementExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
LPAREN                             Shift  28
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
IDENTIFIER                         Sh/Rd  3

StatementExpression                Gt/Rd  319
PreDecrementExpression             Gt/Rd  290
PreIncrementExpression             Gt/Rd  289
Assignment                         Gt/Rd  288
PostDecrementExpression            Goto   48
PostIncrementExpression            Goto   49
PostfixExpression                  Goto   43
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
ExpressionName                     Goto   44
ArrayAccess                        Goto   39
MethodInvocation                   Goto   47
FieldAccess                        Goto   40
ClassInstanceCreationExpression    Goto   46
Type                               Goto   34
Literal                            Gt/Rd  334
ClassName                          Goto   31
Primary                            Goto   45
AmbiguousName                      Goto   30
identifier                         Goto   109
LeftHandSide                       Goto   27



STATE 251 ----------------------------------------------------------------------
( 171 )

ArrayType ::= Type  .LBRACKET RBRACKET 
FormalParameter ::= VariableModifiersopt Type  .VariableDeclaratorId 
LocalVariableDeclaration ::= VariableModifiersopt Type  .VariableDeclarators 

identifier ::= .IDENTIFIER 
VariableDeclarators ::= .VariableDeclarator 
VariableDeclarators ::= .VariableDeclarators COMMA VariableDeclarator 
VariableDeclarator ::= .VariableDeclaratorId 
VariableDeclarator ::= .VariableDeclaratorId EQUAL VariableInitializer 
VariableDeclaratorId ::= .identifier 
VariableDeclaratorId ::= .VariableDeclaratorId LBRACKET RBRACKET 

LBRACKET                Shift  130
IDENTIFIER              Sh/Rd  3

identifier              Gt/Rd  111
VariableDeclarators     Goto   164
VariableDeclarator      Gt/Rd  107
VariableDeclaratorId    Goto   317



STATE 252 ----------------------------------------------------------------------
( 172 )

WhileStatement ::= while LPAREN Expression RPAREN  .Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  22
while                                   Shift  23
if                                      Shift  24
LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58

Statement                               Gt/Rd  308
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
identifier                              Goto   36
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264



STATE 253 ----------------------------------------------------------------------
( 173 )

IfThenStatement ::= if LPAREN Expression RPAREN  .Statement 
IfThenElseStatement ::= if LPAREN Expression RPAREN  .StatementNoShortIf else 
                        Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
LabeledStatementNoShortIf ::= .identifier COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58
for                                     Shift  320
while                                   Shift  321
if                                      Shift  322

StatementNoShortIf                      Goto   318
Statement                               Gt/Rd  281
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
ForStatementNoShortIf                   Gt/Rd  280
WhileStatementNoShortIf                 Gt/Rd  279
IfThenElseStatementNoShortIf            Gt/Rd  278
LabeledStatementNoShortIf               Gt/Rd  277
StatementWithoutTrailingSubstatement    Goto   319
identifier                              Goto   323



STATE 254 ----------------------------------------------------------------------
( 174 )

AssignmentOperator ::= GREATER GREATER GREATER  .EQUAL 

EQUAL    Sh/Rd  442



STATE 255 ----------------------------------------------------------------------
( 175 )

CastExpression ::= LPAREN ReferenceType RPAREN  .UnaryExpressionNotPlusMinus 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29

UnaryExpressionNotPlusMinus        Gt/Rd  395
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45



STATE 256 ----------------------------------------------------------------------
( 176 )

CastExpression ::= LPAREN PrimitiveType Dimsopt  .RPAREN UnaryExpression 

RPAREN    Shift  324



STATE 257 ----------------------------------------------------------------------
( 176 206 209 )

Dims ::= Dims  .LBRACKET RBRACKET 
Dimsopt ::= Dims . (449)

LBRACKET       Shift  283

IDENTIFIER     Reduce 449
void           Reduce 449
strictfp       Reduce 449
static         Reduce 449
short          Reduce 449
public         Reduce 449
protected      Reduce 449
private        Reduce 449
long           Reduce 449
interface      Reduce 449
int            Reduce 449
instanceof     Reduce 449
float          Reduce 449
final          Reduce 449
enum           Reduce 449
double         Reduce 449
class          Reduce 449
char           Reduce 449
byte           Reduce 449
boolean        Reduce 449
abstract       Reduce 449
GREATER        Reduce 449
EQUAL_EQUAL    Reduce 449
LESS_EQUAL     Reduce 449
LEFT_SHIFT     Reduce 449
LESS           Reduce 449
PLUS_PLUS      Reduce 449
PLUS           Reduce 449
RBRACE         Reduce 449
OR_OR          Reduce 449
XOR            Reduce 449
RBRACKET       Reduce 449
AT             Reduce 449
QUESTION       Reduce 449
SEMICOLON      Reduce 449
COLON          Reduce 449
DIVIDE         Reduce 449
DOT            Reduce 449
COMMA          Reduce 449
MULTIPLY       Reduce 449
RPAREN         Reduce 449
AND_AND        Reduce 449
AND            Reduce 449
REMAINDER      Reduce 449
NOT_EQUAL      Reduce 449
MINUS          Reduce 449
OR             Reduce 449
MINUS_MINUS    Reduce 449

Default reduction to rule  449


STATE 258 ----------------------------------------------------------------------
( 176 )

Dims ::= LBRACKET  .RBRACKET 

RBRACKET    Sh/Rd  365



STATE 259 ----------------------------------------------------------------------
( 177 )

MultiplicativeExpression ::= MultiplicativeExpression  .MULTIPLY 
                             UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .DIVIDE UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= AdditiveExpression MINUS MultiplicativeExpression .
                        (402)

REMAINDER      Shift  179
DIVIDE         Shift  180
MULTIPLY       Shift  181

IDENTIFIER     Reduce 402
void           Reduce 402
strictfp       Reduce 402
static         Reduce 402
short          Reduce 402
public         Reduce 402
protected      Reduce 402
private        Reduce 402
long           Reduce 402
interface      Reduce 402
int            Reduce 402
instanceof     Reduce 402
float          Reduce 402
final          Reduce 402
enum           Reduce 402
double         Reduce 402
class          Reduce 402
char           Reduce 402
byte           Reduce 402
boolean        Reduce 402
abstract       Reduce 402
GREATER        Reduce 402
EQUAL_EQUAL    Reduce 402
LESS_EQUAL     Reduce 402
LEFT_SHIFT     Reduce 402
LESS           Reduce 402
PLUS           Reduce 402
RBRACE         Reduce 402
OR_OR          Reduce 402
XOR            Reduce 402
RBRACKET       Reduce 402
AT             Reduce 402
QUESTION       Reduce 402
SEMICOLON      Reduce 402
COLON          Reduce 402
COMMA          Reduce 402
RPAREN         Reduce 402
AND_AND        Reduce 402
AND            Reduce 402
NOT_EQUAL      Reduce 402
MINUS          Reduce 402
OR             Reduce 402

Default reduction to rule  402


STATE 260 ----------------------------------------------------------------------
( 178 )

MultiplicativeExpression ::= MultiplicativeExpression  .MULTIPLY 
                             UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .DIVIDE UnaryExpression 
MultiplicativeExpression ::= MultiplicativeExpression  .REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= AdditiveExpression PLUS MultiplicativeExpression . (401)

REMAINDER      Shift  179
DIVIDE         Shift  180
MULTIPLY       Shift  181

IDENTIFIER     Reduce 401
void           Reduce 401
strictfp       Reduce 401
static         Reduce 401
short          Reduce 401
public         Reduce 401
protected      Reduce 401
private        Reduce 401
long           Reduce 401
interface      Reduce 401
int            Reduce 401
instanceof     Reduce 401
float          Reduce 401
final          Reduce 401
enum           Reduce 401
double         Reduce 401
class          Reduce 401
char           Reduce 401
byte           Reduce 401
boolean        Reduce 401
abstract       Reduce 401
GREATER        Reduce 401
EQUAL_EQUAL    Reduce 401
LESS_EQUAL     Reduce 401
LEFT_SHIFT     Reduce 401
LESS           Reduce 401
PLUS           Reduce 401
RBRACE         Reduce 401
OR_OR          Reduce 401
XOR            Reduce 401
RBRACKET       Reduce 401
AT             Reduce 401
QUESTION       Reduce 401
SEMICOLON      Reduce 401
COLON          Reduce 401
COMMA          Reduce 401
RPAREN         Reduce 401
AND_AND        Reduce 401
AND            Reduce 401
NOT_EQUAL      Reduce 401
MINUS          Reduce 401
OR             Reduce 401

Default reduction to rule  401


STATE 261 ----------------------------------------------------------------------
( 182 )

Type ::= ReferenceType . (11)
RelationalExpression ::= RelationalExpression instanceof ReferenceType . (412)

LBRACKET       Reduce 11
IDENTIFIER     Reduce 412
void           Reduce 412
strictfp       Reduce 412
static         Reduce 412
short          Reduce 412
public         Reduce 412
protected      Reduce 412
private        Reduce 412
long           Reduce 412
interface      Reduce 412
int            Reduce 412
instanceof     Reduce 412
float          Reduce 412
final          Reduce 412
enum           Reduce 412
double         Reduce 412
class          Reduce 412
char           Reduce 412
byte           Reduce 412
boolean        Reduce 412
abstract       Reduce 412
GREATER        Reduce 412
EQUAL_EQUAL    Reduce 412
LESS_EQUAL     Reduce 412
LESS           Reduce 412
RBRACE         Reduce 412
OR_OR          Reduce 412
XOR            Reduce 412
RBRACKET       Reduce 412
AT             Reduce 412
QUESTION       Reduce 412
SEMICOLON      Reduce 412
COLON          Reduce 412
COMMA          Reduce 412
RPAREN         Reduce 412
AND_AND        Reduce 412
AND            Reduce 412
NOT_EQUAL      Reduce 412
OR             Reduce 412

Default reduction to rule  412


STATE 262 ----------------------------------------------------------------------
( 183 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= RelationalExpression LESS_EQUAL ShiftExpression .
                          (410)

GREATER        Shift  186
LEFT_SHIFT     Shift  187

IDENTIFIER     Reduce 410
void           Reduce 410
strictfp       Reduce 410
static         Reduce 410
short          Reduce 410
public         Reduce 410
protected      Reduce 410
private        Reduce 410
long           Reduce 410
interface      Reduce 410
int            Reduce 410
instanceof     Reduce 410
float          Reduce 410
final          Reduce 410
enum           Reduce 410
double         Reduce 410
class          Reduce 410
char           Reduce 410
byte           Reduce 410
boolean        Reduce 410
abstract       Reduce 410
EQUAL_EQUAL    Reduce 410
LESS_EQUAL     Reduce 410
LESS           Reduce 410
RBRACE         Reduce 410
OR_OR          Reduce 410
XOR            Reduce 410
RBRACKET       Reduce 410
AT             Reduce 410
QUESTION       Reduce 410
SEMICOLON      Reduce 410
COLON          Reduce 410
COMMA          Reduce 410
RPAREN         Reduce 410
AND_AND        Reduce 410
AND            Reduce 410
NOT_EQUAL      Reduce 410
OR             Reduce 410

Default reduction to rule  410


STATE 263 ----------------------------------------------------------------------
( 184 )

RelationalExpression ::= RelationalExpression GREATER EQUAL  .ShiftExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ShiftExpression                    Goto   325
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115



STATE 264 ----------------------------------------------------------------------
( 184 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= RelationalExpression GREATER ShiftExpression . (409)

GREATER        Shift  186
LEFT_SHIFT     Shift  187

IDENTIFIER     Reduce 409
void           Reduce 409
strictfp       Reduce 409
static         Reduce 409
short          Reduce 409
public         Reduce 409
protected      Reduce 409
private        Reduce 409
long           Reduce 409
interface      Reduce 409
int            Reduce 409
instanceof     Reduce 409
float          Reduce 409
final          Reduce 409
enum           Reduce 409
double         Reduce 409
class          Reduce 409
char           Reduce 409
byte           Reduce 409
boolean        Reduce 409
abstract       Reduce 409
EQUAL_EQUAL    Reduce 409
LESS_EQUAL     Reduce 409
LESS           Reduce 409
RBRACE         Reduce 409
OR_OR          Reduce 409
XOR            Reduce 409
RBRACKET       Reduce 409
AT             Reduce 409
QUESTION       Reduce 409
SEMICOLON      Reduce 409
COLON          Reduce 409
COMMA          Reduce 409
RPAREN         Reduce 409
AND_AND        Reduce 409
AND            Reduce 409
NOT_EQUAL      Reduce 409
OR             Reduce 409

Default reduction to rule  409


STATE 265 ----------------------------------------------------------------------
( 185 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= RelationalExpression LESS ShiftExpression . (408)

GREATER        Shift  186
LEFT_SHIFT     Shift  187

IDENTIFIER     Reduce 408
void           Reduce 408
strictfp       Reduce 408
static         Reduce 408
short          Reduce 408
public         Reduce 408
protected      Reduce 408
private        Reduce 408
long           Reduce 408
interface      Reduce 408
int            Reduce 408
instanceof     Reduce 408
float          Reduce 408
final          Reduce 408
enum           Reduce 408
double         Reduce 408
class          Reduce 408
char           Reduce 408
byte           Reduce 408
boolean        Reduce 408
abstract       Reduce 408
EQUAL_EQUAL    Reduce 408
LESS_EQUAL     Reduce 408
LESS           Reduce 408
RBRACE         Reduce 408
OR_OR          Reduce 408
XOR            Reduce 408
RBRACKET       Reduce 408
AT             Reduce 408
QUESTION       Reduce 408
SEMICOLON      Reduce 408
COLON          Reduce 408
COMMA          Reduce 408
RPAREN         Reduce 408
AND_AND        Reduce 408
AND            Reduce 408
NOT_EQUAL      Reduce 408
OR             Reduce 408

Default reduction to rule  408


STATE 266 ----------------------------------------------------------------------
( 186 )

ShiftExpression ::= ShiftExpression GREATER GREATER  .AdditiveExpression 
ShiftExpression ::= ShiftExpression GREATER GREATER  .GREATER 
                    AdditiveExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 

GREATER                            Shift  326
MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
IDENTIFIER                         Sh/Rd  3
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41

AdditiveExpression                 Goto   327
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396



STATE 267 ----------------------------------------------------------------------
( 187 )

AdditiveExpression ::= AdditiveExpression  .PLUS MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression  .MINUS MultiplicativeExpression 
ShiftExpression ::= ShiftExpression LEFT_SHIFT AdditiveExpression . (404)

MINUS          Shift  177
PLUS           Shift  178

IDENTIFIER     Reduce 404
void           Reduce 404
strictfp       Reduce 404
static         Reduce 404
short          Reduce 404
public         Reduce 404
protected      Reduce 404
private        Reduce 404
long           Reduce 404
interface      Reduce 404
int            Reduce 404
instanceof     Reduce 404
float          Reduce 404
final          Reduce 404
enum           Reduce 404
double         Reduce 404
class          Reduce 404
char           Reduce 404
byte           Reduce 404
boolean        Reduce 404
abstract       Reduce 404
GREATER        Reduce 404
EQUAL_EQUAL    Reduce 404
LESS_EQUAL     Reduce 404
LEFT_SHIFT     Reduce 404
LESS           Reduce 404
RBRACE         Reduce 404
OR_OR          Reduce 404
XOR            Reduce 404
RBRACKET       Reduce 404
AT             Reduce 404
QUESTION       Reduce 404
SEMICOLON      Reduce 404
COLON          Reduce 404
COMMA          Reduce 404
RPAREN         Reduce 404
AND_AND        Reduce 404
AND            Reduce 404
NOT_EQUAL      Reduce 404
OR             Reduce 404

Default reduction to rule  404


STATE 268 ----------------------------------------------------------------------
( 188 )

EqualityExpression ::= EqualityExpression  .EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= EqualityExpression  .NOT_EQUAL RelationalExpression 
AndExpression ::= AndExpression AND EqualityExpression . (417)

NOT_EQUAL      Shift  189
EQUAL_EQUAL    Shift  190

IDENTIFIER     Reduce 417
void           Reduce 417
strictfp       Reduce 417
static         Reduce 417
short          Reduce 417
public         Reduce 417
protected      Reduce 417
private        Reduce 417
long           Reduce 417
interface      Reduce 417
int            Reduce 417
float          Reduce 417
final          Reduce 417
enum           Reduce 417
double         Reduce 417
class          Reduce 417
char           Reduce 417
byte           Reduce 417
boolean        Reduce 417
abstract       Reduce 417
LESS           Reduce 417
RBRACE         Reduce 417
OR_OR          Reduce 417
XOR            Reduce 417
RBRACKET       Reduce 417
AT             Reduce 417
QUESTION       Reduce 417
SEMICOLON      Reduce 417
COLON          Reduce 417
COMMA          Reduce 417
RPAREN         Reduce 417
AND_AND        Reduce 417
AND            Reduce 417
OR             Reduce 417

Default reduction to rule  417


STATE 269 ----------------------------------------------------------------------
( 189 )

RelationalExpression ::= RelationalExpression  .LESS ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression  .LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .instanceof ReferenceType 
EqualityExpression ::= EqualityExpression NOT_EQUAL RelationalExpression .
                        (415)

instanceof     Shift  182
LESS_EQUAL     Shift  183
GREATER        Shift  184
LESS           Shift  185

IDENTIFIER     Reduce 415
void           Reduce 415
strictfp       Reduce 415
static         Reduce 415
short          Reduce 415
public         Reduce 415
protected      Reduce 415
private        Reduce 415
long           Reduce 415
interface      Reduce 415
int            Reduce 415
float          Reduce 415
final          Reduce 415
enum           Reduce 415
double         Reduce 415
class          Reduce 415
char           Reduce 415
byte           Reduce 415
boolean        Reduce 415
abstract       Reduce 415
EQUAL_EQUAL    Reduce 415
RBRACE         Reduce 415
OR_OR          Reduce 415
XOR            Reduce 415
RBRACKET       Reduce 415
AT             Reduce 415
QUESTION       Reduce 415
SEMICOLON      Reduce 415
COLON          Reduce 415
COMMA          Reduce 415
RPAREN         Reduce 415
AND_AND        Reduce 415
AND            Reduce 415
NOT_EQUAL      Reduce 415
OR             Reduce 415

Default reduction to rule  415


STATE 270 ----------------------------------------------------------------------
( 190 )

RelationalExpression ::= RelationalExpression  .LESS ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER ShiftExpression 
RelationalExpression ::= RelationalExpression  .LESS_EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .GREATER EQUAL ShiftExpression 
RelationalExpression ::= RelationalExpression  .instanceof ReferenceType 
EqualityExpression ::= EqualityExpression EQUAL_EQUAL RelationalExpression .
                        (414)

instanceof     Shift  182
LESS_EQUAL     Shift  183
GREATER        Shift  184
LESS           Shift  185

IDENTIFIER     Reduce 414
void           Reduce 414
strictfp       Reduce 414
static         Reduce 414
short          Reduce 414
public         Reduce 414
protected      Reduce 414
private        Reduce 414
long           Reduce 414
interface      Reduce 414
int            Reduce 414
float          Reduce 414
final          Reduce 414
enum           Reduce 414
double         Reduce 414
class          Reduce 414
char           Reduce 414
byte           Reduce 414
boolean        Reduce 414
abstract       Reduce 414
EQUAL_EQUAL    Reduce 414
RBRACE         Reduce 414
OR_OR          Reduce 414
XOR            Reduce 414
RBRACKET       Reduce 414
AT             Reduce 414
QUESTION       Reduce 414
SEMICOLON      Reduce 414
COLON          Reduce 414
COMMA          Reduce 414
RPAREN         Reduce 414
AND_AND        Reduce 414
AND            Reduce 414
NOT_EQUAL      Reduce 414
OR             Reduce 414

Default reduction to rule  414


STATE 271 ----------------------------------------------------------------------
( 191 )

ExclusiveOrExpression ::= ExclusiveOrExpression  .XOR AndExpression 
InclusiveOrExpression ::= InclusiveOrExpression OR ExclusiveOrExpression .
                           (421)

XOR           Shift  192

IDENTIFIER    Reduce 421
void          Reduce 421
strictfp      Reduce 421
static        Reduce 421
short         Reduce 421
public        Reduce 421
protected     Reduce 421
private       Reduce 421
long          Reduce 421
interface     Reduce 421
int           Reduce 421
float         Reduce 421
final         Reduce 421
enum          Reduce 421
double        Reduce 421
class         Reduce 421
char          Reduce 421
byte          Reduce 421
boolean       Reduce 421
abstract      Reduce 421
LESS          Reduce 421
RBRACE        Reduce 421
OR_OR         Reduce 421
RBRACKET      Reduce 421
AT            Reduce 421
QUESTION      Reduce 421
SEMICOLON     Reduce 421
COLON         Reduce 421
COMMA         Reduce 421
RPAREN        Reduce 421
AND_AND       Reduce 421
OR            Reduce 421

Default reduction to rule  421


STATE 272 ----------------------------------------------------------------------
( 192 )

AndExpression ::= AndExpression  .AND EqualityExpression 
ExclusiveOrExpression ::= ExclusiveOrExpression XOR AndExpression . (419)

AND           Shift  188

IDENTIFIER    Reduce 419
void          Reduce 419
strictfp      Reduce 419
static        Reduce 419
short         Reduce 419
public        Reduce 419
protected     Reduce 419
private       Reduce 419
long          Reduce 419
interface     Reduce 419
int           Reduce 419
float         Reduce 419
final         Reduce 419
enum          Reduce 419
double        Reduce 419
class         Reduce 419
char          Reduce 419
byte          Reduce 419
boolean       Reduce 419
abstract      Reduce 419
LESS          Reduce 419
RBRACE        Reduce 419
OR_OR         Reduce 419
XOR           Reduce 419
RBRACKET      Reduce 419
AT            Reduce 419
QUESTION      Reduce 419
SEMICOLON     Reduce 419
COLON         Reduce 419
COMMA         Reduce 419
RPAREN        Reduce 419
AND_AND       Reduce 419
OR            Reduce 419

Default reduction to rule  419


STATE 273 ----------------------------------------------------------------------
( 193 )

ConditionalExpression ::= ConditionalOrExpression QUESTION Expression  .COLON 
                          ConditionalExpression 

COLON    Shift  328



STATE 274 ----------------------------------------------------------------------
( 194 )

ConditionalAndExpression ::= ConditionalAndExpression  .AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= ConditionalOrExpression OR_OR 
                            ConditionalAndExpression . (425)

AND_AND       Shift  195

IDENTIFIER    Reduce 425
void          Reduce 425
strictfp      Reduce 425
static        Reduce 425
short         Reduce 425
public        Reduce 425
protected     Reduce 425
private       Reduce 425
long          Reduce 425
interface     Reduce 425
int           Reduce 425
float         Reduce 425
final         Reduce 425
enum          Reduce 425
double        Reduce 425
class         Reduce 425
char          Reduce 425
byte          Reduce 425
boolean       Reduce 425
abstract      Reduce 425
LESS          Reduce 425
RBRACE        Reduce 425
OR_OR         Reduce 425
RBRACKET      Reduce 425
AT            Reduce 425
QUESTION      Reduce 425
SEMICOLON     Reduce 425
COLON         Reduce 425
COMMA         Reduce 425
RPAREN        Reduce 425

Default reduction to rule  425


STATE 275 ----------------------------------------------------------------------
( 195 )

InclusiveOrExpression ::= InclusiveOrExpression  .OR ExclusiveOrExpression 
ConditionalAndExpression ::= ConditionalAndExpression AND_AND 
                             InclusiveOrExpression . (423)

OR            Shift  191

IDENTIFIER    Reduce 423
void          Reduce 423
strictfp      Reduce 423
static        Reduce 423
short         Reduce 423
public        Reduce 423
protected     Reduce 423
private       Reduce 423
long          Reduce 423
interface     Reduce 423
int           Reduce 423
float         Reduce 423
final         Reduce 423
enum          Reduce 423
double        Reduce 423
class         Reduce 423
char          Reduce 423
byte          Reduce 423
boolean       Reduce 423
abstract      Reduce 423
LESS          Reduce 423
RBRACE        Reduce 423
OR_OR         Reduce 423
RBRACKET      Reduce 423
AT            Reduce 423
QUESTION      Reduce 423
SEMICOLON     Reduce 423
COLON         Reduce 423
COMMA         Reduce 423
RPAREN        Reduce 423
AND_AND       Reduce 423

Default reduction to rule  423


STATE 276 ----------------------------------------------------------------------
( 197 )

FieldAccess ::= ClassName DOT super DOT  .identifier 
MethodInvocation ::= ClassName DOT super DOT  .TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

IDENTIFIER          Sh/Rd  3
LESS                Shift  132

TypeArgumentsopt    Goto   329
identifier          Gt/Rd  369
TypeArguments       Gt/Rd  539



STATE 277 ----------------------------------------------------------------------
( 198 )

MethodInvocation ::= super DOT TypeArgumentsopt identifier  .LPAREN 
                     ArgumentListopt RPAREN 

LPAREN    Shift  330



STATE 278 ----------------------------------------------------------------------
( 200 )

ArgumentList ::= ArgumentList COMMA  .Expression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Gt/Rd  357
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 279 ----------------------------------------------------------------------
( 201 )

MethodInvocation ::= TypeName DOT TypeArguments identifier  .LPAREN 
                     ArgumentListopt RPAREN 

LPAREN    Shift  331



STATE 280 ----------------------------------------------------------------------
( 202 )

ActualTypeArgumentList ::= ActualTypeArgumentList COMMA  .ActualTypeArgument 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ActualTypeArgument ::= .ReferenceType 
ActualTypeArgument ::= .Wildcard 
Wildcard ::= .QUESTION WildcardBoundsOpt 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13
QUESTION                Shift  204

ActualTypeArgument      Gt/Rd  41
Wildcard                Gt/Rd  43
NumericType             Gt/Rd  12
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
ClassType               Gt/Rd  26
TypeName                Goto   95
identifier              Goto   96
Type                    Goto   203
ReferenceType           Goto   205
PrimitiveType           Gt/Rd  10
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23



STATE 281 ----------------------------------------------------------------------
( 204 )

WildcardBounds ::= super  .ReferenceType 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
ReferenceType           Goto   332
PrimitiveType           Gt/Rd  10
Type                    Goto   203
TypeName                Goto   95
identifier              Goto   96
ClassType               Gt/Rd  26
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 282 ----------------------------------------------------------------------
( 204 )

WildcardBounds ::= extends  .ReferenceType 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
ReferenceType           Goto   333
PrimitiveType           Gt/Rd  10
Type                    Goto   203
TypeName                Goto   95
identifier              Goto   96
ClassType               Gt/Rd  26
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 283 ----------------------------------------------------------------------
( 207 210 257 )

Dims ::= Dims LBRACKET  .RBRACKET 

RBRACKET    Sh/Rd  366



STATE 284 ----------------------------------------------------------------------
( 207 210 244 284 377 )

ArrayInitializer ::= LBRACE  .VariableInitializersopt Commaopt RBRACE 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
VariableInitializer ::= .Expression 
VariableInitializer ::= .ArrayInitializer 
ArrayInitializer ::= .LBRACE VariableInitializersopt Commaopt RBRACE 
VariableInitializers ::= .VariableInitializer 
VariableInitializers ::= .VariableInitializers COMMA VariableInitializer 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
VariableInitializersopt ::= . (466)
VariableInitializersopt ::= .VariableInitializers 

LBRACE                             Shift  284
MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
IDENTIFIER                         Sh/Rd  3
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41

VariableInitializersopt            Goto   334
ArrayInitializer                   Gt/Rd  114
Expression                         Gt/Rd  113
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
LeftHandSide                       Goto   27
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Goto   39
MethodInvocation                   Gt/Rd  342
FieldAccess                        Goto   40
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   44
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122
AssignmentExpression               Gt/Rd  446
VariableInitializers               Goto   335
VariableInitializer                Gt/Rd  248

RBRACE                             Reduce 466
COMMA                              Reduce 466

Default reduction to rule  466


STATE 285 ----------------------------------------------------------------------
( 208 )

DimExpr ::= LBRACKET Expression  .RBRACKET 

RBRACKET    Sh/Rd  364



STATE 286 ----------------------------------------------------------------------
( 211 )

ClassInstanceCreationExpression ::= new TypeArgumentsopt 
                                    ClassOrInterfaceType TypeArgumentsopt  .
                                    LPAREN ArgumentListopt RPAREN ClassBodyopt 

LPAREN    Shift  336



STATE 287 ----------------------------------------------------------------------
( 214 433 )

MethodInvocation ::= Primary DOT TypeArgumentsopt identifier  .LPAREN 
                     ArgumentListopt RPAREN 

LPAREN    Shift  337



STATE 288 ----------------------------------------------------------------------
( 215 )

ClassInstanceCreationExpression ::= Primary DOT new TypeArgumentsopt  .
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   338



STATE 289 ----------------------------------------------------------------------
( 216 )

AssertStatement ::= assert Expression COLON Expression  .SEMICOLON 

SEMICOLON    Sh/Rd  296



STATE 290 ----------------------------------------------------------------------
( 217 )

SwitchStatement ::= switch LPAREN Expression RPAREN  .SwitchBlock 

SwitchBlock ::= .LBRACE SwitchBlockStatementGroupsopt SwitchLabelsopt RBRACE 

LBRACE         Shift  339

SwitchBlock    Gt/Rd  297



STATE 291 ----------------------------------------------------------------------
( 218 )

DoStatement ::= do Statement while LPAREN  .Expression RPAREN SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   340
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 292 ----------------------------------------------------------------------
( 219 )

SynchronizedStatement ::= synchronized LPAREN Expression RPAREN  .Block 

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE    Shift  25

Block     Gt/Rd  325



STATE 293 ----------------------------------------------------------------------
( 220 )

Finally ::= finally  .Block 

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE    Shift  25

Block     Gt/Rd  331



STATE 294 ----------------------------------------------------------------------
( 221 )

CatchClause ::= catch LPAREN  .FormalParameter RPAREN Block 

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 

final                      Sh/Rd  138
AT                         Shift  7

FormalParameter            Goto   341
VariableModifiersopt       Goto   342
VariableModifier           Gt/Rd  136
Annotation                 Gt/Rd  229
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   15
VariableModifiers          Goto   16

IDENTIFIER                 Reduce 464
short                      Reduce 464
long                       Reduce 464
int                        Reduce 464
float                      Reduce 464
double                     Reduce 464
char                       Reduce 464
byte                       Reduce 464
boolean                    Reduce 464

Default reduction to rule  464


STATE 295 ----------------------------------------------------------------------
( 223 )

ConstructorBody ::= LBRACE  .ExplicitConstructorInvocationopt 
                    BlockStatementsopt RBRACE 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ExplicitConstructorInvocation ::= .TypeArgumentsopt this LPAREN ArgumentListopt 
                                  RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= .TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= .Primary DOT TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
ExplicitConstructorInvocationopt ::= . (500)
ExplicitConstructorInvocationopt ::= .ExplicitConstructorInvocation 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

LESS                                Shift  132
null                                Sh/Rd  351
StringLiteral                       Sh/Rd  350
CharacterLiteral                    Sh/Rd  349
DoubleLiteral                       Sh/Rd  347
FloatingPointLiteral                Sh/Rd  346
LongLiteral                         Sh/Rd  345
IntegerLiteral                      Sh/Rd  344
false                               Sh/Rd  353
true                                Sh/Rd  352
IDENTIFIER                          Sh/Rd  3
double                              Sh/Rd  22
float                               Sh/Rd  21
char                                Sh/Rd  20
long                                Sh/Rd  19
int                                 Sh/Rd  18
short                               Sh/Rd  17
byte                                Sh/Rd  16
boolean                             Sh/Rd  13
new                                 Shift  37
super                               Shift  32
LPAREN                              Shift  28
this                                Sh/Rd  337
void                                Shift  29

ExplicitConstructorInvocationopt    Goto   343
ExplicitConstructorInvocation       Gt/Rd  501
TypeArguments                       Gt/Rd  539
ArrayCreationExpression             Gt/Rd  333
BooleanLiteral                      Gt/Rd  348
ReferenceType                       Gt/Rd  11
PrimitiveType                       Gt/Rd  10
ClassType                           Gt/Rd  26
ArrayType                           Gt/Rd  25
TypeVariable                        Gt/Rd  24
ClassOrInterfaceType                Gt/Rd  23
FloatingPointType                   Gt/Rd  15
IntegralType                        Gt/Rd  14
NumericType                         Gt/Rd  12
TypeName                            Goto   35
MethodName                          Goto   33
PrimaryNoNewArray                   Goto   38
ExpressionName                      Goto   344
AmbiguousName                       Goto   30
identifier                          Goto   109
ArrayAccess                         Gt/Rd  343
MethodInvocation                    Gt/Rd  342
FieldAccess                         Gt/Rd  341
ClassInstanceCreationExpression     Gt/Rd  340
ClassName                           Goto   31
Type                                Goto   34
Literal                             Gt/Rd  334
Primary                             Goto   345
TypeArgumentsopt                    Goto   346

while                               Reduce 500
try                                 Reduce 500
throw                               Reduce 500
synchronized                        Reduce 500
switch                              Reduce 500
strictfp                            Reduce 500
static                              Reduce 500
return                              Reduce 500
public                              Reduce 500
protected                           Reduce 500
private                             Reduce 500
if                                  Reduce 500
for                                 Reduce 500
final                               Reduce 500
enum                                Reduce 500
do                                  Reduce 500
continue                            Reduce 500
class                               Reduce 500
break                               Reduce 500
assert                              Reduce 500
abstract                            Reduce 500
PLUS_PLUS                           Reduce 500
RBRACE                              Reduce 500
LBRACE                              Reduce 500
AT                                  Reduce 500
SEMICOLON                           Reduce 500
MINUS_MINUS                         Reduce 500

Default reduction to rule  500


STATE 296 ----------------------------------------------------------------------
( 224 )

Throws ::= throws ExceptionTypeList . (153)
ExceptionTypeList ::= ExceptionTypeList  .COMMA ExceptionType 

COMMA        Shift  347

LBRACE       Reduce 153
SEMICOLON    Reduce 153

Default reduction to rule  153


STATE 297 ----------------------------------------------------------------------
( 225 )

ConstructorDeclarator ::= TypeParametersopt SimpleTypeName LPAREN  .
                          FormalParameterListopt RPAREN 

FormalParameterList ::= .LastFormalParameter 
FormalParameterList ::= .FormalParameters COMMA LastFormalParameter 
FormalParameters ::= .FormalParameter 
FormalParameters ::= .FormalParameters COMMA FormalParameter 
FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
LastFormalParameter ::= .VariableModifiersopt Type Ellipsisopt 
                        VariableDeclaratorId 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
FormalParameterListopt ::= . (506)
FormalParameterListopt ::= .FormalParameterList 

final                      Sh/Rd  138
AT                         Shift  7

FormalParameterListopt     Goto   348
FormalParameterList        Gt/Rd  507
VariableModifier           Gt/Rd  136
Annotation                 Gt/Rd  229
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   15
VariableModifiers          Goto   16
FormalParameter            Gt/Rd  133
VariableModifiersopt       Goto   349
FormalParameters           Goto   350
LastFormalParameter        Gt/Rd  131

IDENTIFIER                 Reduce 464
short                      Reduce 464
long                       Reduce 464
int                        Reduce 464
float                      Reduce 464
double                     Reduce 464
char                       Reduce 464
byte                       Reduce 464
boolean                    Reduce 464
RPAREN                     Reduce 506

Default reduction to rule  464


STATE 298 ----------------------------------------------------------------------
( 226 )

TypeParameterList ::= TypeParameterList COMMA  .TypeParameter 

identifier ::= .IDENTIFIER 
TypeVariable ::= .identifier 
TypeParameter ::= .TypeVariable TypeBoundopt 

IDENTIFIER       Sh/Rd  3

TypeParameter    Gt/Rd  89
TypeVariable     Goto   227
identifier       Gt/Rd  32



STATE 299 ----------------------------------------------------------------------
( 227 )

TypeBound ::= extends  .ClassOrInterfaceType AdditionalBoundListopt 

identifier ::= .IDENTIFIER 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 

IDENTIFIER              Sh/Rd  3

ClassOrInterfaceType    Goto   351
ClassType               Gt/Rd  26
identifier              Gt/Rd  29
TypeName                Goto   95



STATE 300 ----------------------------------------------------------------------
( 229 )

MethodHeader ::= MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator  .Throwsopt 
MethodDeclarator ::= MethodDeclarator  .LBRACKET RBRACKET 

Throws ::= .throws ExceptionTypeList 
Throwsopt ::= . (508)
Throwsopt ::= .Throws 

LBRACKET     Shift  352
throws       Shift  224

Throwsopt    Gt/Rd  126
Throws       Gt/Rd  509

LBRACE       Reduce 508
SEMICOLON    Reduce 508

Default reduction to rule  508


STATE 301 ----------------------------------------------------------------------
( 229 468 )

MethodDeclarator ::= identifier  .LPAREN FormalParameterListopt RPAREN 

LPAREN    Shift  353



STATE 302 ----------------------------------------------------------------------
( 231 )

AnnotationTypeDeclaration ::= InterfaceModifiersopt AT interface identifier  .
                              AnnotationTypeBody 

AnnotationTypeBody ::= .LBRACE AnnotationTypeElementDeclarationsopt RBRACE 

LBRACE                Shift  354

AnnotationTypeBody    Gt/Rd  217



STATE 303 ----------------------------------------------------------------------
( 232 )

NormalInterfaceDeclaration ::= InterfaceModifiersopt interface identifier 
                               TypeParametersopt  .ExtendsInterfacesopt 
                               InterfaceBody 

ExtendsInterfaces ::= .extends InterfaceType 
ExtendsInterfaces ::= .ExtendsInterfaces COMMA InterfaceType 
ExtendsInterfacesopt ::= . (482)
ExtendsInterfacesopt ::= .ExtendsInterfaces 

extends                 Shift  357

ExtendsInterfacesopt    Goto   355
ExtendsInterfaces       Goto   356

LBRACE                  Reduce 482

Default reduction to rule  482


STATE 304 ----------------------------------------------------------------------
( 236 )

ElementValuePair ::= SimpleName EQUAL  .ElementValue 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
ElementValue ::= .ConditionalExpression 
ElementValue ::= .Annotation 
ElementValue ::= .ElementValueArrayInitializer 
ElementValueArrayInitializer ::= .LBRACE ElementValuesopt Commaopt RBRACE 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 

IDENTIFIER                         Sh/Rd  3
LBRACE                             Shift  238
AT                                 Shift  7
MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41

ElementValue                       Gt/Rd  237
ElementValueArrayInitializer       Gt/Rd  241
Annotation                         Gt/Rd  240
ConditionalExpression              Gt/Rd  239
SingleElementAnnotation            Gt/Rd  233
MarkerAnnotation                   Gt/Rd  232
NormalAnnotation                   Gt/Rd  231
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122



STATE 305 ----------------------------------------------------------------------
( 237 )

ElementValuePairs ::= ElementValuePairs COMMA  .ElementValuePair 

identifier ::= .IDENTIFIER 
ElementValuePair ::= .SimpleName EQUAL ElementValue 
SimpleName ::= .identifier 

IDENTIFIER          Sh/Rd  3

ElementValuePair    Gt/Rd  236
SimpleName          Goto   236
identifier          Gt/Rd  238



STATE 306 ----------------------------------------------------------------------
( 238 )

ElementValueArrayInitializer ::= LBRACE ElementValuesopt  .Commaopt RBRACE 

Commaopt ::= . (492)
Commaopt ::= .COMMA 

COMMA       Sh/Rd  493

Commaopt    Goto   358

RBRACE      Reduce 492

Default reduction to rule  492


STATE 307 ----------------------------------------------------------------------
( 238 )

ElementValues ::= ElementValues  .COMMA ElementValue 
ElementValuesopt ::= ElementValues . (469)

COMMA     Shift  359

RBRACE    Reduce 469

Default reduction to rule  469


STATE 308 ----------------------------------------------------------------------
( 240 )

StaticImportOnDemandDeclaration ::= import static TypeName DOT MULTIPLY  .
                                    SEMICOLON 

SEMICOLON    Sh/Rd  70



STATE 309 ----------------------------------------------------------------------
( 240 )

TypeName ::= TypeName DOT identifier . (30)
SingleStaticImportDeclaration ::= import static TypeName DOT identifier  .
                                  SEMICOLON 

SEMICOLON    Sh/Rd  69

DOT          Reduce 30

Default reduction to rule  30


STATE 310 ----------------------------------------------------------------------
( 245 )

EnumBody ::= LBRACE  .EnumConstantsopt Commaopt EnumBodyDeclarationsopt RBRACE 

identifier ::= .IDENTIFIER 
EnumConstants ::= .EnumConstant 
EnumConstants ::= .EnumConstants COMMA EnumConstant 
EnumConstant ::= .Annotationsopt identifier Argumentsopt ClassBodyopt 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
EnumConstant ::= .identifier 
EnumConstantsopt ::= . (494)
EnumConstantsopt ::= .EnumConstants 
Annotationsopt ::= . (524)
Annotationsopt ::= .Annotations 

IDENTIFIER                 Sh/Rd  3
AT                         Shift  7

EnumConstantsopt           Goto   360
identifier                 Gt/Rd  307
Annotationsopt             Goto   361
Annotation                 Gt/Rd  229
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   8
EnumConstants              Goto   362
EnumConstant               Gt/Rd  177

RBRACE                     Reduce 494
SEMICOLON                  Reduce 494
COMMA                      Reduce 494

Default reduction to rule  494


STATE 311 ----------------------------------------------------------------------
( 246 )

Interfaces ::= implements InterfaceTypeList . (91)
InterfaceTypeList ::= InterfaceTypeList  .COMMA InterfaceType 

COMMA     Shift  363

LBRACE    Reduce 91

Default reduction to rule  91


STATE 312 ----------------------------------------------------------------------
( 246 357 363 395 413 )

InterfaceType ::= TypeName  .TypeArgumentsopt 
TypeName ::= TypeName  .DOT identifier 

TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

DOT                 Shift  161
LESS                Shift  132

TypeArgumentsopt    Gt/Rd  28
TypeArguments       Gt/Rd  539

GREATER             Reduce 538
LBRACE              Reduce 538
COMMA               Reduce 538
AND                 Reduce 538

Default reduction to rule  538


STATE 313 ----------------------------------------------------------------------
( 247 )

NormalClassDeclaration ::= ClassModifiersopt class identifier 
                           TypeParametersopt Superopt  .Interfacesopt ClassBody 

Interfaces ::= .implements InterfaceTypeList 
Interfacesopt ::= . (516)
Interfacesopt ::= .Interfaces 

implements       Shift  246

Interfacesopt    Goto   364
Interfaces       Gt/Rd  517

LBRACE           Reduce 516

Default reduction to rule  516


STATE 314 ----------------------------------------------------------------------
( 247 )

Super ::= extends  .ClassType 

identifier ::= .IDENTIFIER 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 

IDENTIFIER    Sh/Rd  3

ClassType     Gt/Rd  90
TypeName      Goto   95
identifier    Gt/Rd  29



STATE 315 ----------------------------------------------------------------------
( 248 )

EnhancedForStatement ::= for LPAREN FormalParameter COLON Expression  .RPAREN 
                         Statement 

RPAREN    Shift  365



STATE 316 ----------------------------------------------------------------------
( 249 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .SEMICOLON 
                      ForUpdateopt RPAREN Statement 

SEMICOLON    Shift  366



STATE 317 ----------------------------------------------------------------------
( 251 )

VariableDeclarator ::= VariableDeclaratorId . (109)
VariableDeclarator ::= VariableDeclaratorId  .EQUAL VariableInitializer 
VariableDeclaratorId ::= VariableDeclaratorId  .LBRACKET RBRACKET 
FormalParameter ::= VariableModifiersopt Type VariableDeclaratorId . (135)

LBRACKET     Shift  243
EQUAL        Shift  244

SEMICOLON    Reduce 109
COMMA        Reduce 109
COLON        Reduce 135

Default reduction to rule  109


STATE 318 ----------------------------------------------------------------------
( 253 )

IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf  .else 
                        Statement 

else    Shift  367



STATE 319 ----------------------------------------------------------------------
( 253 371 449 450 470 479 )

Statement ::= StatementWithoutTrailingSubstatement . (258)
StatementNoShortIf ::= StatementWithoutTrailingSubstatement . (276)

IDENTIFIER              Reduce 258
EOF_TOKEN               Reduce 258
while                   Reduce 258
void                    Reduce 258
try                     Reduce 258
true                    Reduce 258
throw                   Reduce 258
this                    Reduce 258
synchronized            Reduce 258
switch                  Reduce 258
super                   Reduce 258
strictfp                Reduce 258
static                  Reduce 258
short                   Reduce 258
return                  Reduce 258
public                  Reduce 258
protected               Reduce 258
private                 Reduce 258
null                    Reduce 258
new                     Reduce 258
long                    Reduce 258
int                     Reduce 258
if                      Reduce 258
for                     Reduce 258
float                   Reduce 258
final                   Reduce 258
false                   Reduce 258
enum                    Reduce 258
double                  Reduce 258
do                      Reduce 258
default                 Reduce 258
continue                Reduce 258
class                   Reduce 258
char                    Reduce 258
case                    Reduce 258
byte                    Reduce 258
break                   Reduce 258
boolean                 Reduce 258
assert                  Reduce 258
abstract                Reduce 258
EndJava                 Reduce 258
EndAction               Reduce 258
PLUS_PLUS               Reduce 258
RBRACE                  Reduce 258
LBRACE                  Reduce 258
AT                      Reduce 258
SEMICOLON               Reduce 258
LPAREN                  Reduce 258
MINUS_MINUS             Reduce 258
StringLiteral           Reduce 258
CharacterLiteral        Reduce 258
DoubleLiteral           Reduce 258
FloatingPointLiteral    Reduce 258
LongLiteral             Reduce 258
IntegerLiteral          Reduce 258
else                    Reduce 276

Default reduction to rule  258


STATE 320 ----------------------------------------------------------------------
( 253 371 449 450 470 479 )

BasicForStatement ::= for  .LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for  .LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
EnhancedForStatement ::= for  .LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 

LPAREN    Shift  368



STATE 321 ----------------------------------------------------------------------
( 253 371 449 450 470 479 )

WhileStatement ::= while  .LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= while  .LPAREN Expression RPAREN StatementNoShortIf 

LPAREN    Shift  369



STATE 322 ----------------------------------------------------------------------
( 253 371 449 450 470 479 )

IfThenStatement ::= if  .LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= if  .LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= if  .LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 

LPAREN    Shift  370



STATE 323 ----------------------------------------------------------------------
( 253 371 449 450 470 479 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)
LabeledStatement ::= identifier  .COLON Statement 
LabeledStatementNoShortIf ::= identifier  .COLON StatementNoShortIf 

COLON               Shift  371

LESS                Reduce 29
GREATER             Reduce 49
EQUAL               Reduce 49
LEFT_SHIFT_EQUAL    Reduce 49
PLUS_EQUAL          Reduce 49
PLUS_PLUS           Reduce 49
OR_EQUAL            Reduce 49
XOR_EQUAL           Reduce 49
LBRACKET            Reduce 29
DIVIDE_EQUAL        Reduce 49
MULTIPLY_EQUAL      Reduce 49
AND_EQUAL           Reduce 49
REMAINDER_EQUAL     Reduce 49
MINUS_EQUAL         Reduce 49
MINUS_MINUS         Reduce 49
LPAREN              Reduce 51
DOT                 Reduce 29

Default reduction to rule  49


STATE 324 ----------------------------------------------------------------------
( 256 )

CastExpression ::= LPAREN PrimitiveType Dimsopt RPAREN  .UnaryExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

UnaryExpression                    Gt/Rd  394
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111



STATE 325 ----------------------------------------------------------------------
( 263 )

ShiftExpression ::= ShiftExpression  .LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER AdditiveExpression 
ShiftExpression ::= ShiftExpression  .GREATER GREATER GREATER 
                    AdditiveExpression 
RelationalExpression ::= RelationalExpression GREATER EQUAL ShiftExpression .
                          (411)

GREATER        Shift  186
LEFT_SHIFT     Shift  187

IDENTIFIER     Reduce 411
void           Reduce 411
strictfp       Reduce 411
static         Reduce 411
short          Reduce 411
public         Reduce 411
protected      Reduce 411
private        Reduce 411
long           Reduce 411
interface      Reduce 411
int            Reduce 411
instanceof     Reduce 411
float          Reduce 411
final          Reduce 411
enum           Reduce 411
double         Reduce 411
class          Reduce 411
char           Reduce 411
byte           Reduce 411
boolean        Reduce 411
abstract       Reduce 411
EQUAL_EQUAL    Reduce 411
LESS_EQUAL     Reduce 411
LESS           Reduce 411
RBRACE         Reduce 411
OR_OR          Reduce 411
XOR            Reduce 411
RBRACKET       Reduce 411
AT             Reduce 411
QUESTION       Reduce 411
SEMICOLON      Reduce 411
COLON          Reduce 411
COMMA          Reduce 411
RPAREN         Reduce 411
AND_AND        Reduce 411
AND            Reduce 411
NOT_EQUAL      Reduce 411
OR             Reduce 411

Default reduction to rule  411


STATE 326 ----------------------------------------------------------------------
( 266 )

ShiftExpression ::= ShiftExpression GREATER GREATER GREATER  .
                    AdditiveExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

AdditiveExpression                 Goto   372
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396



STATE 327 ----------------------------------------------------------------------
( 266 )

AdditiveExpression ::= AdditiveExpression  .PLUS MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression  .MINUS MultiplicativeExpression 
ShiftExpression ::= ShiftExpression GREATER GREATER AdditiveExpression . (405)

MINUS          Shift  177
PLUS           Shift  178

IDENTIFIER     Reduce 405
void           Reduce 405
strictfp       Reduce 405
static         Reduce 405
short          Reduce 405
public         Reduce 405
protected      Reduce 405
private        Reduce 405
long           Reduce 405
interface      Reduce 405
int            Reduce 405
instanceof     Reduce 405
float          Reduce 405
final          Reduce 405
enum           Reduce 405
double         Reduce 405
class          Reduce 405
char           Reduce 405
byte           Reduce 405
boolean        Reduce 405
abstract       Reduce 405
GREATER        Reduce 405
EQUAL_EQUAL    Reduce 405
LESS_EQUAL     Reduce 405
LEFT_SHIFT     Reduce 405
LESS           Reduce 405
RBRACE         Reduce 405
OR_OR          Reduce 405
XOR            Reduce 405
RBRACKET       Reduce 405
AT             Reduce 405
QUESTION       Reduce 405
SEMICOLON      Reduce 405
COLON          Reduce 405
COMMA          Reduce 405
RPAREN         Reduce 405
AND_AND        Reduce 405
AND            Reduce 405
NOT_EQUAL      Reduce 405
OR             Reduce 405

Default reduction to rule  405


STATE 328 ----------------------------------------------------------------------
( 273 )

ConditionalExpression ::= ConditionalOrExpression QUESTION Expression COLON  .
                          ConditionalExpression 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ConditionalExpression              Gt/Rd  427
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ExpressionName                     Goto   138
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123



STATE 329 ----------------------------------------------------------------------
( 276 )

MethodInvocation ::= ClassName DOT super DOT TypeArgumentsopt  .identifier 
                     LPAREN ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   373



STATE 330 ----------------------------------------------------------------------
( 277 )

MethodInvocation ::= super DOT TypeArgumentsopt identifier LPAREN  .
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   374
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 331 ----------------------------------------------------------------------
( 279 )

MethodInvocation ::= TypeName DOT TypeArguments identifier LPAREN  .
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   375
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 332 ----------------------------------------------------------------------
( 281 )

Type ::= ReferenceType . (11)
WildcardBounds ::= super ReferenceType . (46)

LBRACKET    Reduce 11
GREATER     Reduce 46
COMMA       Reduce 46

Default reduction to rule  46


STATE 333 ----------------------------------------------------------------------
( 282 )

Type ::= ReferenceType . (11)
WildcardBounds ::= extends ReferenceType . (45)

LBRACKET    Reduce 11
GREATER     Reduce 45
COMMA       Reduce 45

Default reduction to rule  45


STATE 334 ----------------------------------------------------------------------
( 284 )

ArrayInitializer ::= LBRACE VariableInitializersopt  .Commaopt RBRACE 

Commaopt ::= . (492)
Commaopt ::= .COMMA 

COMMA       Sh/Rd  493

Commaopt    Goto   376

RBRACE      Reduce 492

Default reduction to rule  492


STATE 335 ----------------------------------------------------------------------
( 284 )

VariableInitializers ::= VariableInitializers  .COMMA VariableInitializer 
VariableInitializersopt ::= VariableInitializers . (467)

COMMA     Shift  377

RBRACE    Reduce 467

Default reduction to rule  467


STATE 336 ----------------------------------------------------------------------
( 286 )

ClassInstanceCreationExpression ::= new TypeArgumentsopt 
                                    ClassOrInterfaceType TypeArgumentsopt 
                                    LPAREN  .ArgumentListopt RPAREN 
                                    ClassBodyopt 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   378
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 337 ----------------------------------------------------------------------
( 287 )

MethodInvocation ::= Primary DOT TypeArgumentsopt identifier LPAREN  .
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   379
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 338 ----------------------------------------------------------------------
( 288 )

ClassInstanceCreationExpression ::= Primary DOT new TypeArgumentsopt 
                                    identifier  .TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 

TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

LESS                Shift  132

TypeArgumentsopt    Goto   380
TypeArguments       Gt/Rd  539

LPAREN              Reduce 538

Default reduction to rule  538


STATE 339 ----------------------------------------------------------------------
( 290 )

SwitchBlock ::= LBRACE  .SwitchBlockStatementGroupsopt SwitchLabelsopt RBRACE 

SwitchBlockStatementGroups ::= .SwitchBlockStatementGroup 
SwitchBlockStatementGroups ::= .SwitchBlockStatementGroups 
                               SwitchBlockStatementGroup 
SwitchBlockStatementGroup ::= .SwitchLabels BlockStatements 
SwitchLabels ::= .SwitchLabel 
SwitchLabels ::= .SwitchLabels SwitchLabel 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .case EnumConstant COLON 
SwitchLabel ::= .default COLON 
SwitchBlockStatementGroupsopt ::= . (462)
SwitchBlockStatementGroupsopt ::= .SwitchBlockStatementGroups 

default                          Shift  382
case                             Shift  383

SwitchBlockStatementGroupsopt    Goto   381
SwitchLabels                     Goto   384
SwitchLabel                      Gt/Rd  302
SwitchBlockStatementGroups       Goto   385
SwitchBlockStatementGroup        Gt/Rd  299

RBRACE                           Reduce 462

Default reduction to rule  462


STATE 340 ----------------------------------------------------------------------
( 291 )

DoStatement ::= do Statement while LPAREN Expression  .RPAREN SEMICOLON 

RPAREN    Shift  386



STATE 341 ----------------------------------------------------------------------
( 294 )

CatchClause ::= catch LPAREN FormalParameter  .RPAREN Block 

RPAREN    Shift  387



STATE 342 ----------------------------------------------------------------------
( 294 )

FormalParameter ::= VariableModifiersopt  .Type VariableDeclaratorId 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ReferenceType           Gt/Rd  11
PrimitiveType           Gt/Rd  10
ClassType               Gt/Rd  26
TypeName                Goto   95
identifier              Goto   96
Type                    Goto   388
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 343 ----------------------------------------------------------------------
( 295 )

ConstructorBody ::= LBRACE ExplicitConstructorInvocationopt  .
                    BlockStatementsopt RBRACE 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
BlockStatementsopt ::= . (498)
BlockStatementsopt ::= .BlockStatements 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

try                                     Shift  58
throw                                   Shift  57
synchronized                            Shift  56
return                                  Shift  55
continue                                Shift  54
break                                   Shift  53
do                                      Shift  52
switch                                  Shift  51
assert                                  Shift  50
MINUS_MINUS                             Shift  42
PLUS_PLUS                               Shift  41
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
false                                   Sh/Rd  353
true                                    Sh/Rd  352
double                                  Sh/Rd  22
float                                   Sh/Rd  21
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
boolean                                 Sh/Rd  13
new                                     Shift  37
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
IDENTIFIER                              Sh/Rd  3
SEMICOLON                               Sh/Rd  284
LBRACE                                  Shift  25
if                                      Shift  24
while                                   Shift  23
for                                     Shift  22
strictfp                                Sh/Rd  86
static                                  Sh/Rd  84
abstract                                Sh/Rd  83
private                                 Sh/Rd  82
protected                               Sh/Rd  81
public                                  Sh/Rd  80
AT                                      Shift  7
final                                   Shift  18

BlockStatementsopt                      Goto   389
Statement                               Gt/Rd  255
ClassDeclaration                        Gt/Rd  254
LocalVariableDeclarationStatement       Gt/Rd  253
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PostfixExpression                       Goto   43
ArrayCreationExpression                 Gt/Rd  333
BooleanLiteral                          Gt/Rd  348
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
ClassType                               Gt/Rd  26
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
NumericType                             Gt/Rd  12
TypeName                                Goto   35
MethodName                              Goto   33
PrimaryNoNewArray                       Goto   38
ExpressionName                          Goto   44
ArrayAccess                             Goto   39
MethodInvocation                        Goto   47
FieldAccess                             Goto   40
ClassInstanceCreationExpression         Goto   46
Type                                    Goto   34
Literal                                 Gt/Rd  334
ClassName                               Goto   31
Primary                                 Goto   45
AmbiguousName                           Goto   30
LeftHandSide                            Goto   27
StatementExpression                     Goto   26
identifier                              Goto   36
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
ClassModifier                           Gt/Rd  77
ClassModifiers                          Goto   20
ClassModifiersopt                       Goto   21
EnumDeclaration                         Gt/Rd  75
NormalClassDeclaration                  Gt/Rd  74
VariableModifiersopt                    Goto   17
VariableModifier                        Gt/Rd  136
Annotation                              Goto   19
SingleElementAnnotation                 Gt/Rd  233
MarkerAnnotation                        Gt/Rd  232
NormalAnnotation                        Gt/Rd  231
Annotations                             Goto   15
VariableModifiers                       Goto   16
LocalVariableDeclaration                Goto   14
BlockStatements                         Goto   59
BlockStatement                          Gt/Rd  251

enum                                    Reduce 522
class                                   Reduce 522
RBRACE                                  Reduce 498

Default reduction to rule  522


STATE 344 ----------------------------------------------------------------------
( 295 )

ArrayAccess ::= ExpressionName  .LBRACKET Expression RBRACKET 

LBRACKET    Shift  139



STATE 345 ----------------------------------------------------------------------
( 295 )

ExplicitConstructorInvocation ::= Primary  .DOT TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
ClassInstanceCreationExpression ::= Primary  .DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary  .DOT identifier 
MethodInvocation ::= Primary  .DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 

DOT    Shift  390



STATE 346 ----------------------------------------------------------------------
( 295 )

ExplicitConstructorInvocation ::= TypeArgumentsopt  .this LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
ExplicitConstructorInvocation ::= TypeArgumentsopt  .super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 

super    Shift  391
this     Shift  392



STATE 347 ----------------------------------------------------------------------
( 296 )

ExceptionTypeList ::= ExceptionTypeList COMMA  .ExceptionType 

identifier ::= .IDENTIFIER 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ExceptionType ::= .ClassType 
ExceptionType ::= .TypeVariable 

IDENTIFIER       Sh/Rd  3

ExceptionType    Gt/Rd  155
TypeVariable     Gt/Rd  157
ClassType        Gt/Rd  156
identifier       Goto   96
TypeName         Goto   95



STATE 348 ----------------------------------------------------------------------
( 297 )

ConstructorDeclarator ::= TypeParametersopt SimpleTypeName LPAREN 
                          FormalParameterListopt  .RPAREN 

RPAREN    Sh/Rd  163



STATE 349 ----------------------------------------------------------------------
( 297 353 394 )

FormalParameter ::= VariableModifiersopt  .Type VariableDeclaratorId 
LastFormalParameter ::= VariableModifiersopt  .Type Ellipsisopt 
                        VariableDeclaratorId 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ReferenceType           Gt/Rd  11
PrimitiveType           Gt/Rd  10
ClassType               Gt/Rd  26
TypeName                Goto   95
identifier              Goto   96
Type                    Goto   393
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 350 ----------------------------------------------------------------------
( 297 353 )

FormalParameterList ::= FormalParameters  .COMMA LastFormalParameter 
FormalParameters ::= FormalParameters  .COMMA FormalParameter 

COMMA    Shift  394



STATE 351 ----------------------------------------------------------------------
( 299 )

TypeBound ::= extends ClassOrInterfaceType  .AdditionalBoundListopt 

AdditionalBoundList ::= .AdditionalBound 
AdditionalBoundList ::= .AdditionalBoundList AdditionalBound 
AdditionalBound ::= .AND InterfaceType 
AdditionalBoundListopt ::= . (534)
AdditionalBoundListopt ::= .AdditionalBoundList 

AND                       Shift  395

AdditionalBoundListopt    Gt/Rd  35
AdditionalBoundList       Goto   396
AdditionalBound           Gt/Rd  36

GREATER                   Reduce 534
COMMA                     Reduce 534

Default reduction to rule  534


STATE 352 ----------------------------------------------------------------------
( 300 473 )

MethodDeclarator ::= MethodDeclarator LBRACKET  .RBRACKET 

RBRACKET    Sh/Rd  130



STATE 353 ----------------------------------------------------------------------
( 301 )

MethodDeclarator ::= identifier LPAREN  .FormalParameterListopt RPAREN 

FormalParameterList ::= .LastFormalParameter 
FormalParameterList ::= .FormalParameters COMMA LastFormalParameter 
FormalParameters ::= .FormalParameter 
FormalParameters ::= .FormalParameters COMMA FormalParameter 
FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
LastFormalParameter ::= .VariableModifiersopt Type Ellipsisopt 
                        VariableDeclaratorId 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
FormalParameterListopt ::= . (506)
FormalParameterListopt ::= .FormalParameterList 

final                      Sh/Rd  138
AT                         Shift  7

FormalParameterListopt     Goto   397
FormalParameterList        Gt/Rd  507
VariableModifier           Gt/Rd  136
Annotation                 Gt/Rd  229
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   15
VariableModifiers          Goto   16
FormalParameter            Gt/Rd  133
VariableModifiersopt       Goto   349
FormalParameters           Goto   350
LastFormalParameter        Gt/Rd  131

IDENTIFIER                 Reduce 464
short                      Reduce 464
long                       Reduce 464
int                        Reduce 464
float                      Reduce 464
double                     Reduce 464
char                       Reduce 464
byte                       Reduce 464
boolean                    Reduce 464
RPAREN                     Reduce 506

Default reduction to rule  464


STATE 354 ----------------------------------------------------------------------
( 302 )

AnnotationTypeBody ::= LBRACE  .AnnotationTypeElementDeclarationsopt RBRACE 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiers ::= .ConstantModifier 
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifier ::= .Annotation 
ConstantModifier ::= .public 
ConstantModifier ::= .static 
ConstantModifier ::= .final 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
AbstractMethodModifier ::= .public 
AbstractMethodModifier ::= .abstract 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarations ::= .AnnotationTypeElementDeclarations 
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
AnnotationTypeElementDeclaration ::= .EnumDeclaration 
AnnotationTypeElementDeclaration ::= .AnnotationTypeDeclaration 
AnnotationTypeElementDeclaration ::= .SEMICOLON 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
AnnotationTypeElementDeclarationsopt ::= . (474)
AnnotationTypeElementDeclarationsopt ::= .AnnotationTypeElementDeclarations 
AbstractMethodModifiersopt ::= . (476)
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
ConstantModifiersopt ::= . (478)
ConstantModifiersopt ::= .ConstantModifiers 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

SEMICOLON                               Sh/Rd  227
strictfp                                Shift  81
private                                 Shift  84
protected                               Shift  85
final                                   Shift  402
static                                  Shift  403
AT                                      Shift  7
abstract                                Shift  407
public                                  Shift  408

AnnotationTypeElementDeclarationsopt    Goto   398
InterfaceDeclaration                    Gt/Rd  224
ClassDeclaration                        Gt/Rd  223
ConstantDeclaration                     Gt/Rd  222
AbstractMethodModifiersopt              Goto   399
InterfaceModifier                       Gt/Rd  185
InterfaceModifiers                      Goto   76
InterfaceModifiersopt                   Goto   77
AnnotationTypeDeclaration               Goto   400
NormalInterfaceDeclaration              Gt/Rd  182
ClassModifier                           Gt/Rd  77
ClassModifiers                          Goto   20
ClassModifiersopt                       Goto   21
EnumDeclaration                         Goto   401
NormalClassDeclaration                  Gt/Rd  74
ConstantModifiers                       Goto   404
ConstantModifier                        Gt/Rd  205
ConstantModifiersopt                    Goto   405
AbstractMethodModifier                  Gt/Rd  212
Annotation                              Goto   406
SingleElementAnnotation                 Gt/Rd  233
MarkerAnnotation                        Gt/Rd  232
NormalAnnotation                        Gt/Rd  231
Annotations                             Goto   409
AbstractMethodModifiers                 Goto   410
AnnotationTypeElementDeclarations       Goto   411
AnnotationTypeElementDeclaration        Gt/Rd  219

IDENTIFIER                              Reduce 476
short                                   Reduce 476
long                                    Reduce 476
int                                     Reduce 476
float                                   Reduce 476
double                                  Reduce 476
char                                    Reduce 476
byte                                    Reduce 476
boolean                                 Reduce 476
enum                                    Reduce 522
class                                   Reduce 522
interface                               Reduce 484
RBRACE                                  Reduce 474

Default reduction to rule  476


STATE 355 ----------------------------------------------------------------------
( 303 )

NormalInterfaceDeclaration ::= InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt  .
                               InterfaceBody 

InterfaceBody ::= .LBRACE InterfaceMemberDeclarationsopt RBRACE 

LBRACE           Shift  412

InterfaceBody    Gt/Rd  184



STATE 356 ----------------------------------------------------------------------
( 303 )

ExtendsInterfaces ::= ExtendsInterfaces  .COMMA InterfaceType 
ExtendsInterfacesopt ::= ExtendsInterfaces . (483)

COMMA     Shift  413

LBRACE    Reduce 483

Default reduction to rule  483


STATE 357 ----------------------------------------------------------------------
( 303 )

ExtendsInterfaces ::= extends  .InterfaceType 

identifier ::= .IDENTIFIER 
InterfaceType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 

IDENTIFIER       Sh/Rd  3

InterfaceType    Gt/Rd  194
TypeName         Goto   312
identifier       Gt/Rd  29



STATE 358 ----------------------------------------------------------------------
( 306 )

ElementValueArrayInitializer ::= LBRACE ElementValuesopt Commaopt  .RBRACE 

RBRACE    Sh/Rd  242



STATE 359 ----------------------------------------------------------------------
( 307 )

ElementValues ::= ElementValues COMMA  .ElementValue 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
ElementValue ::= .ConditionalExpression 
ElementValue ::= .Annotation 
ElementValue ::= .ElementValueArrayInitializer 
ElementValueArrayInitializer ::= .LBRACE ElementValuesopt Commaopt RBRACE 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 

IDENTIFIER                         Sh/Rd  3
LBRACE                             Shift  238
AT                                 Shift  7
MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41

ElementValue                       Gt/Rd  244
ElementValueArrayInitializer       Gt/Rd  241
Annotation                         Gt/Rd  240
ConditionalExpression              Gt/Rd  239
SingleElementAnnotation            Gt/Rd  233
MarkerAnnotation                   Gt/Rd  232
NormalAnnotation                   Gt/Rd  231
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122



STATE 360 ----------------------------------------------------------------------
( 310 )

EnumBody ::= LBRACE EnumConstantsopt  .Commaopt EnumBodyDeclarationsopt RBRACE 

Commaopt ::= . (492)
Commaopt ::= .COMMA 

COMMA        Sh/Rd  493

Commaopt     Goto   414

RBRACE       Reduce 492
SEMICOLON    Reduce 492

Default reduction to rule  492


STATE 361 ----------------------------------------------------------------------
( 310 383 416 )

EnumConstant ::= Annotationsopt  .identifier Argumentsopt ClassBodyopt 

identifier ::= .IDENTIFIER 

IDENTIFIER    Sh/Rd  3

identifier    Goto   415



STATE 362 ----------------------------------------------------------------------
( 310 )

EnumConstants ::= EnumConstants  .COMMA EnumConstant 
EnumConstantsopt ::= EnumConstants . (495)

COMMA        Shift  416

RBRACE       Reduce 495
SEMICOLON    Reduce 495

Default reduction to rule  495


STATE 363 ----------------------------------------------------------------------
( 311 )

InterfaceTypeList ::= InterfaceTypeList COMMA  .InterfaceType 

identifier ::= .IDENTIFIER 
InterfaceType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 

IDENTIFIER       Sh/Rd  3

InterfaceType    Gt/Rd  93
TypeName         Goto   312
identifier       Gt/Rd  29



STATE 364 ----------------------------------------------------------------------
( 313 )

NormalClassDeclaration ::= ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt  .ClassBody 

ClassBody ::= .LBRACE ClassBodyDeclarationsopt RBRACE 

LBRACE       Shift  417

ClassBody    Gt/Rd  76



STATE 365 ----------------------------------------------------------------------
( 315 )

EnhancedForStatement ::= for LPAREN FormalParameter COLON Expression RPAREN  .
                         Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  22
while                                   Shift  23
if                                      Shift  24
LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58

Statement                               Gt/Rd  320
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
identifier                              Goto   36
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264



STATE 366 ----------------------------------------------------------------------
( 316 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                      SEMICOLON  .ForUpdateopt RPAREN Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForUpdate ::= .StatementExpressionList 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForUpdateopt ::= . (454)
ForUpdateopt ::= .ForUpdate 

MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
LPAREN                             Shift  28
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
IDENTIFIER                         Sh/Rd  3

ForUpdateopt                       Goto   418
ForUpdate                          Gt/Rd  455
StatementExpression                Gt/Rd  318
LeftHandSide                       Goto   27
Literal                            Gt/Rd  334
AmbiguousName                      Goto   30
ClassName                          Goto   31
MethodName                         Goto   33
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
PostfixExpression                  Goto   43
ExpressionName                     Goto   44
Primary                            Goto   45
ClassInstanceCreationExpression    Goto   46
MethodInvocation                   Goto   47
PostDecrementExpression            Goto   48
PostIncrementExpression            Goto   49
PreDecrementExpression             Gt/Rd  290
PreIncrementExpression             Gt/Rd  289
Assignment                         Gt/Rd  288
StatementExpressionList            Goto   419

RPAREN                             Reduce 454

Default reduction to rule  454


STATE 367 ----------------------------------------------------------------------
( 318 )

IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf else  .
                        Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  22
while                                   Shift  23
if                                      Shift  24
LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58

Statement                               Gt/Rd  282
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
identifier                              Goto   36
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264



STATE 368 ----------------------------------------------------------------------
( 320 )

BasicForStatement ::= for LPAREN  .ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN  .ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
EnhancedForStatement ::= for LPAREN  .FormalParameter COLON Expression RPAREN 
                         Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForInit ::= .StatementExpressionList 
ForInit ::= .LocalVariableDeclaration 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForInitopt ::= . (458)
ForInitopt ::= .ForInit 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 

IDENTIFIER                         Sh/Rd  3
LPAREN                             Shift  28
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
AT                                 Shift  7
final                              Sh/Rd  138

FormalParameter                    Goto   168
ForInitopt                         Goto   420
ForInit                            Gt/Rd  459
StatementExpression                Gt/Rd  318
LeftHandSide                       Goto   27
Literal                            Gt/Rd  334
AmbiguousName                      Goto   30
ClassName                          Goto   31
MethodName                         Goto   33
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
PostfixExpression                  Goto   43
ExpressionName                     Goto   44
Primary                            Goto   45
ClassInstanceCreationExpression    Goto   46
MethodInvocation                   Goto   47
PostDecrementExpression            Goto   48
PostIncrementExpression            Goto   49
PreDecrementExpression             Gt/Rd  290
PreIncrementExpression             Gt/Rd  289
Assignment                         Gt/Rd  288
VariableModifier                   Gt/Rd  136
Annotation                         Gt/Rd  229
SingleElementAnnotation            Gt/Rd  233
MarkerAnnotation                   Gt/Rd  232
NormalAnnotation                   Gt/Rd  231
Annotations                        Goto   15
VariableModifiers                  Goto   16
LocalVariableDeclaration           Gt/Rd  316
StatementExpressionList            Goto   170
VariableModifiersopt               Goto   171

SEMICOLON                          Reduce 458

Default reduction to rule  458


STATE 369 ----------------------------------------------------------------------
( 321 )

WhileStatement ::= while LPAREN  .Expression RPAREN Statement 
WhileStatementNoShortIf ::= while LPAREN  .Expression RPAREN StatementNoShortIf 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   421
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 370 ----------------------------------------------------------------------
( 322 )

IfThenStatement ::= if LPAREN  .Expression RPAREN Statement 
IfThenElseStatement ::= if LPAREN  .Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN  .Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expression                         Goto   422
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428



STATE 371 ----------------------------------------------------------------------
( 323 )

LabeledStatement ::= identifier COLON  .Statement 
LabeledStatementNoShortIf ::= identifier COLON  .StatementNoShortIf 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
LabeledStatementNoShortIf ::= .identifier COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58
for                                     Shift  320
while                                   Shift  321
if                                      Shift  322

StatementNoShortIf                      Gt/Rd  286
Statement                               Gt/Rd  285
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
ForStatementNoShortIf                   Gt/Rd  280
WhileStatementNoShortIf                 Gt/Rd  279
IfThenElseStatementNoShortIf            Gt/Rd  278
LabeledStatementNoShortIf               Gt/Rd  277
StatementWithoutTrailingSubstatement    Goto   319
identifier                              Goto   323



STATE 372 ----------------------------------------------------------------------
( 326 )

AdditiveExpression ::= AdditiveExpression  .PLUS MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression  .MINUS MultiplicativeExpression 
ShiftExpression ::= ShiftExpression GREATER GREATER GREATER 
                    AdditiveExpression . (406)

MINUS          Shift  177
PLUS           Shift  178

IDENTIFIER     Reduce 406
void           Reduce 406
strictfp       Reduce 406
static         Reduce 406
short          Reduce 406
public         Reduce 406
protected      Reduce 406
private        Reduce 406
long           Reduce 406
interface      Reduce 406
int            Reduce 406
instanceof     Reduce 406
float          Reduce 406
final          Reduce 406
enum           Reduce 406
double         Reduce 406
class          Reduce 406
char           Reduce 406
byte           Reduce 406
boolean        Reduce 406
abstract       Reduce 406
GREATER        Reduce 406
EQUAL_EQUAL    Reduce 406
LESS_EQUAL     Reduce 406
LEFT_SHIFT     Reduce 406
LESS           Reduce 406
RBRACE         Reduce 406
OR_OR          Reduce 406
XOR            Reduce 406
RBRACKET       Reduce 406
AT             Reduce 406
QUESTION       Reduce 406
SEMICOLON      Reduce 406
COLON          Reduce 406
COMMA          Reduce 406
RPAREN         Reduce 406
AND_AND        Reduce 406
AND            Reduce 406
NOT_EQUAL      Reduce 406
OR             Reduce 406

Default reduction to rule  406


STATE 373 ----------------------------------------------------------------------
( 329 )

MethodInvocation ::= ClassName DOT super DOT TypeArgumentsopt identifier  .
                     LPAREN ArgumentListopt RPAREN 

LPAREN    Shift  423



STATE 374 ----------------------------------------------------------------------
( 330 )

MethodInvocation ::= super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt  .RPAREN 

RPAREN    Sh/Rd  372



STATE 375 ----------------------------------------------------------------------
( 331 )

MethodInvocation ::= TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt  .RPAREN 

RPAREN    Sh/Rd  374



STATE 376 ----------------------------------------------------------------------
( 334 )

ArrayInitializer ::= LBRACE VariableInitializersopt Commaopt  .RBRACE 

RBRACE    Sh/Rd  247



STATE 377 ----------------------------------------------------------------------
( 335 )

VariableInitializers ::= VariableInitializers COMMA  .VariableInitializer 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
VariableInitializer ::= .Expression 
VariableInitializer ::= .ArrayInitializer 
ArrayInitializer ::= .LBRACE VariableInitializersopt Commaopt RBRACE 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 

LBRACE                             Shift  284
MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
IDENTIFIER                         Sh/Rd  3
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41

VariableInitializer                Gt/Rd  249
ArrayInitializer                   Gt/Rd  114
Expression                         Gt/Rd  113
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
LeftHandSide                       Goto   27
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Goto   39
MethodInvocation                   Gt/Rd  342
FieldAccess                        Goto   40
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   44
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122
AssignmentExpression               Gt/Rd  446



STATE 378 ----------------------------------------------------------------------
( 336 )

ClassInstanceCreationExpression ::= new TypeArgumentsopt 
                                    ClassOrInterfaceType TypeArgumentsopt 
                                    LPAREN ArgumentListopt  .RPAREN 
                                    ClassBodyopt 

RPAREN    Shift  424



STATE 379 ----------------------------------------------------------------------
( 337 )

MethodInvocation ::= Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt  .RPAREN 

RPAREN    Sh/Rd  371



STATE 380 ----------------------------------------------------------------------
( 338 )

ClassInstanceCreationExpression ::= Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt  .LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 

LPAREN    Shift  425



STATE 381 ----------------------------------------------------------------------
( 339 )

SwitchBlock ::= LBRACE SwitchBlockStatementGroupsopt  .SwitchLabelsopt RBRACE 

SwitchLabels ::= .SwitchLabel 
SwitchLabels ::= .SwitchLabels SwitchLabel 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .case EnumConstant COLON 
SwitchLabel ::= .default COLON 
SwitchLabelsopt ::= . (460)
SwitchLabelsopt ::= .SwitchLabels 

default            Shift  382
case               Shift  383

SwitchLabelsopt    Goto   426
SwitchLabels       Goto   427
SwitchLabel        Gt/Rd  302

RBRACE             Reduce 460

Default reduction to rule  460


STATE 382 ----------------------------------------------------------------------
( 339 381 384 385 427 )

SwitchLabel ::= default  .COLON 

COLON    Sh/Rd  306



STATE 383 ----------------------------------------------------------------------
( 339 381 384 385 427 )

SwitchLabel ::= case  .ConstantExpression COLON 
SwitchLabel ::= case  .EnumConstant COLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
EnumConstant ::= .Annotationsopt identifier Argumentsopt ClassBodyopt 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
EnumConstant ::= .identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ConstantExpression ::= .Expression 
Annotationsopt ::= . (524)
Annotationsopt ::= .Annotations 

MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
IDENTIFIER                         Sh/Rd  3
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41
AT                                 Shift  7

EnumConstant                       Goto   428
ConstantExpression                 Goto   429
Expression                         Gt/Rd  447
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
LeftHandSide                       Goto   27
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Goto   39
MethodInvocation                   Gt/Rd  342
FieldAccess                        Goto   40
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   44
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122
AssignmentExpression               Gt/Rd  446
identifier                         Goto   430
Annotationsopt                     Goto   361
Annotation                         Gt/Rd  229
SingleElementAnnotation            Gt/Rd  233
MarkerAnnotation                   Gt/Rd  232
NormalAnnotation                   Gt/Rd  231
Annotations                        Goto   8



STATE 384 ----------------------------------------------------------------------
( 339 385 )

SwitchBlockStatementGroup ::= SwitchLabels  .BlockStatements 
SwitchLabels ::= SwitchLabels  .SwitchLabel 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatements ::= .BlockStatement 
BlockStatements ::= .BlockStatements BlockStatement 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .case EnumConstant COLON 
SwitchLabel ::= .default COLON 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

AT                                      Shift  7
strictfp                                Sh/Rd  86
final                                   Shift  18
static                                  Sh/Rd  84
abstract                                Sh/Rd  83
private                                 Sh/Rd  82
protected                               Sh/Rd  81
public                                  Sh/Rd  80
for                                     Shift  22
while                                   Shift  23
if                                      Shift  24
LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58
default                                 Shift  382
case                                    Shift  383

SwitchLabel                             Gt/Rd  303
BlockStatements                         Goto   431
BlockStatement                          Gt/Rd  251
LocalVariableDeclaration                Goto   14
SingleElementAnnotation                 Gt/Rd  233
MarkerAnnotation                        Gt/Rd  232
NormalAnnotation                        Gt/Rd  231
Annotations                             Goto   15
VariableModifiers                       Goto   16
VariableModifier                        Gt/Rd  136
VariableModifiersopt                    Goto   17
EnumDeclaration                         Gt/Rd  75
NormalClassDeclaration                  Gt/Rd  74
Annotation                              Goto   19
ClassModifiers                          Goto   20
ClassModifier                           Gt/Rd  77
ClassModifiersopt                       Goto   21
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
identifier                              Goto   36
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
Statement                               Gt/Rd  255
ClassDeclaration                        Gt/Rd  254
LocalVariableDeclarationStatement       Gt/Rd  253

enum                                    Reduce 522
class                                   Reduce 522

Default reduction to rule  522


STATE 385 ----------------------------------------------------------------------
( 339 )

SwitchBlockStatementGroups ::= SwitchBlockStatementGroups  .
                               SwitchBlockStatementGroup 
SwitchBlockStatementGroupsopt ::= SwitchBlockStatementGroups . (463)

SwitchBlockStatementGroup ::= .SwitchLabels BlockStatements 
SwitchLabels ::= .SwitchLabel 
SwitchLabels ::= .SwitchLabels SwitchLabel 
SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .case EnumConstant COLON 
SwitchLabel ::= .default COLON 

default                      Shift  382
case                         Shift  383

SwitchBlockStatementGroup    Gt/Rd  300
SwitchLabels                 Goto   384
SwitchLabel                  Gt/Rd  302

RBRACE                       Reduce 463

Default reduction to rule  463


STATE 386 ----------------------------------------------------------------------
( 340 )

DoStatement ::= do Statement while LPAREN Expression RPAREN  .SEMICOLON 

SEMICOLON    Sh/Rd  310



STATE 387 ----------------------------------------------------------------------
( 341 )

CatchClause ::= catch LPAREN FormalParameter RPAREN  .Block 

Block ::= .LBRACE BlockStatementsopt RBRACE 

LBRACE    Shift  25

Block     Gt/Rd  330



STATE 388 ----------------------------------------------------------------------
( 342 )

ArrayType ::= Type  .LBRACKET RBRACKET 
FormalParameter ::= VariableModifiersopt Type  .VariableDeclaratorId 

identifier ::= .IDENTIFIER 
VariableDeclaratorId ::= .identifier 
VariableDeclaratorId ::= .VariableDeclaratorId LBRACKET RBRACKET 

LBRACKET                Shift  130
IDENTIFIER              Sh/Rd  3

VariableDeclaratorId    Goto   432
identifier              Gt/Rd  111



STATE 389 ----------------------------------------------------------------------
( 343 )

ConstructorBody ::= LBRACE ExplicitConstructorInvocationopt 
                    BlockStatementsopt  .RBRACE 

RBRACE    Sh/Rd  171



STATE 390 ----------------------------------------------------------------------
( 345 )

ExplicitConstructorInvocation ::= Primary DOT  .TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
ClassInstanceCreationExpression ::= Primary DOT  .new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
FieldAccess ::= Primary DOT  .identifier 
MethodInvocation ::= Primary DOT  .TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
TypeArguments ::= .LESS ActualTypeArgumentList GREATER 
TypeArgumentsopt ::= . (538)
TypeArgumentsopt ::= .TypeArguments 

new                 Shift  215
IDENTIFIER          Sh/Rd  3
LESS                Shift  132

identifier          Gt/Rd  367
TypeArgumentsopt    Goto   433
TypeArguments       Gt/Rd  539

super               Reduce 538

Default reduction to rule  538


STATE 391 ----------------------------------------------------------------------
( 346 )

ExplicitConstructorInvocation ::= TypeArgumentsopt super  .LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 

LPAREN    Shift  434



STATE 392 ----------------------------------------------------------------------
( 346 )

ExplicitConstructorInvocation ::= TypeArgumentsopt this  .LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 

LPAREN    Shift  435



STATE 393 ----------------------------------------------------------------------
( 349 )

ArrayType ::= Type  .LBRACKET RBRACKET 
FormalParameter ::= VariableModifiersopt Type  .VariableDeclaratorId 
LastFormalParameter ::= VariableModifiersopt Type  .Ellipsisopt 
                        VariableDeclaratorId 

identifier ::= .IDENTIFIER 
VariableDeclaratorId ::= .identifier 
VariableDeclaratorId ::= .VariableDeclaratorId LBRACKET RBRACKET 
Ellipsisopt ::= . (504)
Ellipsisopt ::= .ELLIPSIS 

LBRACKET                Shift  130
IDENTIFIER              Sh/Rd  3
ELLIPSIS                Sh/Rd  505

Ellipsisopt             Goto   436
VariableDeclaratorId    Goto   432
identifier              Gt/Rd  111



STATE 394 ----------------------------------------------------------------------
( 350 )

FormalParameterList ::= FormalParameters COMMA  .LastFormalParameter 
FormalParameters ::= FormalParameters COMMA  .FormalParameter 

FormalParameter ::= .VariableModifiersopt Type VariableDeclaratorId 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
LastFormalParameter ::= .VariableModifiersopt Type Ellipsisopt 
                        VariableDeclaratorId 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 

final                      Sh/Rd  138
AT                         Shift  7

FormalParameter            Gt/Rd  134
LastFormalParameter        Gt/Rd  132
VariableModifier           Gt/Rd  136
Annotation                 Gt/Rd  229
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   15
VariableModifiers          Goto   16
VariableModifiersopt       Goto   349

IDENTIFIER                 Reduce 464
short                      Reduce 464
long                       Reduce 464
int                        Reduce 464
float                      Reduce 464
double                     Reduce 464
char                       Reduce 464
byte                       Reduce 464
boolean                    Reduce 464

Default reduction to rule  464


STATE 395 ----------------------------------------------------------------------
( 351 396 )

AdditionalBound ::= AND  .InterfaceType 

identifier ::= .IDENTIFIER 
InterfaceType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 

IDENTIFIER       Sh/Rd  3

InterfaceType    Gt/Rd  38
TypeName         Goto   312
identifier       Gt/Rd  29



STATE 396 ----------------------------------------------------------------------
( 351 )

AdditionalBoundList ::= AdditionalBoundList  .AdditionalBound 
AdditionalBoundListopt ::= AdditionalBoundList . (535)

AdditionalBound ::= .AND InterfaceType 

AND                Shift  395

AdditionalBound    Gt/Rd  37

GREATER            Reduce 535
COMMA              Reduce 535

Default reduction to rule  535


STATE 397 ----------------------------------------------------------------------
( 353 )

MethodDeclarator ::= identifier LPAREN FormalParameterListopt  .RPAREN 

RPAREN    Sh/Rd  129



STATE 398 ----------------------------------------------------------------------
( 354 )

AnnotationTypeBody ::= LBRACE AnnotationTypeElementDeclarationsopt  .RBRACE 

RBRACE    Sh/Rd  218



STATE 399 ----------------------------------------------------------------------
( 354 411 )

AnnotationTypeElementDeclaration ::= AbstractMethodModifiersopt  .Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ReferenceType           Gt/Rd  11
PrimitiveType           Gt/Rd  10
ClassType               Gt/Rd  26
TypeName                Goto   95
identifier              Goto   96
Type                    Goto   437
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 400 ----------------------------------------------------------------------
( 354 411 )

InterfaceDeclaration ::= AnnotationTypeDeclaration . (183)
AnnotationTypeElementDeclaration ::= AnnotationTypeDeclaration . (226)

IDENTIFIER    Reduce 183
strictfp      Reduce 183
static        Reduce 183
short         Reduce 183
public        Reduce 183
protected     Reduce 183
private       Reduce 183
long          Reduce 183
interface     Reduce 183
int           Reduce 183
float         Reduce 183
final         Reduce 183
enum          Reduce 183
double        Reduce 183
class         Reduce 183
char          Reduce 183
byte          Reduce 183
boolean       Reduce 183
abstract      Reduce 183
RBRACE        Reduce 183
AT            Reduce 183
SEMICOLON     Reduce 183

Default reduction to rule  183


STATE 401 ----------------------------------------------------------------------
( 354 411 )

ClassDeclaration ::= EnumDeclaration . (75)
AnnotationTypeElementDeclaration ::= EnumDeclaration . (225)

IDENTIFIER    Reduce 75
strictfp      Reduce 75
static        Reduce 75
short         Reduce 75
public        Reduce 75
protected     Reduce 75
private       Reduce 75
long          Reduce 75
interface     Reduce 75
int           Reduce 75
float         Reduce 75
final         Reduce 75
enum          Reduce 75
double        Reduce 75
class         Reduce 75
char          Reduce 75
byte          Reduce 75
boolean       Reduce 75
abstract      Reduce 75
RBRACE        Reduce 75
AT            Reduce 75
SEMICOLON     Reduce 75

Default reduction to rule  75


STATE 402 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= final . (85)
ConstantModifier ::= final . (210)

strictfp      Reduce 85
protected     Reduce 85
private       Reduce 85
enum          Reduce 85
class         Reduce 85
abstract      Reduce 85
IDENTIFIER    Reduce 210
static        Reduce 85
short         Reduce 210
public        Reduce 85
long          Reduce 210
int           Reduce 210
float         Reduce 210
final         Reduce 85
double        Reduce 210
char          Reduce 210
byte          Reduce 210
boolean       Reduce 210
AT            Reduce 85

Default reduction to rule  85


STATE 403 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= static . (84)
InterfaceModifier ::= static . (192)
ConstantModifier ::= static . (209)

enum          Reduce 84
class         Reduce 84
strictfp      Reduce 84
protected     Reduce 84
private       Reduce 84
interface     Reduce 192
abstract      Reduce 84
IDENTIFIER    Reduce 209
static        Reduce 84
short         Reduce 209
public        Reduce 84
long          Reduce 209
int           Reduce 209
float         Reduce 209
final         Reduce 84
double        Reduce 209
char          Reduce 209
byte          Reduce 209
boolean       Reduce 209
AT            Reduce 84

Default reduction to rule  84


STATE 404 ----------------------------------------------------------------------
( 354 411 412 441 )

ConstantModifiers ::= ConstantModifiers  .ConstantModifier 
ConstantModifiersopt ::= ConstantModifiers . (479)

ConstantModifier ::= .Annotation 
ConstantModifier ::= .public 
ConstantModifier ::= .static 
ConstantModifier ::= .final 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

final                      Sh/Rd  210
static                     Sh/Rd  209
public                     Sh/Rd  208
AT                         Shift  7

ConstantModifier           Gt/Rd  206
Annotation                 Gt/Rd  207
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

IDENTIFIER                 Reduce 479
short                      Reduce 479
long                       Reduce 479
int                        Reduce 479
float                      Reduce 479
double                     Reduce 479
char                       Reduce 479
byte                       Reduce 479
boolean                    Reduce 479

Default reduction to rule  479


STATE 405 ----------------------------------------------------------------------
( 354 411 412 441 )

ConstantDeclaration ::= ConstantModifiersopt  .Type VariableDeclarators 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3
double                  Sh/Rd  22
float                   Sh/Rd  21
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
boolean                 Sh/Rd  13

ReferenceType           Gt/Rd  11
PrimitiveType           Gt/Rd  10
ClassType               Gt/Rd  26
TypeName                Goto   95
identifier              Goto   96
Type                    Goto   438
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
NumericType             Gt/Rd  12



STATE 406 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= Annotation . (79)
InterfaceModifier ::= Annotation . (187)
ConstantModifier ::= Annotation . (207)
Annotations ::= Annotation . (229)

enum          Reduce 79
class         Reduce 79
strictfp      Reduce 79
protected     Reduce 79
private       Reduce 79
interface     Reduce 187
static        Reduce 79
final         Reduce 79
IDENTIFIER    Reduce 207
void          Reduce 229
short         Reduce 207
public        Reduce 79
long          Reduce 207
int           Reduce 207
float         Reduce 207
double        Reduce 207
char          Reduce 207
byte          Reduce 207
boolean       Reduce 207
abstract      Reduce 79
LESS          Reduce 229
AT            Reduce 79

Default reduction to rule  79


STATE 407 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= abstract . (83)
InterfaceModifier ::= abstract . (191)
AbstractMethodModifier ::= abstract . (216)

final         Reduce 83
enum          Reduce 83
class         Reduce 83
strictfp      Reduce 83
static        Reduce 83
protected     Reduce 83
private       Reduce 83
interface     Reduce 191
IDENTIFIER    Reduce 216
void          Reduce 216
short         Reduce 216
public        Reduce 83
long          Reduce 216
int           Reduce 216
float         Reduce 216
double        Reduce 216
char          Reduce 216
byte          Reduce 216
boolean       Reduce 216
abstract      Reduce 83
LESS          Reduce 216
AT            Reduce 83

Default reduction to rule  216


STATE 408 ----------------------------------------------------------------------
( 354 411 412 441 )

ClassModifier ::= public . (80)
InterfaceModifier ::= public . (188)
ConstantModifier ::= public . (208)
AbstractMethodModifier ::= public . (215)

enum          Reduce 80
class         Reduce 80
strictfp      Reduce 80
protected     Reduce 80
private       Reduce 80
interface     Reduce 188
static        Reduce 80
final         Reduce 80
IDENTIFIER    Reduce 208
void          Reduce 215
short         Reduce 208
public        Reduce 80
long          Reduce 208
int           Reduce 208
float         Reduce 208
double        Reduce 208
char          Reduce 208
byte          Reduce 208
boolean       Reduce 208
abstract      Reduce 80
LESS          Reduce 215
AT            Reduce 80

Default reduction to rule  80


STATE 409 ----------------------------------------------------------------------
( 354 410 411 412 441 )

AbstractMethodModifier ::= Annotations . (214)
Annotations ::= Annotations  .Annotation 

Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

AT                         Shift  7

Annotation                 Gt/Rd  230
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231

IDENTIFIER                 Reduce 214
void                       Reduce 214
short                      Reduce 214
public                     Reduce 214
long                       Reduce 214
int                        Reduce 214
float                      Reduce 214
double                     Reduce 214
char                       Reduce 214
byte                       Reduce 214
boolean                    Reduce 214
abstract                   Reduce 214
LESS                       Reduce 214

Default reduction to rule  214


STATE 410 ----------------------------------------------------------------------
( 354 411 412 441 )

AbstractMethodModifiers ::= AbstractMethodModifiers  .AbstractMethodModifier 
AbstractMethodModifiersopt ::= AbstractMethodModifiers . (477)

AbstractMethodModifier ::= .Annotations 
AbstractMethodModifier ::= .public 
AbstractMethodModifier ::= .abstract 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 

abstract                   Sh/Rd  216
public                     Sh/Rd  215
AT                         Shift  7

AbstractMethodModifier     Gt/Rd  213
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   409
Annotation                 Gt/Rd  229

IDENTIFIER                 Reduce 477
void                       Reduce 477
short                      Reduce 477
long                       Reduce 477
int                        Reduce 477
float                      Reduce 477
double                     Reduce 477
char                       Reduce 477
byte                       Reduce 477
boolean                    Reduce 477
LESS                       Reduce 477

Default reduction to rule  477


STATE 411 ----------------------------------------------------------------------
( 354 )

AnnotationTypeElementDeclarations ::= AnnotationTypeElementDeclarations  .
                                      AnnotationTypeElementDeclaration 
AnnotationTypeElementDeclarationsopt ::= AnnotationTypeElementDeclarations .
                                         (475)

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiers ::= .ConstantModifier 
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifier ::= .Annotation 
ConstantModifier ::= .public 
ConstantModifier ::= .static 
ConstantModifier ::= .final 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
AbstractMethodModifier ::= .public 
AbstractMethodModifier ::= .abstract 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
AnnotationTypeElementDeclaration ::= .AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 
AnnotationTypeElementDeclaration ::= .ConstantDeclaration 
AnnotationTypeElementDeclaration ::= .ClassDeclaration 
AnnotationTypeElementDeclaration ::= .InterfaceDeclaration 
AnnotationTypeElementDeclaration ::= .EnumDeclaration 
AnnotationTypeElementDeclaration ::= .AnnotationTypeDeclaration 
AnnotationTypeElementDeclaration ::= .SEMICOLON 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
AbstractMethodModifiersopt ::= . (476)
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
ConstantModifiersopt ::= . (478)
ConstantModifiersopt ::= .ConstantModifiers 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

SEMICOLON                           Sh/Rd  227
strictfp                            Shift  81
private                             Shift  84
protected                           Shift  85
final                               Shift  402
static                              Shift  403
AT                                  Shift  7
abstract                            Shift  407
public                              Shift  408

AnnotationTypeElementDeclaration    Gt/Rd  220
InterfaceDeclaration                Gt/Rd  224
ClassDeclaration                    Gt/Rd  223
ConstantDeclaration                 Gt/Rd  222
AbstractMethodModifiersopt          Goto   399
InterfaceModifier                   Gt/Rd  185
InterfaceModifiers                  Goto   76
InterfaceModifiersopt               Goto   77
AnnotationTypeDeclaration           Goto   400
NormalInterfaceDeclaration          Gt/Rd  182
ClassModifier                       Gt/Rd  77
ClassModifiers                      Goto   20
ClassModifiersopt                   Goto   21
EnumDeclaration                     Goto   401
NormalClassDeclaration              Gt/Rd  74
ConstantModifiers                   Goto   404
ConstantModifier                    Gt/Rd  205
ConstantModifiersopt                Goto   405
AbstractMethodModifier              Gt/Rd  212
Annotation                          Goto   406
SingleElementAnnotation             Gt/Rd  233
MarkerAnnotation                    Gt/Rd  232
NormalAnnotation                    Gt/Rd  231
Annotations                         Goto   409
AbstractMethodModifiers             Goto   410

IDENTIFIER                          Reduce 476
short                               Reduce 476
long                                Reduce 476
int                                 Reduce 476
float                               Reduce 476
double                              Reduce 476
char                                Reduce 476
byte                                Reduce 476
boolean                             Reduce 476
enum                                Reduce 522
class                               Reduce 522
interface                           Reduce 484
RBRACE                              Reduce 475

Default reduction to rule  476


STATE 412 ----------------------------------------------------------------------
( 355 )

InterfaceBody ::= LBRACE  .InterfaceMemberDeclarationsopt RBRACE 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclaration 
InterfaceMemberDeclarations ::= .InterfaceMemberDeclarations 
                                InterfaceMemberDeclaration 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
InterfaceMemberDeclaration ::= .AbstractMethodDeclaration 
InterfaceMemberDeclaration ::= .ClassDeclaration 
InterfaceMemberDeclaration ::= .InterfaceDeclaration 
InterfaceMemberDeclaration ::= .SEMICOLON 
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiers ::= .ConstantModifier 
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifier ::= .Annotation 
ConstantModifier ::= .public 
ConstantModifier ::= .static 
ConstantModifier ::= .final 
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
AbstractMethodModifier ::= .public 
AbstractMethodModifier ::= .abstract 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
AbstractMethodModifiersopt ::= . (476)
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
ConstantModifiersopt ::= . (478)
ConstantModifiersopt ::= .ConstantModifiers 
InterfaceMemberDeclarationsopt ::= . (480)
InterfaceMemberDeclarationsopt ::= .InterfaceMemberDeclarations 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

SEMICOLON                         Sh/Rd  203
strictfp                          Shift  81
private                           Shift  84
protected                         Shift  85
abstract                          Shift  407
final                             Shift  402
static                            Shift  403
public                            Shift  408
AT                                Shift  7

InterfaceMemberDeclarationsopt    Goto   439
InterfaceDeclaration              Gt/Rd  202
ClassDeclaration                  Gt/Rd  201
AbstractMethodDeclaration         Gt/Rd  200
ConstantDeclaration               Gt/Rd  199
InterfaceModifier                 Gt/Rd  185
InterfaceModifiers                Goto   76
InterfaceModifiersopt             Goto   77
AnnotationTypeDeclaration         Gt/Rd  183
NormalInterfaceDeclaration        Gt/Rd  182
ClassModifier                     Gt/Rd  77
ClassModifiers                    Goto   20
ClassModifiersopt                 Goto   21
EnumDeclaration                   Gt/Rd  75
NormalClassDeclaration            Gt/Rd  74
Annotations                       Goto   409
AbstractMethodModifiers           Goto   410
AbstractMethodModifier            Gt/Rd  212
AbstractMethodModifiersopt        Goto   440
Annotation                        Goto   406
SingleElementAnnotation           Gt/Rd  233
MarkerAnnotation                  Gt/Rd  232
NormalAnnotation                  Gt/Rd  231
ConstantModifiers                 Goto   404
ConstantModifier                  Gt/Rd  205
ConstantModifiersopt              Goto   405
InterfaceMemberDeclarations       Goto   441
InterfaceMemberDeclaration        Gt/Rd  197

IDENTIFIER                        Reduce 478
void                              Reduce 476
short                             Reduce 478
long                              Reduce 478
int                               Reduce 478
float                             Reduce 478
double                            Reduce 478
char                              Reduce 478
byte                              Reduce 478
boolean                           Reduce 478
LESS                              Reduce 476
enum                              Reduce 522
class                             Reduce 522
interface                         Reduce 484
RBRACE                            Reduce 480

Default reduction to rule  478


STATE 413 ----------------------------------------------------------------------
( 356 )

ExtendsInterfaces ::= ExtendsInterfaces COMMA  .InterfaceType 

identifier ::= .IDENTIFIER 
InterfaceType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 

IDENTIFIER       Sh/Rd  3

InterfaceType    Gt/Rd  195
TypeName         Goto   312
identifier       Gt/Rd  29



STATE 414 ----------------------------------------------------------------------
( 360 )

EnumBody ::= LBRACE EnumConstantsopt Commaopt  .EnumBodyDeclarationsopt RBRACE 

EnumBodyDeclarations ::= .SEMICOLON ClassBodyDeclarationsopt 
EnumBodyDeclarationsopt ::= . (490)
EnumBodyDeclarationsopt ::= .EnumBodyDeclarations 

SEMICOLON                  Shift  443

EnumBodyDeclarationsopt    Goto   442
EnumBodyDeclarations       Gt/Rd  491

RBRACE                     Reduce 490

Default reduction to rule  490


STATE 415 ----------------------------------------------------------------------
( 361 )

EnumConstant ::= Annotationsopt identifier  .Argumentsopt ClassBodyopt 

Arguments ::= .LPAREN ArgumentListopt RPAREN 
Argumentsopt ::= . (488)
Argumentsopt ::= .Arguments 

LPAREN          Shift  445

Argumentsopt    Goto   444
Arguments       Gt/Rd  489

RBRACE          Reduce 488
LBRACE          Reduce 488
SEMICOLON       Reduce 488
COLON           Reduce 488
COMMA           Reduce 488

Default reduction to rule  488


STATE 416 ----------------------------------------------------------------------
( 362 )

EnumConstants ::= EnumConstants COMMA  .EnumConstant 

identifier ::= .IDENTIFIER 
EnumConstant ::= .Annotationsopt identifier Argumentsopt ClassBodyopt 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
EnumConstant ::= .identifier 
Annotationsopt ::= . (524)
Annotationsopt ::= .Annotations 

IDENTIFIER                 Sh/Rd  3
AT                         Shift  7

EnumConstant               Gt/Rd  178
identifier                 Gt/Rd  307
Annotationsopt             Goto   361
Annotation                 Gt/Rd  229
SingleElementAnnotation    Gt/Rd  233
MarkerAnnotation           Gt/Rd  232
NormalAnnotation           Gt/Rd  231
Annotations                Goto   8



STATE 417 ----------------------------------------------------------------------
( 364 424 444 463 )

ClassBody ::= LBRACE  .ClassBodyDeclarationsopt RBRACE 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
ClassBodyDeclarations ::= .ClassBodyDeclaration 
ClassBodyDeclarations ::= .ClassBodyDeclarations ClassBodyDeclaration 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .InstanceInitializer 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiers ::= .FieldModifier 
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifier ::= .Annotation 
FieldModifier ::= .public 
FieldModifier ::= .protected 
FieldModifier ::= .private 
FieldModifier ::= .static 
FieldModifier ::= .final 
FieldModifier ::= .transient 
FieldModifier ::= .volatile 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiers ::= .MethodModifier 
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifier ::= .Annotations 
MethodModifier ::= .public 
MethodModifier ::= .protected 
MethodModifier ::= .private 
MethodModifier ::= .abstract 
MethodModifier ::= .static 
MethodModifier ::= .final 
MethodModifier ::= .synchronized 
MethodModifier ::= .native 
MethodModifier ::= .strictfp 
InstanceInitializer ::= .Block 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifier ::= .Annotations 
ConstructorModifier ::= .public 
ConstructorModifier ::= .protected 
ConstructorModifier ::= .private 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ConstructorModifiersopt ::= . (502)
ConstructorModifiersopt ::= .ConstructorModifiers 
MethodModifiersopt ::= . (510)
MethodModifiersopt ::= .MethodModifiers 
FieldModifiersopt ::= . (512)
FieldModifiersopt ::= .FieldModifiers 
ClassBodyDeclarationsopt ::= . (514)
ClassBodyDeclarationsopt ::= .ClassBodyDeclarations 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

LBRACE                        Shift  25
AT                            Shift  7
volatile                      Sh/Rd  124
transient                     Sh/Rd  123
native                        Sh/Rd  151
synchronized                  Sh/Rd  150
final                         Shift  68
strictfp                      Shift  69
static                        Shift  70
abstract                      Shift  71
private                       Shift  72
protected                     Shift  73
public                        Shift  74
SEMICOLON                     Sh/Rd  105

ClassBodyDeclarationsopt      Goto   446
ConstructorDeclaration        Gt/Rd  100
StaticInitializer             Gt/Rd  99
InstanceInitializer           Gt/Rd  98
ClassMemberDeclaration        Gt/Rd  97
ConstructorModifiers          Goto   60
ConstructorModifier           Gt/Rd  165
ConstructorModifiersopt       Goto   61
Block                         Gt/Rd  160
FieldModifiersopt             Goto   62
FieldModifier                 Gt/Rd  115
SingleElementAnnotation       Gt/Rd  233
MarkerAnnotation              Gt/Rd  232
NormalAnnotation              Gt/Rd  231
FieldModifiers                Goto   63
MethodHeader                  Goto   64
Annotations                   Goto   65
MethodModifiers               Goto   66
MethodModifier                Gt/Rd  141
MethodModifiersopt            Goto   67
EnumDeclaration               Gt/Rd  75
NormalClassDeclaration        Gt/Rd  74
ClassModifiers                Goto   20
ClassModifier                 Gt/Rd  77
ClassModifiersopt             Goto   21
AnnotationTypeDeclaration     Gt/Rd  183
NormalInterfaceDeclaration    Gt/Rd  182
Annotation                    Goto   75
InterfaceModifiers            Goto   76
InterfaceModifier             Gt/Rd  185
InterfaceModifiersopt         Goto   77
InterfaceDeclaration          Gt/Rd  104
ClassDeclaration              Gt/Rd  103
MethodDeclaration             Gt/Rd  102
FieldDeclaration              Gt/Rd  101
ClassBodyDeclarations         Goto   78
ClassBodyDeclaration          Gt/Rd  95

interface                     Reduce 484
enum                          Reduce 522
class                         Reduce 522
void                          Reduce 510
short                         Reduce 510
long                          Reduce 510
int                           Reduce 510
float                         Reduce 510
double                        Reduce 510
char                          Reduce 510
byte                          Reduce 510
boolean                       Reduce 510
IDENTIFIER                    Reduce 510
LESS                          Reduce 510
RBRACE                        Reduce 514

Default reduction to rule  510


STATE 418 ----------------------------------------------------------------------
( 366 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                      SEMICOLON ForUpdateopt  .RPAREN Statement 

RPAREN    Shift  447



STATE 419 ----------------------------------------------------------------------
( 366 469 )

ForUpdate ::= StatementExpressionList . (317)
StatementExpressionList ::= StatementExpressionList  .COMMA StatementExpression 

COMMA     Shift  250

RPAREN    Reduce 317

Default reduction to rule  317


STATE 420 ----------------------------------------------------------------------
( 368 )

BasicForStatement ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt  .SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 

SEMICOLON    Shift  448



STATE 421 ----------------------------------------------------------------------
( 369 )

WhileStatement ::= while LPAREN Expression  .RPAREN Statement 
WhileStatementNoShortIf ::= while LPAREN Expression  .RPAREN StatementNoShortIf 

RPAREN    Shift  449



STATE 422 ----------------------------------------------------------------------
( 370 )

IfThenStatement ::= if LPAREN Expression  .RPAREN Statement 
IfThenElseStatement ::= if LPAREN Expression  .RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN Expression  .RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 

RPAREN    Shift  450



STATE 423 ----------------------------------------------------------------------
( 373 )

MethodInvocation ::= ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN  .ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   451
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 424 ----------------------------------------------------------------------
( 378 )

ClassInstanceCreationExpression ::= new TypeArgumentsopt 
                                    ClassOrInterfaceType TypeArgumentsopt 
                                    LPAREN ArgumentListopt RPAREN  .
                                    ClassBodyopt 

ClassBody ::= .LBRACE ClassBodyDeclarationsopt RBRACE 
ClassBodyopt ::= . (486)
ClassBodyopt ::= .ClassBody 

LBRACE          Shift  417

ClassBodyopt    Gt/Rd  354
ClassBody       Gt/Rd  487

IDENTIFIER      Reduce 486
void            Reduce 486
strictfp        Reduce 486
static          Reduce 486
short           Reduce 486
public          Reduce 486
protected       Reduce 486
private         Reduce 486
long            Reduce 486
interface       Reduce 486
int             Reduce 486
instanceof      Reduce 486
float           Reduce 486
final           Reduce 486
enum            Reduce 486
double          Reduce 486
class           Reduce 486
char            Reduce 486
byte            Reduce 486
boolean         Reduce 486
abstract        Reduce 486
GREATER         Reduce 486
EQUAL_EQUAL     Reduce 486
LESS_EQUAL      Reduce 486
LEFT_SHIFT      Reduce 486
LESS            Reduce 486
PLUS_PLUS       Reduce 486
PLUS            Reduce 486
RBRACE          Reduce 486
OR_OR           Reduce 486
XOR             Reduce 486
RBRACKET        Reduce 486
LBRACKET        Reduce 486
AT              Reduce 486
QUESTION        Reduce 486
SEMICOLON       Reduce 486
COLON           Reduce 486
DIVIDE          Reduce 486
DOT             Reduce 486
COMMA           Reduce 486
MULTIPLY        Reduce 486
RPAREN          Reduce 486
AND_AND         Reduce 486
AND             Reduce 486
REMAINDER       Reduce 486
NOT_EQUAL       Reduce 486
MINUS           Reduce 486
OR              Reduce 486
MINUS_MINUS     Reduce 486

Default reduction to rule  486


STATE 425 ----------------------------------------------------------------------
( 380 )

ClassInstanceCreationExpression ::= Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN  .
                                    ArgumentListopt RPAREN ClassBodyopt 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   452
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 426 ----------------------------------------------------------------------
( 381 )

SwitchBlock ::= LBRACE SwitchBlockStatementGroupsopt SwitchLabelsopt  .RBRACE 

RBRACE    Sh/Rd  298



STATE 427 ----------------------------------------------------------------------
( 381 )

SwitchLabels ::= SwitchLabels  .SwitchLabel 
SwitchLabelsopt ::= SwitchLabels . (461)

SwitchLabel ::= .case ConstantExpression COLON 
SwitchLabel ::= .case EnumConstant COLON 
SwitchLabel ::= .default COLON 

default        Shift  382
case           Shift  383

SwitchLabel    Gt/Rd  303

RBRACE         Reduce 461

Default reduction to rule  461


STATE 428 ----------------------------------------------------------------------
( 383 )

SwitchLabel ::= case EnumConstant  .COLON 

COLON    Sh/Rd  305



STATE 429 ----------------------------------------------------------------------
( 383 )

SwitchLabel ::= case ConstantExpression  .COLON 

COLON    Sh/Rd  304



STATE 430 ----------------------------------------------------------------------
( 383 )

TypeName ::= identifier . (29)
TypeVariable ::= identifier . (32)
ExpressionName ::= identifier . (49)
MethodName ::= identifier . (51)
AmbiguousName ::= identifier . (55)
EnumConstant ::= identifier . (307)

instanceof          Reduce 49
GREATER             Reduce 49
EQUAL_EQUAL         Reduce 49
EQUAL               Reduce 49
LESS_EQUAL          Reduce 49
LEFT_SHIFT_EQUAL    Reduce 49
LEFT_SHIFT          Reduce 49
LESS                Reduce 29
PLUS_EQUAL          Reduce 49
PLUS_PLUS           Reduce 49
PLUS                Reduce 49
OR_EQUAL            Reduce 49
OR_OR               Reduce 49
XOR_EQUAL           Reduce 49
XOR                 Reduce 49
LBRACKET            Reduce 29
QUESTION            Reduce 49
DIVIDE_EQUAL        Reduce 49
DIVIDE              Reduce 49
MULTIPLY_EQUAL      Reduce 49
MULTIPLY            Reduce 49
AND_EQUAL           Reduce 49
AND_AND             Reduce 49
AND                 Reduce 49
REMAINDER_EQUAL     Reduce 49
REMAINDER           Reduce 49
NOT_EQUAL           Reduce 49
MINUS_EQUAL         Reduce 49
MINUS               Reduce 49
OR                  Reduce 49
MINUS_MINUS         Reduce 49
LPAREN              Reduce 51
DOT                 Reduce 29
COLON               Reduce 49

Default reduction to rule  49


STATE 431 ----------------------------------------------------------------------
( 384 )

BlockStatements ::= BlockStatements  .BlockStatement 
SwitchBlockStatementGroup ::= SwitchLabels BlockStatements . (301)

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
VariableModifiers ::= .VariableModifier 
VariableModifiers ::= .VariableModifiers VariableModifier 
VariableModifier ::= .final 
VariableModifier ::= .Annotations 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
BlockStatement ::= .LocalVariableDeclarationStatement 
BlockStatement ::= .ClassDeclaration 
BlockStatement ::= .Statement 
LocalVariableDeclarationStatement ::= .LocalVariableDeclaration SEMICOLON 
LocalVariableDeclaration ::= .VariableModifiersopt Type VariableDeclarators 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
VariableModifiersopt ::= . (464)
VariableModifiersopt ::= .VariableModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

try                                     Shift  58
throw                                   Shift  57
synchronized                            Shift  56
return                                  Shift  55
continue                                Shift  54
break                                   Shift  53
do                                      Shift  52
switch                                  Shift  51
assert                                  Shift  50
MINUS_MINUS                             Shift  42
PLUS_PLUS                               Shift  41
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
false                                   Sh/Rd  353
true                                    Sh/Rd  352
double                                  Sh/Rd  22
float                                   Sh/Rd  21
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
boolean                                 Sh/Rd  13
new                                     Shift  37
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
IDENTIFIER                              Sh/Rd  3
SEMICOLON                               Sh/Rd  284
LBRACE                                  Shift  25
if                                      Shift  24
while                                   Shift  23
for                                     Shift  22
strictfp                                Sh/Rd  86
static                                  Sh/Rd  84
abstract                                Sh/Rd  83
private                                 Sh/Rd  82
protected                               Sh/Rd  81
public                                  Sh/Rd  80
AT                                      Shift  7
final                                   Shift  18

BlockStatement                          Gt/Rd  252
Statement                               Gt/Rd  255
ClassDeclaration                        Gt/Rd  254
LocalVariableDeclarationStatement       Gt/Rd  253
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PostfixExpression                       Goto   43
ArrayCreationExpression                 Gt/Rd  333
BooleanLiteral                          Gt/Rd  348
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
ClassType                               Gt/Rd  26
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
NumericType                             Gt/Rd  12
TypeName                                Goto   35
MethodName                              Goto   33
PrimaryNoNewArray                       Goto   38
ExpressionName                          Goto   44
ArrayAccess                             Goto   39
MethodInvocation                        Goto   47
FieldAccess                             Goto   40
ClassInstanceCreationExpression         Goto   46
Type                                    Goto   34
Literal                                 Gt/Rd  334
ClassName                               Goto   31
Primary                                 Goto   45
AmbiguousName                           Goto   30
LeftHandSide                            Goto   27
StatementExpression                     Goto   26
identifier                              Goto   36
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
ClassModifier                           Gt/Rd  77
ClassModifiers                          Goto   20
ClassModifiersopt                       Goto   21
EnumDeclaration                         Gt/Rd  75
NormalClassDeclaration                  Gt/Rd  74
VariableModifiersopt                    Goto   17
VariableModifier                        Gt/Rd  136
Annotation                              Goto   19
SingleElementAnnotation                 Gt/Rd  233
MarkerAnnotation                        Gt/Rd  232
NormalAnnotation                        Gt/Rd  231
Annotations                             Goto   15
VariableModifiers                       Goto   16
LocalVariableDeclaration                Goto   14

enum                                    Reduce 522
class                                   Reduce 522
default                                 Reduce 301
case                                    Reduce 301
RBRACE                                  Reduce 301

Default reduction to rule  301


STATE 432 ----------------------------------------------------------------------
( 388 393 )

VariableDeclaratorId ::= VariableDeclaratorId  .LBRACKET RBRACKET 
FormalParameter ::= VariableModifiersopt Type VariableDeclaratorId . (135)

LBRACKET    Shift  243

COMMA       Reduce 135
RPAREN      Reduce 135

Default reduction to rule  135


STATE 433 ----------------------------------------------------------------------
( 390 )

ExplicitConstructorInvocation ::= Primary DOT TypeArgumentsopt  .super LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 
MethodInvocation ::= Primary DOT TypeArgumentsopt  .identifier LPAREN 
                     ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 

super         Shift  453
IDENTIFIER    Sh/Rd  3

identifier    Goto   287



STATE 434 ----------------------------------------------------------------------
( 391 )

ExplicitConstructorInvocation ::= TypeArgumentsopt super LPAREN  .
                                  ArgumentListopt RPAREN SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   454
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 435 ----------------------------------------------------------------------
( 392 )

ExplicitConstructorInvocation ::= TypeArgumentsopt this LPAREN  .
                                  ArgumentListopt RPAREN SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   455
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 436 ----------------------------------------------------------------------
( 393 )

LastFormalParameter ::= VariableModifiersopt Type Ellipsisopt  .
                        VariableDeclaratorId 

identifier ::= .IDENTIFIER 
VariableDeclaratorId ::= .identifier 
VariableDeclaratorId ::= .VariableDeclaratorId LBRACKET RBRACKET 

IDENTIFIER              Sh/Rd  3

VariableDeclaratorId    Goto   456
identifier              Gt/Rd  111



STATE 437 ----------------------------------------------------------------------
( 399 )

ArrayType ::= Type  .LBRACKET RBRACKET 
AnnotationTypeElementDeclaration ::= AbstractMethodModifiersopt Type  .
                                     identifier LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 

identifier ::= .IDENTIFIER 

LBRACKET      Shift  130
IDENTIFIER    Sh/Rd  3

identifier    Goto   457



STATE 438 ----------------------------------------------------------------------
( 405 )

ArrayType ::= Type  .LBRACKET RBRACKET 
ConstantDeclaration ::= ConstantModifiersopt Type  .VariableDeclarators 

identifier ::= .IDENTIFIER 
VariableDeclarators ::= .VariableDeclarator 
VariableDeclarators ::= .VariableDeclarators COMMA VariableDeclarator 
VariableDeclarator ::= .VariableDeclaratorId 
VariableDeclarator ::= .VariableDeclaratorId EQUAL VariableInitializer 
VariableDeclaratorId ::= .identifier 
VariableDeclaratorId ::= .VariableDeclaratorId LBRACKET RBRACKET 

LBRACKET                Shift  130
IDENTIFIER              Sh/Rd  3

VariableDeclarators     Goto   458
VariableDeclarator      Gt/Rd  107
identifier              Gt/Rd  111
VariableDeclaratorId    Goto   165



STATE 439 ----------------------------------------------------------------------
( 412 )

InterfaceBody ::= LBRACE InterfaceMemberDeclarationsopt  .RBRACE 

RBRACE    Sh/Rd  196



STATE 440 ----------------------------------------------------------------------
( 412 441 )

AbstractMethodDeclaration ::= AbstractMethodModifiersopt  .TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 

TypeParameters ::= .LESS TypeParameterList GREATER 
TypeParametersopt ::= . (520)
TypeParametersopt ::= .TypeParameters 

LESS                 Shift  153

TypeParametersopt    Goto   459
TypeParameters       Gt/Rd  521

IDENTIFIER           Reduce 520
void                 Reduce 520
short                Reduce 520
long                 Reduce 520
int                  Reduce 520
float                Reduce 520
double               Reduce 520
char                 Reduce 520
byte                 Reduce 520
boolean              Reduce 520

Default reduction to rule  520


STATE 441 ----------------------------------------------------------------------
( 412 )

InterfaceMemberDeclarations ::= InterfaceMemberDeclarations  .
                                InterfaceMemberDeclaration 
InterfaceMemberDeclarationsopt ::= InterfaceMemberDeclarations . (481)

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
InterfaceMemberDeclaration ::= .ConstantDeclaration 
InterfaceMemberDeclaration ::= .AbstractMethodDeclaration 
InterfaceMemberDeclaration ::= .ClassDeclaration 
InterfaceMemberDeclaration ::= .InterfaceDeclaration 
InterfaceMemberDeclaration ::= .SEMICOLON 
ConstantDeclaration ::= .ConstantModifiersopt Type VariableDeclarators 
ConstantModifiers ::= .ConstantModifier 
ConstantModifiers ::= .ConstantModifiers ConstantModifier 
ConstantModifier ::= .Annotation 
ConstantModifier ::= .public 
ConstantModifier ::= .static 
ConstantModifier ::= .final 
AbstractMethodDeclaration ::= .AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt SEMICOLON 
AbstractMethodModifiers ::= .AbstractMethodModifier 
AbstractMethodModifiers ::= .AbstractMethodModifiers AbstractMethodModifier 
AbstractMethodModifier ::= .Annotations 
AbstractMethodModifier ::= .public 
AbstractMethodModifier ::= .abstract 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
AbstractMethodModifiersopt ::= . (476)
AbstractMethodModifiersopt ::= .AbstractMethodModifiers 
ConstantModifiersopt ::= . (478)
ConstantModifiersopt ::= .ConstantModifiers 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

SEMICOLON                     Sh/Rd  203
strictfp                      Shift  81
private                       Shift  84
protected                     Shift  85
abstract                      Shift  407
final                         Shift  402
static                        Shift  403
public                        Shift  408
AT                            Shift  7

InterfaceMemberDeclaration    Gt/Rd  198
InterfaceDeclaration          Gt/Rd  202
ClassDeclaration              Gt/Rd  201
AbstractMethodDeclaration     Gt/Rd  200
ConstantDeclaration           Gt/Rd  199
InterfaceModifier             Gt/Rd  185
InterfaceModifiers            Goto   76
InterfaceModifiersopt         Goto   77
AnnotationTypeDeclaration     Gt/Rd  183
NormalInterfaceDeclaration    Gt/Rd  182
ClassModifier                 Gt/Rd  77
ClassModifiers                Goto   20
ClassModifiersopt             Goto   21
EnumDeclaration               Gt/Rd  75
NormalClassDeclaration        Gt/Rd  74
Annotations                   Goto   409
AbstractMethodModifiers       Goto   410
AbstractMethodModifier        Gt/Rd  212
AbstractMethodModifiersopt    Goto   440
Annotation                    Goto   406
SingleElementAnnotation       Gt/Rd  233
MarkerAnnotation              Gt/Rd  232
NormalAnnotation              Gt/Rd  231
ConstantModifiers             Goto   404
ConstantModifier              Gt/Rd  205
ConstantModifiersopt          Goto   405

IDENTIFIER                    Reduce 478
void                          Reduce 476
short                         Reduce 478
long                          Reduce 478
int                           Reduce 478
float                         Reduce 478
double                        Reduce 478
char                          Reduce 478
byte                          Reduce 478
boolean                       Reduce 478
LESS                          Reduce 476
enum                          Reduce 522
class                         Reduce 522
interface                     Reduce 484
RBRACE                        Reduce 481

Default reduction to rule  478


STATE 442 ----------------------------------------------------------------------
( 414 )

EnumBody ::= LBRACE EnumConstantsopt Commaopt EnumBodyDeclarationsopt  .RBRACE 

RBRACE    Sh/Rd  176



STATE 443 ----------------------------------------------------------------------
( 414 )

EnumBodyDeclarations ::= SEMICOLON  .ClassBodyDeclarationsopt 

ClassDeclaration ::= .NormalClassDeclaration 
ClassDeclaration ::= .EnumDeclaration 
NormalClassDeclaration ::= .ClassModifiersopt class identifier 
                           TypeParametersopt Superopt Interfacesopt ClassBody 
ClassModifiers ::= .ClassModifier 
ClassModifiers ::= .ClassModifiers ClassModifier 
ClassModifier ::= .Annotation 
ClassModifier ::= .public 
ClassModifier ::= .protected 
ClassModifier ::= .private 
ClassModifier ::= .abstract 
ClassModifier ::= .static 
ClassModifier ::= .final 
ClassModifier ::= .strictfp 
ClassBodyDeclarations ::= .ClassBodyDeclaration 
ClassBodyDeclarations ::= .ClassBodyDeclarations ClassBodyDeclaration 
ClassBodyDeclaration ::= .ClassMemberDeclaration 
ClassBodyDeclaration ::= .InstanceInitializer 
ClassBodyDeclaration ::= .StaticInitializer 
ClassBodyDeclaration ::= .ConstructorDeclaration 
ClassMemberDeclaration ::= .FieldDeclaration 
ClassMemberDeclaration ::= .MethodDeclaration 
ClassMemberDeclaration ::= .ClassDeclaration 
ClassMemberDeclaration ::= .InterfaceDeclaration 
ClassMemberDeclaration ::= .SEMICOLON 
FieldDeclaration ::= .FieldModifiersopt Type VariableDeclarators SEMICOLON 
FieldModifiers ::= .FieldModifier 
FieldModifiers ::= .FieldModifiers FieldModifier 
FieldModifier ::= .Annotation 
FieldModifier ::= .public 
FieldModifier ::= .protected 
FieldModifier ::= .private 
FieldModifier ::= .static 
FieldModifier ::= .final 
FieldModifier ::= .transient 
FieldModifier ::= .volatile 
MethodDeclaration ::= .MethodHeader MethodBody 
MethodHeader ::= .MethodModifiersopt TypeParametersopt ResultType 
                 MethodDeclarator Throwsopt 
MethodModifiers ::= .MethodModifier 
MethodModifiers ::= .MethodModifiers MethodModifier 
MethodModifier ::= .Annotations 
MethodModifier ::= .public 
MethodModifier ::= .protected 
MethodModifier ::= .private 
MethodModifier ::= .abstract 
MethodModifier ::= .static 
MethodModifier ::= .final 
MethodModifier ::= .synchronized 
MethodModifier ::= .native 
MethodModifier ::= .strictfp 
InstanceInitializer ::= .Block 
StaticInitializer ::= .static Block 
ConstructorDeclaration ::= .ConstructorModifiersopt ConstructorDeclarator 
                           Throwsopt ConstructorBody 
ConstructorModifiers ::= .ConstructorModifier 
ConstructorModifiers ::= .ConstructorModifiers ConstructorModifier 
ConstructorModifier ::= .Annotations 
ConstructorModifier ::= .public 
ConstructorModifier ::= .protected 
ConstructorModifier ::= .private 
EnumDeclaration ::= .ClassModifiersopt enum identifier Interfacesopt EnumBody 
InterfaceDeclaration ::= .NormalInterfaceDeclaration 
InterfaceDeclaration ::= .AnnotationTypeDeclaration 
NormalInterfaceDeclaration ::= .InterfaceModifiersopt interface identifier 
                               TypeParametersopt ExtendsInterfacesopt 
                               InterfaceBody 
InterfaceModifiers ::= .InterfaceModifier 
InterfaceModifiers ::= .InterfaceModifiers InterfaceModifier 
InterfaceModifier ::= .Annotation 
InterfaceModifier ::= .public 
InterfaceModifier ::= .protected 
InterfaceModifier ::= .private 
InterfaceModifier ::= .abstract 
InterfaceModifier ::= .static 
InterfaceModifier ::= .strictfp 
AnnotationTypeDeclaration ::= .InterfaceModifiersopt AT interface identifier 
                              AnnotationTypeBody 
Annotations ::= .Annotation 
Annotations ::= .Annotations Annotation 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Block ::= .LBRACE BlockStatementsopt RBRACE 
InterfaceModifiersopt ::= . (484)
InterfaceModifiersopt ::= .InterfaceModifiers 
ConstructorModifiersopt ::= . (502)
ConstructorModifiersopt ::= .ConstructorModifiers 
MethodModifiersopt ::= . (510)
MethodModifiersopt ::= .MethodModifiers 
FieldModifiersopt ::= . (512)
FieldModifiersopt ::= .FieldModifiers 
ClassBodyDeclarationsopt ::= . (514)
ClassBodyDeclarationsopt ::= .ClassBodyDeclarations 
ClassModifiersopt ::= . (522)
ClassModifiersopt ::= .ClassModifiers 

LBRACE                        Shift  25
AT                            Shift  7
volatile                      Sh/Rd  124
transient                     Sh/Rd  123
native                        Sh/Rd  151
synchronized                  Sh/Rd  150
final                         Shift  68
strictfp                      Shift  69
static                        Shift  70
abstract                      Shift  71
private                       Shift  72
protected                     Shift  73
public                        Shift  74
SEMICOLON                     Sh/Rd  105

ClassBodyDeclarationsopt      Gt/Rd  181
ConstructorDeclaration        Gt/Rd  100
StaticInitializer             Gt/Rd  99
InstanceInitializer           Gt/Rd  98
ClassMemberDeclaration        Gt/Rd  97
ConstructorModifiers          Goto   60
ConstructorModifier           Gt/Rd  165
ConstructorModifiersopt       Goto   61
Block                         Gt/Rd  160
FieldModifiersopt             Goto   62
FieldModifier                 Gt/Rd  115
SingleElementAnnotation       Gt/Rd  233
MarkerAnnotation              Gt/Rd  232
NormalAnnotation              Gt/Rd  231
FieldModifiers                Goto   63
MethodHeader                  Goto   64
Annotations                   Goto   65
MethodModifiers               Goto   66
MethodModifier                Gt/Rd  141
MethodModifiersopt            Goto   67
EnumDeclaration               Gt/Rd  75
NormalClassDeclaration        Gt/Rd  74
ClassModifiers                Goto   20
ClassModifier                 Gt/Rd  77
ClassModifiersopt             Goto   21
AnnotationTypeDeclaration     Gt/Rd  183
NormalInterfaceDeclaration    Gt/Rd  182
Annotation                    Goto   75
InterfaceModifiers            Goto   76
InterfaceModifier             Gt/Rd  185
InterfaceModifiersopt         Goto   77
InterfaceDeclaration          Gt/Rd  104
ClassDeclaration              Gt/Rd  103
MethodDeclaration             Gt/Rd  102
FieldDeclaration              Gt/Rd  101
ClassBodyDeclarations         Goto   78
ClassBodyDeclaration          Gt/Rd  95

interface                     Reduce 484
enum                          Reduce 522
class                         Reduce 522
void                          Reduce 510
short                         Reduce 510
long                          Reduce 510
int                           Reduce 510
float                         Reduce 510
double                        Reduce 510
char                          Reduce 510
byte                          Reduce 510
boolean                       Reduce 510
IDENTIFIER                    Reduce 510
LESS                          Reduce 510
RBRACE                        Reduce 514

Default reduction to rule  510


STATE 444 ----------------------------------------------------------------------
( 415 )

EnumConstant ::= Annotationsopt identifier Argumentsopt  .ClassBodyopt 

ClassBody ::= .LBRACE ClassBodyDeclarationsopt RBRACE 
ClassBodyopt ::= . (486)
ClassBodyopt ::= .ClassBody 

LBRACE          Shift  417

ClassBodyopt    Gt/Rd  179
ClassBody       Gt/Rd  487

RBRACE          Reduce 486
SEMICOLON       Reduce 486
COLON           Reduce 486
COMMA           Reduce 486

Default reduction to rule  486


STATE 445 ----------------------------------------------------------------------
( 415 )

Arguments ::= LPAREN  .ArgumentListopt RPAREN 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   460
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 446 ----------------------------------------------------------------------
( 417 )

ClassBody ::= LBRACE ClassBodyDeclarationsopt  .RBRACE 

RBRACE    Sh/Rd  94



STATE 447 ----------------------------------------------------------------------
( 418 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                      SEMICOLON ForUpdateopt RPAREN  .Statement 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

for                                     Shift  22
while                                   Shift  23
if                                      Shift  24
LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58

Statement                               Gt/Rd  313
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
StatementWithoutTrailingSubstatement    Gt/Rd  258
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
identifier                              Goto   36
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264



STATE 448 ----------------------------------------------------------------------
( 420 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON  .Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON  .Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
Expressionopt ::= . (456)
Expressionopt ::= .Expression 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

Expressionopt                      Goto   461
Expression                         Gt/Rd  457
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
LeftHandSide                       Goto   27
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Goto   39
MethodInvocation                   Gt/Rd  342
FieldAccess                        Goto   40
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   44
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122
AssignmentExpression               Gt/Rd  446

SEMICOLON                          Reduce 456

Default reduction to rule  456


STATE 449 ----------------------------------------------------------------------
( 421 )

WhileStatement ::= while LPAREN Expression RPAREN  .Statement 
WhileStatementNoShortIf ::= while LPAREN Expression RPAREN  .StatementNoShortIf 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
LabeledStatementNoShortIf ::= .identifier COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58
for                                     Shift  320
while                                   Shift  321
if                                      Shift  322

StatementNoShortIf                      Gt/Rd  309
Statement                               Gt/Rd  308
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
ForStatementNoShortIf                   Gt/Rd  280
WhileStatementNoShortIf                 Gt/Rd  279
IfThenElseStatementNoShortIf            Gt/Rd  278
LabeledStatementNoShortIf               Gt/Rd  277
StatementWithoutTrailingSubstatement    Goto   319
identifier                              Goto   323



STATE 450 ----------------------------------------------------------------------
( 422 )

IfThenStatement ::= if LPAREN Expression RPAREN  .Statement 
IfThenElseStatement ::= if LPAREN Expression RPAREN  .StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN  .
                                 StatementNoShortIf else StatementNoShortIf 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
LabeledStatementNoShortIf ::= .identifier COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58
for                                     Shift  320
while                                   Shift  321
if                                      Shift  322

StatementNoShortIf                      Goto   462
Statement                               Gt/Rd  281
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
ForStatementNoShortIf                   Gt/Rd  280
WhileStatementNoShortIf                 Gt/Rd  279
IfThenElseStatementNoShortIf            Gt/Rd  278
LabeledStatementNoShortIf               Gt/Rd  277
StatementWithoutTrailingSubstatement    Goto   319
identifier                              Goto   323



STATE 451 ----------------------------------------------------------------------
( 423 )

MethodInvocation ::= ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt  .RPAREN 

RPAREN    Sh/Rd  373



STATE 452 ----------------------------------------------------------------------
( 425 )

ClassInstanceCreationExpression ::= Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt  .RPAREN ClassBodyopt 

RPAREN    Shift  463



STATE 453 ----------------------------------------------------------------------
( 433 )

ExplicitConstructorInvocation ::= Primary DOT TypeArgumentsopt super  .LPAREN 
                                  ArgumentListopt RPAREN SEMICOLON 

LPAREN    Shift  464



STATE 454 ----------------------------------------------------------------------
( 434 )

ExplicitConstructorInvocation ::= TypeArgumentsopt super LPAREN 
                                  ArgumentListopt  .RPAREN SEMICOLON 

RPAREN    Shift  465



STATE 455 ----------------------------------------------------------------------
( 435 )

ExplicitConstructorInvocation ::= TypeArgumentsopt this LPAREN 
                                  ArgumentListopt  .RPAREN SEMICOLON 

RPAREN    Shift  466



STATE 456 ----------------------------------------------------------------------
( 436 )

VariableDeclaratorId ::= VariableDeclaratorId  .LBRACKET RBRACKET 
LastFormalParameter ::= VariableModifiersopt Type Ellipsisopt 
                        VariableDeclaratorId . (140)

LBRACKET    Shift  243

RPAREN      Reduce 140

Default reduction to rule  140


STATE 457 ----------------------------------------------------------------------
( 437 )

AnnotationTypeElementDeclaration ::= AbstractMethodModifiersopt Type 
                                     identifier  .LPAREN RPAREN DefaultValueopt 
                                     SEMICOLON 

LPAREN    Shift  467



STATE 458 ----------------------------------------------------------------------
( 438 )

VariableDeclarators ::= VariableDeclarators  .COMMA VariableDeclarator 
ConstantDeclaration ::= ConstantModifiersopt Type VariableDeclarators . (204)

COMMA         Shift  242

IDENTIFIER    Reduce 204
void          Reduce 204
strictfp      Reduce 204
static        Reduce 204
short         Reduce 204
public        Reduce 204
protected     Reduce 204
private       Reduce 204
long          Reduce 204
interface     Reduce 204
int           Reduce 204
float         Reduce 204
final         Reduce 204
enum          Reduce 204
double        Reduce 204
class         Reduce 204
char          Reduce 204
byte          Reduce 204
boolean       Reduce 204
abstract      Reduce 204
LESS          Reduce 204
RBRACE        Reduce 204
AT            Reduce 204
SEMICOLON     Reduce 204

Default reduction to rule  204


STATE 459 ----------------------------------------------------------------------
( 440 )

AbstractMethodDeclaration ::= AbstractMethodModifiersopt TypeParametersopt  .
                              ResultType MethodDeclarator Throwsopt SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ResultType ::= .Type 
ResultType ::= .void 

void                    Sh/Rd  128
boolean                 Sh/Rd  13
char                    Sh/Rd  20
long                    Sh/Rd  19
int                     Sh/Rd  18
short                   Sh/Rd  17
byte                    Sh/Rd  16
double                  Sh/Rd  22
float                   Sh/Rd  21
IDENTIFIER              Sh/Rd  3

ResultType              Goto   468
NumericType             Gt/Rd  12
FloatingPointType       Gt/Rd  15
IntegralType            Gt/Rd  14
ArrayType               Gt/Rd  25
TypeVariable            Gt/Rd  24
ClassOrInterfaceType    Gt/Rd  23
Type                    Goto   230
TypeName                Goto   95
identifier              Goto   96
ClassType               Gt/Rd  26
ReferenceType           Gt/Rd  11
PrimitiveType           Gt/Rd  10



STATE 460 ----------------------------------------------------------------------
( 445 )

Arguments ::= LPAREN ArgumentListopt  .RPAREN 

RPAREN    Sh/Rd  180



STATE 461 ----------------------------------------------------------------------
( 448 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt  .
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 

SEMICOLON    Shift  469



STATE 462 ----------------------------------------------------------------------
( 450 )

IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf  .else 
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN 
                                 StatementNoShortIf  .else StatementNoShortIf 

else    Shift  470



STATE 463 ----------------------------------------------------------------------
( 452 )

ClassInstanceCreationExpression ::= Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN  .ClassBodyopt 

ClassBody ::= .LBRACE ClassBodyDeclarationsopt RBRACE 
ClassBodyopt ::= . (486)
ClassBodyopt ::= .ClassBody 

LBRACE          Shift  417

ClassBodyopt    Gt/Rd  355
ClassBody       Gt/Rd  487

IDENTIFIER      Reduce 486
void            Reduce 486
strictfp        Reduce 486
static          Reduce 486
short           Reduce 486
public          Reduce 486
protected       Reduce 486
private         Reduce 486
long            Reduce 486
interface       Reduce 486
int             Reduce 486
instanceof      Reduce 486
float           Reduce 486
final           Reduce 486
enum            Reduce 486
double          Reduce 486
class           Reduce 486
char            Reduce 486
byte            Reduce 486
boolean         Reduce 486
abstract        Reduce 486
GREATER         Reduce 486
EQUAL_EQUAL     Reduce 486
LESS_EQUAL      Reduce 486
LEFT_SHIFT      Reduce 486
LESS            Reduce 486
PLUS_PLUS       Reduce 486
PLUS            Reduce 486
RBRACE          Reduce 486
OR_OR           Reduce 486
XOR             Reduce 486
RBRACKET        Reduce 486
LBRACKET        Reduce 486
AT              Reduce 486
QUESTION        Reduce 486
SEMICOLON       Reduce 486
COLON           Reduce 486
DIVIDE          Reduce 486
DOT             Reduce 486
COMMA           Reduce 486
MULTIPLY        Reduce 486
RPAREN          Reduce 486
AND_AND         Reduce 486
AND             Reduce 486
REMAINDER       Reduce 486
NOT_EQUAL       Reduce 486
MINUS           Reduce 486
OR              Reduce 486
MINUS_MINUS     Reduce 486

Default reduction to rule  486


STATE 464 ----------------------------------------------------------------------
( 453 )

ExplicitConstructorInvocation ::= Primary DOT TypeArgumentsopt super LPAREN  .
                                  ArgumentListopt RPAREN SEMICOLON 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArgumentList ::= .Expression 
ArgumentList ::= .ArgumentList COMMA Expression 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 
AssignmentExpression ::= .ConditionalExpression 
AssignmentExpression ::= .Assignment 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
Expression ::= .AssignmentExpression 
ArgumentListopt ::= . (496)
ArgumentListopt ::= .ArgumentList 

PLUS_PLUS                          Shift  41
MINUS_MINUS                        Shift  42
NOT                                Shift  107
TWIDDLE                            Shift  108
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
IDENTIFIER                         Sh/Rd  3
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
super                              Shift  32
LPAREN                             Shift  110
this                               Sh/Rd  337
void                               Shift  29
MINUS                              Shift  112
PLUS                               Shift  113

ArgumentListopt                    Goto   471
AssignmentExpression               Gt/Rd  446
UnaryExpression                    Gt/Rd  396
CastExpression                     Gt/Rd  393
ArrayCreationExpression            Gt/Rd  333
BooleanLiteral                     Gt/Rd  348
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
ClassType                          Gt/Rd  26
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
NumericType                        Gt/Rd  12
TypeName                           Goto   35
MethodName                         Goto   33
PrimaryNoNewArray                  Goto   38
AmbiguousName                      Goto   30
identifier                         Goto   109
MethodInvocation                   Gt/Rd  342
ClassInstanceCreationExpression    Gt/Rd  340
ClassName                          Goto   31
Type                               Goto   34
Literal                            Gt/Rd  334
PostfixExpression                  Goto   111
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
Primary                            Goto   45
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
AdditiveExpression                 Goto   114
MultiplicativeExpression           Goto   115
RelationalExpression               Goto   116
ShiftExpression                    Goto   117
AndExpression                      Goto   118
EqualityExpression                 Goto   119
InclusiveOrExpression              Goto   120
ExclusiveOrExpression              Goto   121
ConditionalOrExpression            Goto   122
ConditionalAndExpression           Goto   123
LeftHandSide                       Goto   27
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
ExpressionName                     Goto   44
Assignment                         Gt/Rd  429
ConditionalExpression              Gt/Rd  428
ArgumentList                       Goto   200
Expression                         Gt/Rd  356

RPAREN                             Reduce 496

Default reduction to rule  496


STATE 465 ----------------------------------------------------------------------
( 454 )

ExplicitConstructorInvocation ::= TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN  .SEMICOLON 

SEMICOLON    Sh/Rd  173



STATE 466 ----------------------------------------------------------------------
( 455 )

ExplicitConstructorInvocation ::= TypeArgumentsopt this LPAREN 
                                  ArgumentListopt RPAREN  .SEMICOLON 

SEMICOLON    Sh/Rd  172



STATE 467 ----------------------------------------------------------------------
( 457 )

AnnotationTypeElementDeclaration ::= AbstractMethodModifiersopt Type 
                                     identifier LPAREN  .RPAREN DefaultValueopt 
                                     SEMICOLON 

RPAREN    Shift  472



STATE 468 ----------------------------------------------------------------------
( 459 )

AbstractMethodDeclaration ::= AbstractMethodModifiersopt TypeParametersopt 
                              ResultType  .MethodDeclarator Throwsopt SEMICOLON 

identifier ::= .IDENTIFIER 
MethodDeclarator ::= .identifier LPAREN FormalParameterListopt RPAREN 
MethodDeclarator ::= .MethodDeclarator LBRACKET RBRACKET 

IDENTIFIER          Sh/Rd  3

MethodDeclarator    Goto   473
identifier          Goto   301



STATE 469 ----------------------------------------------------------------------
( 461 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                      SEMICOLON  .ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON  .ForUpdateopt RPAREN StatementNoShortIf 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
ForUpdate ::= .StatementExpressionList 
StatementExpressionList ::= .StatementExpression 
StatementExpressionList ::= .StatementExpressionList COMMA StatementExpression 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 
ForUpdateopt ::= . (454)
ForUpdateopt ::= .ForUpdate 

MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
false                              Sh/Rd  353
true                               Sh/Rd  352
double                             Sh/Rd  22
float                              Sh/Rd  21
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
boolean                            Sh/Rd  13
new                                Shift  37
LPAREN                             Shift  28
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
IDENTIFIER                         Sh/Rd  3

ForUpdateopt                       Goto   474
ForUpdate                          Gt/Rd  455
StatementExpression                Gt/Rd  318
LeftHandSide                       Goto   27
Literal                            Gt/Rd  334
AmbiguousName                      Goto   30
ClassName                          Goto   31
MethodName                         Goto   33
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
ArrayAccess                        Goto   39
FieldAccess                        Goto   40
PostfixExpression                  Goto   43
ExpressionName                     Goto   44
Primary                            Goto   45
ClassInstanceCreationExpression    Goto   46
MethodInvocation                   Goto   47
PostDecrementExpression            Goto   48
PostIncrementExpression            Goto   49
PreDecrementExpression             Gt/Rd  290
PreIncrementExpression             Gt/Rd  289
Assignment                         Gt/Rd  288
StatementExpressionList            Goto   419

RPAREN                             Reduce 454

Default reduction to rule  454


STATE 470 ----------------------------------------------------------------------
( 462 )

IfThenElseStatement ::= if LPAREN Expression RPAREN StatementNoShortIf else  .
                        Statement 
IfThenElseStatementNoShortIf ::= if LPAREN Expression RPAREN 
                                 StatementNoShortIf else  .StatementNoShortIf 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
LabeledStatementNoShortIf ::= .identifier COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58
for                                     Shift  320
while                                   Shift  321
if                                      Shift  322

StatementNoShortIf                      Gt/Rd  283
Statement                               Gt/Rd  282
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
ForStatementNoShortIf                   Gt/Rd  280
WhileStatementNoShortIf                 Gt/Rd  279
IfThenElseStatementNoShortIf            Gt/Rd  278
LabeledStatementNoShortIf               Gt/Rd  277
StatementWithoutTrailingSubstatement    Goto   319
identifier                              Goto   323



STATE 471 ----------------------------------------------------------------------
( 464 )

ExplicitConstructorInvocation ::= Primary DOT TypeArgumentsopt super LPAREN 
                                  ArgumentListopt  .RPAREN SEMICOLON 

RPAREN    Shift  475



STATE 472 ----------------------------------------------------------------------
( 467 )

AnnotationTypeElementDeclaration ::= AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN  .DefaultValueopt 
                                     SEMICOLON 

DefaultValue ::= .default ElementValue 
DefaultValueopt ::= . (472)
DefaultValueopt ::= .DefaultValue 

default            Shift  477

DefaultValueopt    Goto   476
DefaultValue       Gt/Rd  473

SEMICOLON          Reduce 472

Default reduction to rule  472


STATE 473 ----------------------------------------------------------------------
( 468 )

MethodDeclarator ::= MethodDeclarator  .LBRACKET RBRACKET 
AbstractMethodDeclaration ::= AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator  .Throwsopt SEMICOLON 

Throws ::= .throws ExceptionTypeList 
Throwsopt ::= . (508)
Throwsopt ::= .Throws 

LBRACKET     Shift  352
throws       Shift  224

Throwsopt    Goto   478
Throws       Gt/Rd  509

SEMICOLON    Reduce 508

Default reduction to rule  508


STATE 474 ----------------------------------------------------------------------
( 469 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                      SEMICOLON ForUpdateopt  .RPAREN Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt  .RPAREN StatementNoShortIf 

RPAREN    Shift  479



STATE 475 ----------------------------------------------------------------------
( 471 )

ExplicitConstructorInvocation ::= Primary DOT TypeArgumentsopt super LPAREN 
                                  ArgumentListopt RPAREN  .SEMICOLON 

SEMICOLON    Sh/Rd  174



STATE 476 ----------------------------------------------------------------------
( 472 )

AnnotationTypeElementDeclaration ::= AbstractMethodModifiersopt Type 
                                     identifier LPAREN RPAREN 
                                     DefaultValueopt  .SEMICOLON 

SEMICOLON    Sh/Rd  221



STATE 477 ----------------------------------------------------------------------
( 472 )

DefaultValue ::= default  .ElementValue 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Annotation ::= .NormalAnnotation 
Annotation ::= .MarkerAnnotation 
Annotation ::= .SingleElementAnnotation 
NormalAnnotation ::= .AT TypeName LPAREN ElementValuePairsopt RPAREN 
ElementValue ::= .ConditionalExpression 
ElementValue ::= .Annotation 
ElementValue ::= .ElementValueArrayInitializer 
ElementValueArrayInitializer ::= .LBRACE ElementValuesopt Commaopt RBRACE 
MarkerAnnotation ::= .AT TypeName 
SingleElementAnnotation ::= .AT TypeName LPAREN ElementValue RPAREN 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
UnaryExpression ::= .PreIncrementExpression 
UnaryExpression ::= .PreDecrementExpression 
UnaryExpression ::= .PLUS UnaryExpression 
UnaryExpression ::= .MINUS UnaryExpression 
UnaryExpression ::= .UnaryExpressionNotPlusMinus 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
UnaryExpressionNotPlusMinus ::= .PostfixExpression 
UnaryExpressionNotPlusMinus ::= .TWIDDLE UnaryExpression 
UnaryExpressionNotPlusMinus ::= .NOT UnaryExpression 
UnaryExpressionNotPlusMinus ::= .CastExpression 
CastExpression ::= .LPAREN PrimitiveType Dimsopt RPAREN UnaryExpression 
CastExpression ::= .LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus 
MultiplicativeExpression ::= .UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression MULTIPLY UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression DIVIDE UnaryExpression 
MultiplicativeExpression ::= .MultiplicativeExpression REMAINDER 
                             UnaryExpression 
AdditiveExpression ::= .MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= .AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= .AdditiveExpression 
ShiftExpression ::= .ShiftExpression LEFT_SHIFT AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER AdditiveExpression 
ShiftExpression ::= .ShiftExpression GREATER GREATER GREATER AdditiveExpression 
RelationalExpression ::= .ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER ShiftExpression 
RelationalExpression ::= .RelationalExpression LESS_EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression GREATER EQUAL ShiftExpression 
RelationalExpression ::= .RelationalExpression instanceof ReferenceType 
EqualityExpression ::= .RelationalExpression 
EqualityExpression ::= .EqualityExpression EQUAL_EQUAL RelationalExpression 
EqualityExpression ::= .EqualityExpression NOT_EQUAL RelationalExpression 
AndExpression ::= .EqualityExpression 
AndExpression ::= .AndExpression AND EqualityExpression 
ExclusiveOrExpression ::= .AndExpression 
ExclusiveOrExpression ::= .ExclusiveOrExpression XOR AndExpression 
InclusiveOrExpression ::= .ExclusiveOrExpression 
InclusiveOrExpression ::= .InclusiveOrExpression OR ExclusiveOrExpression 
ConditionalAndExpression ::= .InclusiveOrExpression 
ConditionalAndExpression ::= .ConditionalAndExpression AND_AND 
                             InclusiveOrExpression 
ConditionalOrExpression ::= .ConditionalAndExpression 
ConditionalOrExpression ::= .ConditionalOrExpression OR_OR 
                            ConditionalAndExpression 
ConditionalExpression ::= .ConditionalOrExpression 
ConditionalExpression ::= .ConditionalOrExpression QUESTION Expression COLON 
                          ConditionalExpression 

IDENTIFIER                         Sh/Rd  3
LBRACE                             Shift  238
AT                                 Shift  7
MINUS                              Shift  112
PLUS                               Shift  113
this                               Sh/Rd  337
void                               Shift  29
super                              Shift  32
boolean                            Sh/Rd  13
char                               Sh/Rd  20
long                               Sh/Rd  19
int                                Sh/Rd  18
short                              Sh/Rd  17
byte                               Sh/Rd  16
double                             Sh/Rd  22
float                              Sh/Rd  21
false                              Sh/Rd  353
true                               Sh/Rd  352
null                               Sh/Rd  351
StringLiteral                      Sh/Rd  350
CharacterLiteral                   Sh/Rd  349
DoubleLiteral                      Sh/Rd  347
FloatingPointLiteral               Sh/Rd  346
LongLiteral                        Sh/Rd  345
IntegerLiteral                     Sh/Rd  344
new                                Shift  37
LPAREN                             Shift  110
NOT                                Shift  107
TWIDDLE                            Shift  108
MINUS_MINUS                        Shift  42
PLUS_PLUS                          Shift  41

ElementValue                       Gt/Rd  228
ElementValueArrayInitializer       Gt/Rd  241
Annotation                         Gt/Rd  240
ConditionalExpression              Gt/Rd  239
SingleElementAnnotation            Gt/Rd  233
MarkerAnnotation                   Gt/Rd  232
NormalAnnotation                   Gt/Rd  231
UnaryExpressionNotPlusMinus        Gt/Rd  387
PreDecrementExpression             Gt/Rd  384
PreIncrementExpression             Gt/Rd  383
PostDecrementExpression            Gt/Rd  380
PostIncrementExpression            Gt/Rd  379
ArrayAccess                        Gt/Rd  343
MethodInvocation                   Gt/Rd  342
FieldAccess                        Gt/Rd  341
ClassInstanceCreationExpression    Gt/Rd  340
Literal                            Gt/Rd  334
ExpressionName                     Goto   138
AmbiguousName                      Goto   30
MethodName                         Goto   33
ClassName                          Goto   31
Primary                            Goto   45
NumericType                        Gt/Rd  12
FloatingPointType                  Gt/Rd  15
IntegralType                       Gt/Rd  14
ArrayType                          Gt/Rd  25
TypeVariable                       Gt/Rd  24
ClassOrInterfaceType               Gt/Rd  23
Type                               Goto   34
TypeName                           Goto   35
identifier                         Goto   109
ClassType                          Gt/Rd  26
ReferenceType                      Gt/Rd  11
PrimitiveType                      Gt/Rd  10
BooleanLiteral                     Gt/Rd  348
ArrayCreationExpression            Gt/Rd  333
PrimaryNoNewArray                  Goto   38
CastExpression                     Gt/Rd  393
PostfixExpression                  Goto   111
MultiplicativeExpression           Goto   115
UnaryExpression                    Gt/Rd  396
ShiftExpression                    Goto   117
AdditiveExpression                 Goto   114
EqualityExpression                 Goto   119
RelationalExpression               Goto   116
ExclusiveOrExpression              Goto   121
AndExpression                      Goto   118
ConditionalAndExpression           Goto   123
InclusiveOrExpression              Goto   120
ConditionalOrExpression            Goto   122



STATE 478 ----------------------------------------------------------------------
( 473 )

AbstractMethodDeclaration ::= AbstractMethodModifiersopt TypeParametersopt 
                              ResultType MethodDeclarator Throwsopt  .SEMICOLON 

SEMICOLON    Sh/Rd  211



STATE 479 ----------------------------------------------------------------------
( 474 )

BasicForStatement ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                      SEMICOLON ForUpdateopt RPAREN  .Statement 
ForStatementNoShortIf ::= for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN  .StatementNoShortIf 

identifier ::= .IDENTIFIER 
Type ::= .PrimitiveType 
Type ::= .ReferenceType 
PrimitiveType ::= .NumericType 
PrimitiveType ::= .boolean 
NumericType ::= .IntegralType 
NumericType ::= .FloatingPointType 
IntegralType ::= .byte 
IntegralType ::= .short 
IntegralType ::= .int 
IntegralType ::= .long 
IntegralType ::= .char 
FloatingPointType ::= .float 
FloatingPointType ::= .double 
ReferenceType ::= .ClassOrInterfaceType 
ReferenceType ::= .TypeVariable 
ReferenceType ::= .ArrayType 
ClassOrInterfaceType ::= .ClassType 
ClassType ::= .TypeName TypeArgumentsopt 
TypeName ::= .identifier 
TypeName ::= .TypeName DOT identifier 
ClassName ::= .TypeName 
TypeVariable ::= .identifier 
ArrayType ::= .Type LBRACKET RBRACKET 
ExpressionName ::= .identifier 
ExpressionName ::= .AmbiguousName DOT identifier 
MethodName ::= .identifier 
MethodName ::= .AmbiguousName DOT identifier 
AmbiguousName ::= .identifier 
AmbiguousName ::= .AmbiguousName DOT identifier 
Block ::= .LBRACE BlockStatementsopt RBRACE 
Statement ::= .StatementWithoutTrailingSubstatement 
Statement ::= .LabeledStatement 
Statement ::= .IfThenStatement 
Statement ::= .IfThenElseStatement 
Statement ::= .WhileStatement 
Statement ::= .ForStatement 
StatementWithoutTrailingSubstatement ::= .Block 
StatementWithoutTrailingSubstatement ::= .EmptyStatement 
StatementWithoutTrailingSubstatement ::= .ExpressionStatement 
StatementWithoutTrailingSubstatement ::= .AssertStatement 
StatementWithoutTrailingSubstatement ::= .SwitchStatement 
StatementWithoutTrailingSubstatement ::= .DoStatement 
StatementWithoutTrailingSubstatement ::= .BreakStatement 
StatementWithoutTrailingSubstatement ::= .ContinueStatement 
StatementWithoutTrailingSubstatement ::= .ReturnStatement 
StatementWithoutTrailingSubstatement ::= .SynchronizedStatement 
StatementWithoutTrailingSubstatement ::= .ThrowStatement 
StatementWithoutTrailingSubstatement ::= .TryStatement 
StatementNoShortIf ::= .StatementWithoutTrailingSubstatement 
StatementNoShortIf ::= .LabeledStatementNoShortIf 
StatementNoShortIf ::= .IfThenElseStatementNoShortIf 
StatementNoShortIf ::= .WhileStatementNoShortIf 
StatementNoShortIf ::= .ForStatementNoShortIf 
IfThenStatement ::= .if LPAREN Expression RPAREN Statement 
IfThenElseStatement ::= .if LPAREN Expression RPAREN StatementNoShortIf else 
                        Statement 
IfThenElseStatementNoShortIf ::= .if LPAREN Expression RPAREN 
                                 StatementNoShortIf else StatementNoShortIf 
EmptyStatement ::= .SEMICOLON 
LabeledStatement ::= .identifier COLON Statement 
LabeledStatementNoShortIf ::= .identifier COLON StatementNoShortIf 
ExpressionStatement ::= .StatementExpression SEMICOLON 
StatementExpression ::= .Assignment 
StatementExpression ::= .PreIncrementExpression 
StatementExpression ::= .PreDecrementExpression 
StatementExpression ::= .PostIncrementExpression 
StatementExpression ::= .PostDecrementExpression 
StatementExpression ::= .MethodInvocation 
StatementExpression ::= .ClassInstanceCreationExpression 
AssertStatement ::= .assert Expression SEMICOLON 
AssertStatement ::= .assert Expression COLON Expression SEMICOLON 
SwitchStatement ::= .switch LPAREN Expression RPAREN SwitchBlock 
WhileStatement ::= .while LPAREN Expression RPAREN Statement 
WhileStatementNoShortIf ::= .while LPAREN Expression RPAREN StatementNoShortIf 
DoStatement ::= .do Statement while LPAREN Expression RPAREN SEMICOLON 
ForStatement ::= .BasicForStatement 
ForStatement ::= .EnhancedForStatement 
BasicForStatement ::= .for LPAREN ForInitopt SEMICOLON Expressionopt SEMICOLON 
                      ForUpdateopt RPAREN Statement 
ForStatementNoShortIf ::= .for LPAREN ForInitopt SEMICOLON Expressionopt 
                          SEMICOLON ForUpdateopt RPAREN StatementNoShortIf 
EnhancedForStatement ::= .for LPAREN FormalParameter COLON Expression RPAREN 
                         Statement 
BreakStatement ::= .break identifieropt SEMICOLON 
ContinueStatement ::= .continue identifieropt SEMICOLON 
ReturnStatement ::= .return Expressionopt SEMICOLON 
ThrowStatement ::= .throw Expression SEMICOLON 
SynchronizedStatement ::= .synchronized LPAREN Expression RPAREN Block 
TryStatement ::= .try Block Catches 
TryStatement ::= .try Block Catchesopt Finally 
Primary ::= .PrimaryNoNewArray 
Primary ::= .ArrayCreationExpression 
PrimaryNoNewArray ::= .Literal 
PrimaryNoNewArray ::= .Type DOT class 
PrimaryNoNewArray ::= .void DOT class 
PrimaryNoNewArray ::= .this 
PrimaryNoNewArray ::= .ClassName DOT this 
PrimaryNoNewArray ::= .LPAREN Expression RPAREN 
PrimaryNoNewArray ::= .ClassInstanceCreationExpression 
PrimaryNoNewArray ::= .FieldAccess 
PrimaryNoNewArray ::= .MethodInvocation 
PrimaryNoNewArray ::= .ArrayAccess 
Literal ::= .IntegerLiteral 
Literal ::= .LongLiteral 
Literal ::= .FloatingPointLiteral 
Literal ::= .DoubleLiteral 
Literal ::= .BooleanLiteral 
Literal ::= .CharacterLiteral 
Literal ::= .StringLiteral 
Literal ::= .null 
BooleanLiteral ::= .true 
BooleanLiteral ::= .false 
ClassInstanceCreationExpression ::= .new TypeArgumentsopt ClassOrInterfaceType 
                                    TypeArgumentsopt LPAREN ArgumentListopt 
                                    RPAREN ClassBodyopt 
ClassInstanceCreationExpression ::= .Primary DOT new TypeArgumentsopt 
                                    identifier TypeArgumentsopt LPAREN 
                                    ArgumentListopt RPAREN ClassBodyopt 
ArrayCreationExpression ::= .new PrimitiveType DimExprs Dimsopt 
ArrayCreationExpression ::= .new ClassOrInterfaceType DimExprs Dimsopt 
ArrayCreationExpression ::= .new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression ::= .new ClassOrInterfaceType Dims ArrayInitializer 
FieldAccess ::= .Primary DOT identifier 
FieldAccess ::= .super DOT identifier 
FieldAccess ::= .ClassName DOT super DOT identifier 
MethodInvocation ::= .MethodName LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .Primary DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .super DOT TypeArgumentsopt identifier LPAREN 
                     ArgumentListopt RPAREN 
MethodInvocation ::= .ClassName DOT super DOT TypeArgumentsopt identifier 
                     LPAREN ArgumentListopt RPAREN 
MethodInvocation ::= .TypeName DOT TypeArguments identifier LPAREN 
                     ArgumentListopt RPAREN 
ArrayAccess ::= .ExpressionName LBRACKET Expression RBRACKET 
ArrayAccess ::= .PrimaryNoNewArray LBRACKET Expression RBRACKET 
PostfixExpression ::= .Primary 
PostfixExpression ::= .ExpressionName 
PostfixExpression ::= .PostIncrementExpression 
PostfixExpression ::= .PostDecrementExpression 
PostIncrementExpression ::= .PostfixExpression PLUS_PLUS 
PostDecrementExpression ::= .PostfixExpression MINUS_MINUS 
PreIncrementExpression ::= .PLUS_PLUS UnaryExpression 
PreDecrementExpression ::= .MINUS_MINUS UnaryExpression 
Assignment ::= .LeftHandSide AssignmentOperator AssignmentExpression 
LeftHandSide ::= .ExpressionName 
LeftHandSide ::= .FieldAccess 
LeftHandSide ::= .ArrayAccess 

LBRACE                                  Shift  25
SEMICOLON                               Sh/Rd  284
IDENTIFIER                              Sh/Rd  3
LPAREN                                  Shift  28
this                                    Sh/Rd  337
void                                    Shift  29
super                                   Shift  32
boolean                                 Sh/Rd  13
char                                    Sh/Rd  20
long                                    Sh/Rd  19
int                                     Sh/Rd  18
short                                   Sh/Rd  17
byte                                    Sh/Rd  16
double                                  Sh/Rd  22
float                                   Sh/Rd  21
false                                   Sh/Rd  353
true                                    Sh/Rd  352
null                                    Sh/Rd  351
StringLiteral                           Sh/Rd  350
CharacterLiteral                        Sh/Rd  349
DoubleLiteral                           Sh/Rd  347
FloatingPointLiteral                    Sh/Rd  346
LongLiteral                             Sh/Rd  345
IntegerLiteral                          Sh/Rd  344
new                                     Shift  37
PLUS_PLUS                               Shift  41
MINUS_MINUS                             Shift  42
assert                                  Shift  50
switch                                  Shift  51
do                                      Shift  52
break                                   Shift  53
continue                                Shift  54
return                                  Shift  55
synchronized                            Shift  56
throw                                   Shift  57
try                                     Shift  58
for                                     Shift  320
while                                   Shift  321
if                                      Shift  322

StatementNoShortIf                      Gt/Rd  314
Statement                               Gt/Rd  313
ForStatement                            Gt/Rd  263
WhileStatement                          Gt/Rd  262
IfThenElseStatement                     Gt/Rd  261
IfThenStatement                         Gt/Rd  260
LabeledStatement                        Gt/Rd  259
EnhancedForStatement                    Gt/Rd  312
BasicForStatement                       Gt/Rd  311
StatementExpression                     Goto   26
LeftHandSide                            Goto   27
Literal                                 Gt/Rd  334
AmbiguousName                           Goto   30
ClassName                               Goto   31
MethodName                              Goto   33
NumericType                             Gt/Rd  12
FloatingPointType                       Gt/Rd  15
IntegralType                            Gt/Rd  14
ArrayType                               Gt/Rd  25
TypeVariable                            Gt/Rd  24
ClassOrInterfaceType                    Gt/Rd  23
Type                                    Goto   34
TypeName                                Goto   35
ClassType                               Gt/Rd  26
ReferenceType                           Gt/Rd  11
PrimitiveType                           Gt/Rd  10
BooleanLiteral                          Gt/Rd  348
ArrayCreationExpression                 Gt/Rd  333
PrimaryNoNewArray                       Goto   38
ArrayAccess                             Goto   39
FieldAccess                             Goto   40
PostfixExpression                       Goto   43
ExpressionName                          Goto   44
Primary                                 Goto   45
ClassInstanceCreationExpression         Goto   46
MethodInvocation                        Goto   47
PostDecrementExpression                 Goto   48
PostIncrementExpression                 Goto   49
PreDecrementExpression                  Gt/Rd  290
PreIncrementExpression                  Gt/Rd  289
Assignment                              Gt/Rd  288
TryStatement                            Gt/Rd  275
ThrowStatement                          Gt/Rd  274
SynchronizedStatement                   Gt/Rd  273
ReturnStatement                         Gt/Rd  272
ContinueStatement                       Gt/Rd  271
BreakStatement                          Gt/Rd  270
DoStatement                             Gt/Rd  269
SwitchStatement                         Gt/Rd  268
AssertStatement                         Gt/Rd  267
ExpressionStatement                     Gt/Rd  266
EmptyStatement                          Gt/Rd  265
Block                                   Gt/Rd  264
ForStatementNoShortIf                   Gt/Rd  280
WhileStatementNoShortIf                 Gt/Rd  279
IfThenElseStatementNoShortIf            Gt/Rd  278
LabeledStatementNoShortIf               Gt/Rd  277
StatementWithoutTrailingSubstatement    Goto   319
identifier                              Goto   323


Number of entries in base Action Table: 5887
Additional space required for compaction of Action Table: 16.7%

Number of unique terminal states: 329
Number of Shift actions saved by merging: 2445
Number of Conflict points saved by merging: 0
Number of Reduce actions saved by merging: 249
Number of Reduce saved by default: 2525

Number of entries in Terminal Action Table: 1932
Additional space required for compaction of Terminal Table: 6.6%


 The LALR Parser Generator              2.1.01 (Aug 13 2021)


Mapping of new state numbers into original numbers:

  540  ==>>      4
  571  ==>>      2
  572  ==>>    153
  577  ==>>    314
  585  ==>>    136
  589  ==>>     58
  591  ==>>     70
  592  ==>>    290
  625  ==>>     37
  629  ==>>    306
  636  ==>>      6
  639  ==>>    220
  641  ==>>    127
  644  ==>>    149
  647  ==>>    347
  652  ==>>      7
  655  ==>>     98
  657  ==>>    280
  670  ==>>      3
  671  ==>>     10
  674  ==>>     14
  675  ==>>    246
  678  ==>>     12
  709  ==>>     18
  714  ==>>    224
  723  ==>>    245
  724  ==>>     66
  725  ==>>     19
  728  ==>>      8
  763  ==>>    305
  780  ==>>    247
  781  ==>>     15
  783  ==>>     21
  785  ==>>     13
  818  ==>>     11
  872  ==>>    427
  874  ==>>    299
  878  ==>>    166
  881  ==>>    414
  887  ==>>     65
  892  ==>>     25
  923  ==>>     67
  924  ==>>     22
  932  ==>>     23
  937  ==>>     99
  939  ==>>     61
  943  ==>>    152
  977  ==>>    125
  980  ==>>     24
  985  ==>>    292
  993  ==>>     26
  994  ==>>    150
  995  ==>>    357
  999  ==>>    343
 1030  ==>>     27
 1044  ==>>     63
 1049  ==>>     76
 1050  ==>>     29
 1051  ==>>    151
 1084  ==>>     30
 1089  ==>>    222
 1095  ==>>     31
 1098  ==>>     32
 1101  ==>>    155
 1103  ==>>     33
 1106  ==>>    384
 1138  ==>>    140
 1146  ==>>     34
 1152  ==>>     60
 1153  ==>>    415
 1154  ==>>    298
 1191  ==>>    276
 1197  ==>>     89
 1207  ==>>    156
 1220  ==>>    204
 1221  ==>>    409
 1222  ==>>    227
 1226  ==>>     59
 1257  ==>>    363
 1271  ==>>    390
 1273  ==>>    131
 1312  ==>>    395
 1315  ==>>     79
 1317  ==>>    158
 1319  ==>>    388
 1322  ==>>     36
 1325  ==>>    431
 1361  ==>>    436
 1363  ==>>     38
 1365  ==>>    167
 1370  ==>>    413
 1373  ==>>    300
 1377  ==>>     39
 1410  ==>>    229
 1412  ==>>    232
 1418  ==>>    334
 1421  ==>>    293
 1424  ==>>    253
 1455  ==>>    313
 1456  ==>>    223
 1460  ==>>    459
 1476  ==>>     35
 1500  ==>>     17
 1514  ==>>    161
 1516  ==>>    440
 1517  ==>>    468
 1519  ==>>    207
 1523  ==>>     40
 1530  ==>>    371
 1566  ==>>     62
 1579  ==>>    473
 1581  ==>>     43
 1582  ==>>     95
 1583  ==>>     44
 1606  ==>>    171
 1619  ==>>    163
 1621  ==>>    210
 1626  ==>>    198
 1628  ==>>     45
 1636  ==>>    449
 1672  ==>>    182
 1685  ==>>    201
 1688  ==>>    211
 1689  ==>>     46
 1712  ==>>    281
 1725  ==>>    214
 1727  ==>>     47
 1729  ==>>     48
 1731  ==>>     49
 1733  ==>>    231
 1735  ==>>    233
 1742  ==>>    450
 1775  ==>>     51
 1778  ==>>    282
 1791  ==>>    240
 1793  ==>>     56
 1794  ==>>    215
 1795  ==>>     68
 1818  ==>>    342
 1831  ==>>    288
 1833  ==>>    329
 1835  ==>>    361
 1837  ==>>    433
 1839  ==>>    437
 1841  ==>>     69
 1842  ==>>    360
 1848  ==>>    470
 1881  ==>>    396
 1884  ==>>    349
 1897  ==>>    302
 1898  ==>>     71
 1899  ==>>     72
 1900  ==>>    312
 1901  ==>>     73
 1924  ==>>    399
 1937  ==>>     74
 1938  ==>>    242
 1940  ==>>     53
 1942  ==>>     54
 1944  ==>>    303
 1945  ==>>    338
 1946  ==>>    472
 1947  ==>>    355
 1948  ==>>     75
 1954  ==>>    479
 1990  ==>>    405
 2003  ==>>    404
 2004  ==>>    176
 2005  ==>>     77
 2006  ==>>     80
 2007  ==>>     81
 2032  ==>>     82
 2033  ==>>     83
 2035  ==>>     84
 2036  ==>>     85
 2037  ==>>    364
 2038  ==>>     86
 2040  ==>>     87
 2041  ==>>     90
 2042  ==>>     91
 2043  ==>>     92
 2049  ==>>     93
 2050  ==>>     94
 2051  ==>>    351
 2052  ==>>    381
 2053  ==>>     96
 2054  ==>>    103
 2060  ==>>    383
 2114  ==>>    105
 2115  ==>>    393
 2117  ==>>    106
 2119  ==>>    387
 2120  ==>>    109
 2121  ==>>    111
 2122  ==>>    114
 2123  ==>>     16
 2128  ==>>     52
 2161  ==>>    115
 2169  ==>>    116
 2174  ==>>    117
 2175  ==>>    118
 2177  ==>>    119
 2180  ==>>    120
 2204  ==>>     64
 2207  ==>>    121
 2208  ==>>    122
 2210  ==>>    123
 2213  ==>>    133
 2246  ==>>    124
 2249  ==>>    410
 2250  ==>>    126
 2251  ==>>    129
 2252  ==>>    130
 2253  ==>>    138
 2254  ==>>    141
 2255  ==>>    143
 2256  ==>>    144
 2257  ==>>    145
 2259  ==>>    146
 2260  ==>>    148
 2261  ==>>    157
 2262  ==>>    159
 2263  ==>>    162
 2264  ==>>    164
 2265  ==>>    165
 2266  ==>>    168
 2289  ==>>    169
 2295  ==>>    170
 2296  ==>>    172
 2297  ==>>    173
 2298  ==>>    174
 2299  ==>>    175
 2300  ==>>    186
 2301  ==>>    196
 2305  ==>>    160
 2339  ==>>    197
 2340  ==>>    199
 2356  ==>>    200
 2357  ==>>    202
 2358  ==>>    203
 2359  ==>>    205
 2360  ==>>    212
 2361  ==>>    213
 2362  ==>>    217
 2363  ==>>    218
 2364  ==>>    219
 2366  ==>>    221
 2367  ==>>    225
 2368  ==>>    226
 2369  ==>>    424
 2370  ==>>    252
 2401  ==>>    228
 2402  ==>>    230
 2403  ==>>    234
 2406  ==>>    235
 2407  ==>>    236
 2408  ==>>    237
 2409  ==>>    239
 2410  ==>>    241
 2411  ==>>    243
 2412  ==>>    254
 2413  ==>>    256
 2415  ==>>    257
 2416  ==>>    258
 2417  ==>>    259
 2418  ==>>    260
 2419  ==>>    261
 2420  ==>>    262
 2421  ==>>    264
 2446  ==>>    365
 2477  ==>>    265
 2478  ==>>    267
 2479  ==>>    268
 2482  ==>>    269
 2485  ==>>    270
 2486  ==>>    271
 2487  ==>>    272
 2488  ==>>    273
 2489  ==>>    274
 2490  ==>>    275
 2492  ==>>    277
 2493  ==>>    279
 2494  ==>>    283
 2495  ==>>    285
 2496  ==>>    286
 2497  ==>>    287
 2498  ==>>    289
 2499  ==>>    296
 2523  ==>>    301
 2524  ==>>    307
 2525  ==>>    308
 2526  ==>>    309
 2527  ==>>    311
 2528  ==>>    315
 2529  ==>>    316
 2530  ==>>    317
 2531  ==>>    318
 2532  ==>>    319
 2533  ==>>    320
 2534  ==>>    321
 2535  ==>>    322
 2536  ==>>    323
 2537  ==>>    325
 2538  ==>>    327
 2541  ==>>    367
 2572  ==>>    332
 2573  ==>>    333
 2574  ==>>    335
 2577  ==>>    340
 2578  ==>>    341
 2579  ==>>    344
 2580  ==>>    345
 2581  ==>>    346
 2582  ==>>    348
 2583  ==>>    350
 2584  ==>>    352
 2585  ==>>    356
 2586  ==>>    358
 2587  ==>>    362
 2588  ==>>    372
 2589  ==>>    373
 2590  ==>>    374
 2591  ==>>    375
 2592  ==>>    376
 2593  ==>>    378
 2594  ==>>    379
 2617  ==>>    447
 2648  ==>>    380
 2649  ==>>    382
 2650  ==>>    386
 2653  ==>>    389
 2654  ==>>    391
 2655  ==>>    392
 2656  ==>>    397
 2657  ==>>    398
 2658  ==>>    400
 2659  ==>>    401
 2660  ==>>    402
 2661  ==>>    403
 2662  ==>>    406
 2663  ==>>    407
 2664  ==>>    408
 2665  ==>>    418
 2666  ==>>    419
 2667  ==>>    420
 2668  ==>>    421
 2669  ==>>    422
 2670  ==>>    426
 2693  ==>>    238
 2727  ==>>    428
 2728  ==>>    429
 2744  ==>>    284
 2785  ==>>     97
 2787  ==>>    154
 2797  ==>>    251
 2799  ==>>    430
 2800  ==>>    438
 2802  ==>>    432
 2803  ==>>    439
 2804  ==>>    442
 2805  ==>>    446
 2806  ==>>    451
 2807  ==>>    452
 2808  ==>>    453
 2809  ==>>    454
 2812  ==>>    128
 2853  ==>>    455
 2854  ==>>    456
 2856  ==>>    457
 2865  ==>>    458
 2866  ==>>    460
 2867  ==>>    461
 2868  ==>>    462
 2869  ==>>    465
 2870  ==>>    466
 2871  ==>>    467
 2872  ==>>    471
 2873  ==>>    474
 2874  ==>>    475
 2875  ==>>    476
 2876  ==>>    478
 2939  ==>>    244
 2992  ==>>    304
 3043  ==>>    444
 3044  ==>>    463
 3052  ==>>    359
 3111  ==>>    330
 3201  ==>>    331
 3254  ==>>     41
 3291  ==>>    336
 3344  ==>>     42
 3381  ==>>    337
 3434  ==>>    107
 3471  ==>>    377
 3524  ==>>    423
 3620  ==>>    425
 3673  ==>>    108
 3710  ==>>    434
 3763  ==>>    112
 3800  ==>>    435
 3853  ==>>    113
 3890  ==>>    445
 3943  ==>>    179
 3980  ==>>    464
 4033  ==>>    180
 4070  ==>>    477
 4121  ==>>     55
 4189  ==>>    249
 4242  ==>>    181
 4277  ==>>    448
 4345  ==>>     28
 4398  ==>>    324
 4433  ==>>     50
 4486  ==>>     57
 4539  ==>>    101
 4592  ==>>    102
 4645  ==>>    110
 4698  ==>>    137
 4751  ==>>    139
 4804  ==>>    142
 4857  ==>>    147
 4910  ==>>    193
 4963  ==>>    208
 5016  ==>>    216
 5069  ==>>    248
 5122  ==>>    278
 5175  ==>>    291
 5228  ==>>    369
 5281  ==>>    370
 5334  ==>>    104
 5386  ==>>    100
 5418  ==>>    206
 5419  ==>>    209
 5431  ==>>    310
 5435  ==>>    416
 5437  ==>>    134
 5442  ==>>    295
 5489  ==>>    368
 5520  ==>>    135
 5589  ==>>    328
 5673  ==>>    194
 5722  ==>>    195
 5770  ==>>    191
 5817  ==>>    192
 5861  ==>>    385
 5863  ==>>    188
 5897  ==>>      5
 5904  ==>>    255
 5964  ==>>     20
 5992  ==>>    132
 6035  ==>>    339
 6045  ==>>    189
 6085  ==>>    190
 6119  ==>>    417
 6181  ==>>    443
 6329  ==>>    183
 6368  ==>>    184
 6407  ==>>    185
 6446  ==>>    263
 6485  ==>>    366
 6541  ==>>    469
 6580  ==>>     78
 6597  ==>>    294
 6726  ==>>    187
 6764  ==>>    266
 6802  ==>>    326
 6840  ==>>    177
 6877  ==>>    178
 6911  ==>>    412
 6914  ==>>    250
 6966  ==>>    354
 6981  ==>>    297
 7035  ==>>    441
 7091  ==>>    411
 7146  ==>>      9
 7200  ==>>     88
 7209  ==>>      1
 7213  ==>>    353
 7217  ==>>    394

Actions in Compressed Tables:
     Number of Shifts: 618
     Number of Shift/Reduces: 683
     Number of Gotos: 2215
     Number of Goto/Reduces: 3193
     Number of Reduces: 302
     Number of Defaults: 161

Parsing Tables storage:
    Storage required for BASE_CHECK: 14832 Bytes
    Storage required for BASE_ACTION: 14834 Bytes
    Storage required for TERM_CHECK: 2103 Bytes
    Storage required for TERM_ACTION: 4122 Bytes

Error maps storage:
    Storage required for ACTION_SYMBOLS_BASE map: 960 Bytes
    Storage required for ACTION_SYMBOLS_RANGE map: 1032 Bytes
    Storage required for NACTION_SYMBOLS_BASE map: 960 Bytes
    Storage required for NACTION_SYMBOLS_RANGE map: 424 Bytes
    Storage required for TERMINAL_INDEX map: 240 Bytes
    Storage required for NON_TERMINAL_INDEX map: 500 Bytes

    Storage required for SCOPE_PREFIX map: 168 Bytes
    Storage required for SCOPE_SUFFIX map: 168 Bytes
    Storage required for SCOPE_LHS_SYMBOL map: 168 Bytes
    Storage required for SCOPE_LOOK_AHEAD map: 84 Bytes
    Storage required for SCOPE_STATE_SET map: 168 Bytes
    Storage required for SCOPE_RIGHT_SIDE map: 928 Bytes
    Storage required for SCOPE_STATE map: 614 Bytes
    Storage required for IN_SYMB map: 960 Bytes

    Number of names: 253
    Number of characters in name: 2731
